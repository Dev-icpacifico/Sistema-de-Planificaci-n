Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"465aa15a-6415-4db5-a82d-d3bafe5319b0\" name=\"Changes\" comment=\"Creación de modelos preliminares\">\r\n      <change afterPath=\"$PROJECT_DIR$/PlanningMamagement/prueba-frontend.txt\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Python Script\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$\" value=\"desarrollo\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"GitHubPullRequestSearchHistory\">{\r\n  &quot;lastFilter&quot;: {\r\n    &quot;state&quot;: &quot;OPEN&quot;,\r\n    &quot;assignee&quot;: &quot;icpacifico&quot;\r\n  }\r\n}</component>\r\n  <component name=\"GithubPullRequestsUISettings\">{\r\n  &quot;selectedUrlAndAccountId&quot;: {\r\n    &quot;url&quot;: &quot;https://github.com/icpacifico/Sistema-de-Planificaci-n.git&quot;,\r\n    &quot;accountId&quot;: &quot;a5fa756b-6546-4e30-ac58-c207af8e1f35&quot;\r\n  }\r\n}</component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 3\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2lQPz5OogMgq7QQMQEGgItZ1Lad\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\">\r\n    <ConfirmationsSetting value=\"2\" id=\"Add\" />\r\n  </component>\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\"><![CDATA[{\r\n  \"keyToString\": {\r\n    \"ASKED_ADD_EXTERNAL_FILES\": \"true\",\r\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\r\n    \"git-widget-placeholder\": \"dev-frontend\",\r\n    \"last_opened_file_path\": \"C:/Users/Luis Pizarro/PycharmProjects/SistemaDeOperaciones\",\r\n    \"settings.editor.selected.configurable\": \"configurable.group.appearance\"\r\n  }\r\n}]]></component>\r\n  <component name=\"SharedIndexes\">\r\n    <attachedChunks>\r\n      <set>\r\n        <option value=\"bundled-python-sdk-975db3bf15a3-31b6be0877a2-com.jetbrains.pycharm.community.sharedIndexes.bundled-PC-241.18034.82\" />\r\n      </set>\r\n    </attachedChunks>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"465aa15a-6415-4db5-a82d-d3bafe5319b0\" name=\"Changes\" comment=\"\" />\r\n      <created>1725109585446</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1725109585446</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"First Commit\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1725898454218</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1725898454218</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"2\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <option name=\"ADD_EXTERNAL_FILES_SILENTLY\" value=\"true\" />\r\n    <MESSAGE value=\"First Commit\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"First Commit\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision c674fc620b67f6f2f98eb12bdf01fd962de078f1)
+++ b/.idea/workspace.xml	(date 1728394181197)
@@ -4,8 +4,121 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="465aa15a-6415-4db5-a82d-d3bafe5319b0" name="Changes" comment="Creación de modelos preliminares">
-      <change afterPath="$PROJECT_DIR$/PlanningMamagement/prueba-frontend.txt" afterDir="false" />
+    <list default="true" id="465aa15a-6415-4db5-a82d-d3bafe5319b0" name="Changes" comment="Creación rama para frontend">
+      <change afterPath="$PROJECT_DIR$/PlanningMamagement/frontend/.browserslistrc" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/PlanningMamagement/frontend/.editorconfig" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/PlanningMamagement/frontend/.eslintrc.js" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/PlanningMamagement/frontend/.gitattributes" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/PlanningMamagement/frontend/.gitignore" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/PlanningMamagement/frontend/.prettierignore" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/PlanningMamagement/frontend/.prettierrc.js" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/PlanningMamagement/frontend/LICENSE" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/PlanningMamagement/frontend/README.md" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/PlanningMamagement/frontend/index.html" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/PlanningMamagement/frontend/package-lock.json" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/PlanningMamagement/frontend/package.json" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/PlanningMamagement/frontend/public/favicon.ico" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/PlanningMamagement/frontend/public/index.html" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/PlanningMamagement/frontend/public/logo192.png" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/PlanningMamagement/frontend/public/logo512.png" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/PlanningMamagement/frontend/public/manifest.json" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/PlanningMamagement/frontend/public/robots.txt" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/PlanningMamagement/frontend/src/App.css" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/PlanningMamagement/frontend/src/App.js" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/PlanningMamagement/frontend/src/App.test.js" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/PlanningMamagement/frontend/src/_nav.js" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/PlanningMamagement/frontend/src/assets/brand/logo.js" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/PlanningMamagement/frontend/src/assets/brand/sygnet.js" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/PlanningMamagement/frontend/src/assets/images/angular.jpg" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/PlanningMamagement/frontend/src/assets/images/avatars/1.jpg" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/PlanningMamagement/frontend/src/assets/images/avatars/2.jpg" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/PlanningMamagement/frontend/src/assets/images/avatars/3.jpg" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/PlanningMamagement/frontend/src/assets/images/avatars/4.jpg" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/PlanningMamagement/frontend/src/assets/images/avatars/5.jpg" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/PlanningMamagement/frontend/src/assets/images/avatars/6.jpg" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/PlanningMamagement/frontend/src/assets/images/avatars/7.jpg" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/PlanningMamagement/frontend/src/assets/images/avatars/8.jpg" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/PlanningMamagement/frontend/src/assets/images/avatars/9.jpg" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/PlanningMamagement/frontend/src/assets/images/react.jpg" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/PlanningMamagement/frontend/src/assets/images/vue.jpg" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/PlanningMamagement/frontend/src/components/AppBreadcrumb.js" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/PlanningMamagement/frontend/src/components/AppContent.js" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/PlanningMamagement/frontend/src/components/AppFooter.js" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/PlanningMamagement/frontend/src/components/AppHeader.js" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/PlanningMamagement/frontend/src/components/AppSidebar.js" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/PlanningMamagement/frontend/src/components/AppSidebarNav.js" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/PlanningMamagement/frontend/src/components/DocsCallout.js" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/PlanningMamagement/frontend/src/components/DocsExample.js" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/PlanningMamagement/frontend/src/components/DocsLink.js" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/PlanningMamagement/frontend/src/components/header/AppHeaderDropdown.js" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/PlanningMamagement/frontend/src/components/header/index.js" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/PlanningMamagement/frontend/src/components/index.js" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/PlanningMamagement/frontend/src/index.css" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/PlanningMamagement/frontend/src/index.js" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/PlanningMamagement/frontend/src/layout/DefaultLayout.js" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/PlanningMamagement/frontend/src/logo.svg" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/PlanningMamagement/frontend/src/reportWebVitals.js" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/PlanningMamagement/frontend/src/routes.js" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/PlanningMamagement/frontend/src/scss/_custom.scss" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/PlanningMamagement/frontend/src/scss/_theme.scss" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/PlanningMamagement/frontend/src/scss/_variables.scss" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/PlanningMamagement/frontend/src/scss/examples.scss" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/PlanningMamagement/frontend/src/scss/style.scss" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/PlanningMamagement/frontend/src/scss/vendors/simplebar.scss" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/PlanningMamagement/frontend/src/setupTests.js" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/PlanningMamagement/frontend/src/store.js" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/PlanningMamagement/frontend/src/views/base/accordion/Accordion.js" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/PlanningMamagement/frontend/src/views/base/breadcrumbs/Breadcrumbs.js" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/PlanningMamagement/frontend/src/views/base/cards/Cards.js" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/PlanningMamagement/frontend/src/views/base/carousels/Carousels.js" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/PlanningMamagement/frontend/src/views/base/collapses/Collapses.js" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/PlanningMamagement/frontend/src/views/base/index.js" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/PlanningMamagement/frontend/src/views/base/jumbotrons/Jumbotrons.js" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/PlanningMamagement/frontend/src/views/base/list-groups/ListGroups.js" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/PlanningMamagement/frontend/src/views/base/navbars/Navbars.js" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/PlanningMamagement/frontend/src/views/base/navs/Navs.js" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/PlanningMamagement/frontend/src/views/base/paginations/Paginations.js" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/PlanningMamagement/frontend/src/views/base/placeholders/Placeholders.js" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/PlanningMamagement/frontend/src/views/base/popovers/Popovers.js" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/PlanningMamagement/frontend/src/views/base/progress/Progress.js" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/PlanningMamagement/frontend/src/views/base/spinners/Spinners.js" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/PlanningMamagement/frontend/src/views/base/tables/Tables.js" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/PlanningMamagement/frontend/src/views/base/tabs/Tabs.js" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/PlanningMamagement/frontend/src/views/base/tooltips/Tooltips.js" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/PlanningMamagement/frontend/src/views/buttons/button-groups/ButtonGroups.js" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/PlanningMamagement/frontend/src/views/buttons/buttons/Buttons.js" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/PlanningMamagement/frontend/src/views/buttons/dropdowns/Dropdowns.js" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/PlanningMamagement/frontend/src/views/buttons/index.js" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/PlanningMamagement/frontend/src/views/charts/Charts.js" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/PlanningMamagement/frontend/src/views/dashboard/Dashboard.js" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/PlanningMamagement/frontend/src/views/dashboard/MainChart.js" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/PlanningMamagement/frontend/src/views/forms/checks-radios/ChecksRadios.js" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/PlanningMamagement/frontend/src/views/forms/floating-labels/FloatingLabels.js" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/PlanningMamagement/frontend/src/views/forms/form-control/FormControl.js" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/PlanningMamagement/frontend/src/views/forms/input-group/InputGroup.js" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/PlanningMamagement/frontend/src/views/forms/layout/Layout.js" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/PlanningMamagement/frontend/src/views/forms/range/Range.js" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/PlanningMamagement/frontend/src/views/forms/select/Select.js" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/PlanningMamagement/frontend/src/views/forms/validation/Validation.js" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/PlanningMamagement/frontend/src/views/icons/brands/Brands.js" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/PlanningMamagement/frontend/src/views/icons/coreui-icons/CoreUIIcons.js" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/PlanningMamagement/frontend/src/views/icons/flags/Flags.js" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/PlanningMamagement/frontend/src/views/icons/index.js" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/PlanningMamagement/frontend/src/views/notifications/alerts/Alerts.js" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/PlanningMamagement/frontend/src/views/notifications/badges/Badges.js" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/PlanningMamagement/frontend/src/views/notifications/index.js" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/PlanningMamagement/frontend/src/views/notifications/modals/Modals.js" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/PlanningMamagement/frontend/src/views/notifications/toasts/Toasts.js" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/PlanningMamagement/frontend/src/views/pages/login/Login.js" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/PlanningMamagement/frontend/src/views/pages/page404/Page404.js" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/PlanningMamagement/frontend/src/views/pages/page500/Page500.js" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/PlanningMamagement/frontend/src/views/pages/register/Register.js" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/PlanningMamagement/frontend/src/views/theme/colors/Colors.js" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/PlanningMamagement/frontend/src/views/theme/typography/Typography.js" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/PlanningMamagement/frontend/src/views/widgets/Widgets.js" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/PlanningMamagement/frontend/src/views/widgets/WidgetsBrand.js" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/PlanningMamagement/frontend/src/views/widgets/WidgetsDropdown.js" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/PlanningMamagement/frontend/vite.config.mjs" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
@@ -40,6 +153,9 @@
     &quot;accountId&quot;: &quot;a5fa756b-6546-4e30-ac58-c207af8e1f35&quot;
   }
 }</component>
+  <component name="PackageJsonUpdateNotifier">
+    <dismissed value="$PROJECT_DIR$/PlanningMamagement/frontend/package.json" />
+  </component>
   <component name="ProjectColorInfo">{
   &quot;associatedIndex&quot;: 3
 }</component>
@@ -57,13 +173,19 @@
     "RunOnceActivity.ShowReadmeOnStart": "true",
     "git-widget-placeholder": "dev-frontend",
     "last_opened_file_path": "C:/Users/Luis Pizarro/PycharmProjects/SistemaDeOperaciones",
+    "node.js.detected.package.eslint": "true",
+    "node.js.detected.package.standard": "true",
+    "node.js.selected.package.eslint": "(autodetect)",
+    "node.js.selected.package.standard": "",
+    "node.js.selected.package.tslint": "(autodetect)",
     "settings.editor.selected.configurable": "configurable.group.appearance"
   }
 }]]></component>
   <component name="SharedIndexes">
     <attachedChunks>
       <set>
-        <option value="bundled-python-sdk-975db3bf15a3-31b6be0877a2-com.jetbrains.pycharm.community.sharedIndexes.bundled-PC-241.18034.82" />
+        <option value="bundled-js-predefined-d6986cc7102b-5c90d61e3bab-JavaScript-PY-242.23339.19" />
+        <option value="bundled-python-sdk-0029f7779945-399fe30bd8c1-com.jetbrains.pycharm.pro.sharedIndexes.bundled-PY-242.23339.19" />
       </set>
     </attachedChunks>
   </component>
@@ -75,6 +197,7 @@
       <option name="number" value="Default" />
       <option name="presentableId" value="Default" />
       <updated>1725109585446</updated>
+      <workItem from="1728390676346" duration="3439000" />
     </task>
     <task id="LOCAL-00001" summary="First Commit">
       <option name="closed" value="true" />
@@ -84,9 +207,20 @@
       <option name="project" value="LOCAL" />
       <updated>1725898454218</updated>
     </task>
-    <option name="localTasksCounter" value="2" />
+    <task id="LOCAL-00002" summary="Creación rama para frontend">
+      <option name="closed" value="true" />
+      <created>1728391174645</created>
+      <option name="number" value="00002" />
+      <option name="presentableId" value="LOCAL-00002" />
+      <option name="project" value="LOCAL" />
+      <updated>1728391174645</updated>
+    </task>
+    <option name="localTasksCounter" value="3" />
     <servers />
   </component>
+  <component name="TypeScriptGeneratedFilesManager">
+    <option name="version" value="3" />
+  </component>
   <component name="Vcs.Log.Tabs.Properties">
     <option name="TAB_STATES">
       <map>
@@ -101,6 +235,18 @@
   <component name="VcsManagerConfiguration">
     <option name="ADD_EXTERNAL_FILES_SILENTLY" value="true" />
     <MESSAGE value="First Commit" />
-    <option name="LAST_COMMIT_MESSAGE" value="First Commit" />
+    <MESSAGE value="Creación rama para frontend" />
+    <option name="LAST_COMMIT_MESSAGE" value="Creación rama para frontend" />
+  </component>
+  <component name="XDebuggerManager">
+    <breakpoint-manager>
+      <breakpoints>
+        <line-breakpoint enabled="true" type="javascript">
+          <url>file://$PROJECT_DIR$/PlanningMamagement/frontend/src/index.js</url>
+          <properties lambdaOrdinal="-1" />
+          <option name="timeStamp" value="1" />
+        </line-breakpoint>
+      </breakpoints>
+    </breakpoint-manager>
   </component>
 </project>
\ No newline at end of file
Index: PlanningMamagement/frontend/src/views/base/cards/Cards.js
===================================================================
diff --git a/PlanningMamagement/frontend/src/views/base/cards/Cards.js b/PlanningMamagement/frontend/src/views/base/cards/Cards.js
new file mode 100644
--- /dev/null	(date 1728391641802)
+++ b/PlanningMamagement/frontend/src/views/base/cards/Cards.js	(date 1728391641802)
@@ -0,0 +1,934 @@
+import React from 'react'
+import {
+  CButton,
+  CCard,
+  CCardBody,
+  CCardFooter,
+  CCardGroup,
+  CCardHeader,
+  CCardImage,
+  CCardLink,
+  CCardSubtitle,
+  CCardText,
+  CCardTitle,
+  CListGroup,
+  CListGroupItem,
+  CNav,
+  CNavItem,
+  CNavLink,
+  CCol,
+  CRow,
+} from '@coreui/react'
+import { DocsExample } from 'src/components'
+
+import ReactImg from 'src/assets/images/react.jpg'
+
+const Cards = () => {
+  return (
+    <CRow>
+      <CCol xs={12}>
+        <CCard className="mb-4">
+          <CCardHeader>
+            <strong>Card</strong> <small>Example</small>
+          </CCardHeader>
+          <CCardBody>
+            <p className="text-body-secondary small">
+              Cards are built with as little markup and styles as possible but still manage to
+              deliver a bunch of control and customization. Built with flexbox, they offer easy
+              alignment and mix well with other CoreUI components. Cards have no top, left, and
+              right margins by default, so use{' '}
+              <a href="https://coreui.io/docs/utilities/spacing">spacing utilities</a> as needed.
+              They have no fixed width to start, so they&#39;ll fill the full width of its parent.
+            </p>
+            <p className="text-body-secondary small">
+              Below is an example of a basic card with mixed content and a fixed width. Cards have
+              no fixed width to start, so they&#39;ll naturally fill the full width of its parent
+              element.
+            </p>
+            <DocsExample href="components/card">
+              <CCard style={{ width: '18rem' }}>
+                <CCardImage orientation="top" src={ReactImg} />
+                <CCardBody>
+                  <CCardTitle>Card title</CCardTitle>
+                  <CCardText>
+                    Some quick example text to build on the card title and make up the bulk of the
+                    card&#39;s content.
+                  </CCardText>
+                  <CButton color="primary" href="#">
+                    Go somewhere
+                  </CButton>
+                </CCardBody>
+              </CCard>
+            </DocsExample>
+          </CCardBody>
+        </CCard>
+      </CCol>
+      <CCol xs={12}>
+        <CCard className="mb-4">
+          <CCardHeader>
+            <strong>Card</strong> <small>Body</small>
+          </CCardHeader>
+          <CCardBody>
+            <p className="text-body-secondary small">
+              The main block of a card is the <code>&lt;CCardBody&gt;</code>. Use it whenever you
+              need a padded section within a card.
+            </p>
+            <DocsExample href="components/card/#body">
+              <CCard>
+                <CCardBody>This is some text within a card body.</CCardBody>
+              </CCard>
+            </DocsExample>
+          </CCardBody>
+        </CCard>
+      </CCol>
+      <CCol xs={12}>
+        <CCard className="mb-4">
+          <CCardHeader>
+            <strong>Card</strong> <small>Titles, text, and links</small>
+          </CCardHeader>
+          <CCardBody>
+            <p className="text-body-secondary small">
+              Card titles are managed by <code>&lt;CCardTitle&gt;</code> component. Identically,
+              links are attached and collected next to each other by <code>&lt;CCardLink&gt;</code>{' '}
+              component.
+            </p>
+            <p className="text-body-secondary small">
+              Subtitles are managed by <code>&lt;CCardSubtitle&gt;</code> component. If the{' '}
+              <code>&lt;CCardTitle&gt;</code> also, the <code>&lt;CCardSubtitle&gt;</code> items are
+              stored in a <code>&lt;CCardBody&gt;</code> item, the card title, and subtitle are
+              arranged rightly.
+            </p>
+            <DocsExample href="components/card/#titles-text-and-links">
+              <CCard style={{ width: '18rem' }}>
+                <CCardBody>
+                  <CCardTitle>Card title</CCardTitle>
+                  <CCardSubtitle className="mb-2 text-body-secondary">Card subtitle</CCardSubtitle>
+                  <CCardText>
+                    Some quick example text to build on the card title and make up the bulk of the
+                    card&#39;s content.
+                  </CCardText>
+                  <CCardLink href="#">Card link</CCardLink>
+                  <CCardLink href="#">Another link</CCardLink>
+                </CCardBody>
+              </CCard>
+            </DocsExample>
+          </CCardBody>
+        </CCard>
+      </CCol>
+      <CCol xs={12}>
+        <CCard className="mb-4">
+          <CCardHeader>
+            <strong>Card</strong> <small>Images</small>
+          </CCardHeader>
+          <CCardBody>
+            <p className="text-body-secondary small">
+              <code>.card-img-top</code> places a picture to the top of the card. With{' '}
+              <code>.card-text</code>, text can be added to the card. Text within{' '}
+              <code>.card-text</code> can additionally be styled with the regular HTML tags.
+            </p>
+            <DocsExample href="components/card/#images">
+              <CCard style={{ width: '18rem' }}>
+                <CCardImage orientation="top" src={ReactImg} />
+                <CCardBody>
+                  <CCardText>
+                    Some quick example text to build on the card title and make up the bulk of the
+                    card&#39;s content.
+                  </CCardText>
+                </CCardBody>
+              </CCard>
+            </DocsExample>
+          </CCardBody>
+        </CCard>
+      </CCol>
+      <CCol xs={12}>
+        <CCard className="mb-4">
+          <CCardHeader>
+            <strong>Card</strong> <small>List groups</small>
+          </CCardHeader>
+          <CCardBody>
+            <p className="text-body-secondary small">
+              Create lists of content in a card with a flush list group.
+            </p>
+            <DocsExample href="components/card/#list-groups">
+              <CRow>
+                <CCol lg={4}>
+                  <CCard>
+                    <CListGroup flush>
+                      <CListGroupItem>Cras justo odio</CListGroupItem>
+                      <CListGroupItem>Dapibus ac facilisis in</CListGroupItem>
+                      <CListGroupItem>Vestibulum at eros</CListGroupItem>
+                    </CListGroup>
+                  </CCard>
+                </CCol>
+                <CCol lg={4}>
+                  <CCard>
+                    <CCardHeader>Header</CCardHeader>
+                    <CListGroup flush>
+                      <CListGroupItem>Cras justo odio</CListGroupItem>
+                      <CListGroupItem>Dapibus ac facilisis in</CListGroupItem>
+                      <CListGroupItem>Vestibulum at eros</CListGroupItem>
+                    </CListGroup>
+                  </CCard>
+                </CCol>
+                <CCol lg={4}>
+                  <CCard>
+                    <CListGroup flush>
+                      <CListGroupItem>Cras justo odio</CListGroupItem>
+                      <CListGroupItem>Dapibus ac facilisis in</CListGroupItem>
+                      <CListGroupItem>Vestibulum at eros</CListGroupItem>
+                    </CListGroup>
+                    <CCardFooter>Footer</CCardFooter>
+                  </CCard>
+                </CCol>
+              </CRow>
+            </DocsExample>
+          </CCardBody>
+        </CCard>
+      </CCol>
+      <CCol xs={12}>
+        <CCard className="mb-4">
+          <CCardHeader>
+            <strong>Card</strong> <small>Kitchen sink</small>
+          </CCardHeader>
+          <CCardBody>
+            <p className="text-body-secondary small">
+              Combine and match many content types to build the card you need, or throw everything
+              in there. Shown below are image styles, blocks, text styles, and a list group—all
+              wrapped in a fixed-width card.
+            </p>
+            <DocsExample href="components/card/#kitchen-sink">
+              <CCard style={{ width: '18rem' }}>
+                <CCardImage orientation="top" src={ReactImg} />
+                <CCardBody>
+                  <CCardTitle>Card title</CCardTitle>
+                  <CCardText>
+                    Some quick example text to build on the card title and make up the bulk of the
+                    card&#39;s content.
+                  </CCardText>
+                </CCardBody>
+                <CListGroup flush>
+                  <CListGroupItem>Cras justo odio</CListGroupItem>
+                  <CListGroupItem>Dapibus ac facilisis in</CListGroupItem>
+                  <CListGroupItem>Vestibulum at eros</CListGroupItem>
+                </CListGroup>
+                <CCardBody>
+                  <CCardLink href="#">Card link</CCardLink>
+                  <CCardLink href="#">Another link</CCardLink>
+                </CCardBody>
+              </CCard>
+            </DocsExample>
+          </CCardBody>
+        </CCard>
+      </CCol>
+      <CCol xs={12}>
+        <CCard className="mb-4">
+          <CCardHeader>
+            <strong>Card</strong> <small>Header and footer</small>
+          </CCardHeader>
+          <CCardBody>
+            <p className="text-body-secondary small">
+              Add an optional header and/or footer within a card.
+            </p>
+            <DocsExample href="components/card/#header-and-footer">
+              <CCard>
+                <CCardHeader>Header</CCardHeader>
+                <CCardBody>
+                  <CCardTitle>Special title treatment</CCardTitle>
+                  <CCardText>
+                    With supporting text below as a natural lead-in to additional content.
+                  </CCardText>
+                  <CButton color="primary" href="#">
+                    Go somewhere
+                  </CButton>
+                </CCardBody>
+              </CCard>
+            </DocsExample>
+            <p className="text-body-secondary small">
+              Card headers can be styled by adding ex. <code>component=&#34;h5&#34;</code>.
+            </p>
+            <DocsExample href="components/card/#header-and-footer">
+              <CCard>
+                <CCardHeader as="h5">Header</CCardHeader>
+                <CCardBody>
+                  <CCardTitle>Special title treatment</CCardTitle>
+                  <CCardText>
+                    With supporting text below as a natural lead-in to additional content.
+                  </CCardText>
+                  <CButton color="primary" href="#">
+                    Go somewhere
+                  </CButton>
+                </CCardBody>
+              </CCard>
+            </DocsExample>
+            <DocsExample href="components/card/#header-and-footer">
+              <CCard>
+                <CCardHeader>Quote</CCardHeader>
+                <CCardBody>
+                  <blockquote className="blockquote mb-0">
+                    <p>
+                      Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer posuere erat
+                      a ante.
+                    </p>
+                    <footer className="blockquote-footer">
+                      Someone famous in <cite title="Source Title">Source Title</cite>
+                    </footer>
+                  </blockquote>
+                </CCardBody>
+              </CCard>
+            </DocsExample>
+            <DocsExample href="components/card/#header-and-footer">
+              <CCard className="text-center">
+                <CCardHeader>Header</CCardHeader>
+                <CCardBody>
+                  <CCardTitle>Special title treatment</CCardTitle>
+                  <CCardText>
+                    With supporting text below as a natural lead-in to additional content.
+                  </CCardText>
+                  <CButton color="primary" href="#">
+                    Go somewhere
+                  </CButton>
+                </CCardBody>
+                <CCardFooter className="text-body-secondary">2 days ago</CCardFooter>
+              </CCard>
+            </DocsExample>
+          </CCardBody>
+        </CCard>
+      </CCol>
+      <CCol xs={12}>
+        <CCard className="mb-4">
+          <CCardHeader>
+            <strong>Card</strong> <small>Body</small>
+          </CCardHeader>
+          <CCardBody>
+            <p className="text-body-secondary small">
+              Cards assume no specific <code>width</code> to start, so they&#39;ll be 100% wide
+              unless otherwise stated. You can adjust this as required with custom CSS, grid
+              classes, grid Sass mixins, or services.
+            </p>
+            <h3>Using grid markup</h3>
+            <p className="text-body-secondary small">
+              Using the grid, wrap cards in columns and rows as needed.
+            </p>
+            <DocsExample href="components/card/#sizing">
+              <CRow>
+                <CCol sm={6}>
+                  <CCard>
+                    <CCardBody>
+                      <CCardTitle>Special title treatment</CCardTitle>
+                      <CCardText>
+                        With supporting text below as a natural lead-in to additional content.
+                      </CCardText>
+                      <CButton color="primary" href="#">
+                        Go somewhere
+                      </CButton>
+                    </CCardBody>
+                  </CCard>
+                </CCol>
+                <CCol sm={6}>
+                  <CCard>
+                    <CCardBody>
+                      <CCardTitle>Special title treatment</CCardTitle>
+                      <CCardText>
+                        With supporting text below as a natural lead-in to additional content.
+                      </CCardText>
+                      <CButton color="primary" href="#">
+                        Go somewhere
+                      </CButton>
+                    </CCardBody>
+                  </CCard>
+                </CCol>
+              </CRow>
+            </DocsExample>
+            <h3>Using utilities</h3>
+            <p className="text-body-secondary small">
+              Use some of{' '}
+              <a href="https://coreui.io/docs/utilities/sizing/">available sizing utilities</a> to
+              rapidly set a card&#39;s width.
+            </p>
+            <DocsExample href="components/card/#sizing">
+              <CCard className="w-75">
+                <CCardBody>
+                  <CCardTitle>Card title</CCardTitle>
+                  <CCardText>
+                    With supporting text below as a natural lead-in to additional content.
+                  </CCardText>
+                  <CButton color="primary" href="#">
+                    Go somewhere
+                  </CButton>
+                </CCardBody>
+              </CCard>
+              <CCard className="w-50">
+                <CCardBody>
+                  <CCardTitle>Card title</CCardTitle>
+                  <CCardText>
+                    With supporting text below as a natural lead-in to additional content.
+                  </CCardText>
+                  <CButton color="primary" href="#">
+                    Go somewhere
+                  </CButton>
+                </CCardBody>
+              </CCard>
+            </DocsExample>
+            <strong>Using custom CSS</strong>
+            <p className="text-body-secondary small">
+              Use custom CSS in your stylesheets or as inline styles to set a width.
+            </p>
+            <DocsExample href="components/card/#sizing">
+              <CCard style={{ width: '18rem' }}>
+                <CCardBody>
+                  <CCardTitle>Special title treatment</CCardTitle>
+                  <CCardText>
+                    With supporting text below as a natural lead-in to additional content.
+                  </CCardText>
+                  <CButton color="primary" href="#">
+                    Go somewhere
+                  </CButton>
+                </CCardBody>
+              </CCard>
+            </DocsExample>
+          </CCardBody>
+        </CCard>
+      </CCol>
+      <CCol xs={12}>
+        <CCard className="mb-4">
+          <CCardHeader>
+            <strong>Card</strong> <small>Text alignment</small>
+          </CCardHeader>
+          <CCardBody>
+            <p className="text-body-secondary small">
+              You can instantly change the text arrangement of any card—in its whole or specific
+              parts—with{' '}
+              <a href="https://coreui.io/docs/utilities/text/#text-alignment">text align classes</a>
+              .
+            </p>
+            <DocsExample href="components/card/#text-alignment">
+              <CCard style={{ width: '18rem' }}>
+                <CCardBody>
+                  <CCardTitle>Special title treatment</CCardTitle>
+                  <CCardText>
+                    With supporting text below as a natural lead-in to additional content.
+                  </CCardText>
+                  <CButton color="primary" href="#">
+                    Go somewhere
+                  </CButton>
+                </CCardBody>
+              </CCard>
+              <CCard className="text-center" style={{ width: '18rem' }}>
+                <CCardBody>
+                  <CCardTitle>Special title treatment</CCardTitle>
+                  <CCardText>
+                    With supporting text below as a natural lead-in to additional content.
+                  </CCardText>
+                  <CButton color="primary" href="#">
+                    Go somewhere
+                  </CButton>
+                </CCardBody>
+              </CCard>
+              <CCard className="text-end" style={{ width: '18rem' }}>
+                <CCardBody>
+                  <CCardTitle>Special title treatment</CCardTitle>
+                  <CCardText>
+                    With supporting text below as a natural lead-in to additional content.
+                  </CCardText>
+                  <CButton color="primary" href="#">
+                    Go somewhere
+                  </CButton>
+                </CCardBody>
+              </CCard>
+            </DocsExample>
+          </CCardBody>
+        </CCard>
+      </CCol>
+      <CCol xs={12}>
+        <CCard className="mb-4">
+          <CCardHeader>
+            <strong>Card</strong> <small>Navigation</small>
+          </CCardHeader>
+          <CCardBody>
+            <p className="text-body-secondary small">
+              Add some navigation to a <code>&lt;CCardHeader&gt;</code> with our{' '}
+              <code>&lt;CNav&gt;</code> component.
+            </p>
+            <DocsExample href="components/card/##navigation">
+              <CCard className="text-center">
+                <CCardHeader>
+                  <CNav variant="tabs" className="card-header-tabs">
+                    <CNavItem>
+                      <CNavLink href="#" active>
+                        Active
+                      </CNavLink>
+                    </CNavItem>
+                    <CNavItem>
+                      <CNavLink href="#">Link</CNavLink>
+                    </CNavItem>
+                    <CNavItem>
+                      <CNavLink href="#" disabled>
+                        Disabled
+                      </CNavLink>
+                    </CNavItem>
+                  </CNav>
+                </CCardHeader>
+                <CCardBody>
+                  <CCardTitle>Special title treatment</CCardTitle>
+                  <CCardText>
+                    With supporting text below as a natural lead-in to additional content.
+                  </CCardText>
+                  <CButton color="primary" href="#">
+                    Go somewhere
+                  </CButton>
+                </CCardBody>
+              </CCard>
+            </DocsExample>
+            <DocsExample href="components/card/##navigation">
+              <CCard className="text-center">
+                <CCardHeader>
+                  <CNav variant="pills" className="card-header-pills">
+                    <CNavItem>
+                      <CNavLink href="#" active>
+                        Active
+                      </CNavLink>
+                    </CNavItem>
+                    <CNavItem>
+                      <CNavLink href="#">Link</CNavLink>
+                    </CNavItem>
+                    <CNavItem>
+                      <CNavLink href="#" disabled>
+                        Disabled
+                      </CNavLink>
+                    </CNavItem>
+                  </CNav>
+                </CCardHeader>
+                <CCardBody>
+                  <CCardTitle>Special title treatment</CCardTitle>
+                  <CCardText>
+                    With supporting text below as a natural lead-in to additional content.
+                  </CCardText>
+                  <CButton color="primary" href="#">
+                    Go somewhere
+                  </CButton>
+                </CCardBody>
+              </CCard>
+            </DocsExample>
+          </CCardBody>
+        </CCard>
+      </CCol>
+      <CCol xs={12}>
+        <CCard className="mb-4">
+          <CCardHeader>
+            <strong>Card</strong> <small>Image caps</small>
+          </CCardHeader>
+          <CCardBody>
+            <p className="text-body-secondary small">
+              Similar to headers and footers, cards can include top and bottom &#34;image
+              caps&#34;—images at the top or bottom of a card.
+            </p>
+            <DocsExample href="components/card/#image-caps">
+              <CRow>
+                <CCol lg={6}>
+                  <CCard className="mb-3">
+                    <CCardImage orientation="top" src={ReactImg} />
+                    <CCardBody>
+                      <CCardTitle>Card title</CCardTitle>
+                      <CCardText>
+                        This is a wider card with supporting text below as a natural lead-in to
+                        additional content. This content is a little bit longer.
+                      </CCardText>
+                      <CCardText>
+                        <small className="text-body-secondary">Last updated 3 mins ago</small>
+                      </CCardText>
+                    </CCardBody>
+                  </CCard>
+                </CCol>
+                <CCol lg={6}>
+                  <CCard className="mb-3">
+                    <CCardBody>
+                      <CCardTitle>Card title</CCardTitle>
+                      <CCardText>
+                        This is a wider card with supporting text below as a natural lead-in to
+                        additional content. This content is a little bit longer.
+                      </CCardText>
+                      <CCardText>
+                        <small className="text-body-secondary">Last updated 3 mins ago</small>
+                      </CCardText>
+                    </CCardBody>
+                    <CCardImage orientation="bottom" src={ReactImg} />
+                  </CCard>
+                </CCol>
+              </CRow>
+            </DocsExample>
+          </CCardBody>
+        </CCard>
+      </CCol>
+      <CCol xs={12}>
+        <CCard className="mb-4">
+          <CCardHeader>
+            <strong>Card</strong> <small>Card styles</small>
+          </CCardHeader>
+          <CCardBody>
+            <p className="text-body-secondary small">
+              Cards include various options for customizing their backgrounds, borders, and color.
+            </p>
+            <h3>Background and color</h3>
+            <p className="text-body-secondary small">
+              Use <code>color</code> property to change the appearance of a card.
+            </p>
+            <DocsExample href="components/card/#background-and-color">
+              <CRow>
+                {[
+                  { color: 'primary', textColor: 'white' },
+                  { color: 'secondary', textColor: 'white' },
+                  { color: 'success', textColor: 'white' },
+                  { color: 'danger', textColor: 'white' },
+                  { color: 'warning' },
+                  { color: 'info', textColor: 'white' },
+                  { color: 'light' },
+                  { color: 'dark', textColor: 'white' },
+                ].map((item, index) => (
+                  <CCol lg={4} key={index}>
+                    <CCard color={item.color} textColor={item.textColor} className="mb-3">
+                      <CCardHeader>Header</CCardHeader>
+                      <CCardBody>
+                        <CCardTitle>{item.color} card title</CCardTitle>
+                        <CCardText>
+                          Some quick example text to build on the card title and make up the bulk of
+                          the card&#39;s content.
+                        </CCardText>
+                      </CCardBody>
+                    </CCard>
+                  </CCol>
+                ))}
+              </CRow>
+            </DocsExample>
+            <h3>Border</h3>
+            <p className="text-body-secondary small">
+              Use <a href="https://coreui.io/docs/utilities/borders/">border utilities</a> to change
+              just the <code>border-color</code> of a card. Note that you can set{' '}
+              <code>textColor</code> property on the <code>&lt;CCard&gt;</code> or a subset of the
+              card&#39;s contents as shown below.
+            </p>
+            <DocsExample href="components/card/#border">
+              <CRow>
+                {[
+                  { color: 'primary', textColor: 'primary' },
+                  { color: 'secondary', textColor: 'secondary' },
+                  { color: 'success', textColor: 'success' },
+                  { color: 'danger', textColor: 'danger' },
+                  { color: 'warning', textColor: 'warning' },
+                  { color: 'info', textColor: 'info' },
+                  { color: 'light' },
+                  { color: 'dark' },
+                ].map((item, index) => (
+                  <CCol lg={4} key={index}>
+                    <CCard textColor={item.textColor} className={`mb-3 border-${item.color}`}>
+                      <CCardHeader>Header</CCardHeader>
+                      <CCardBody>
+                        <CCardTitle>{item.color} card title</CCardTitle>
+                        <CCardText>
+                          Some quick example text to build on the card title and make up the bulk of
+                          the card&#39;s content.
+                        </CCardText>
+                      </CCardBody>
+                    </CCard>
+                  </CCol>
+                ))}
+              </CRow>
+            </DocsExample>
+            <h3>Top border</h3>
+            <p className="text-body-secondary small">
+              Use <a href="https://coreui.io/docs/utilities/borders/">border utilities</a> to change
+              just the <code>border-color</code> of a card. Note that you can set{' '}
+              <code>textColor</code> property on the <code>&lt;CCard&gt;</code> or a subset of the
+              card&#39;s contents as shown below.
+            </p>
+            <DocsExample href="components/card/#top-border">
+              <CRow>
+                {[
+                  { color: 'primary', textColor: 'primary' },
+                  { color: 'secondary', textColor: 'secondary' },
+                  { color: 'success', textColor: 'success' },
+                  { color: 'danger', textColor: 'danger' },
+                  { color: 'warning', textColor: 'warning' },
+                  { color: 'info', textColor: 'info' },
+                  { color: 'light' },
+                  { color: 'dark' },
+                ].map((item, index) => (
+                  <CCol lg={4} key={index}>
+                    <CCard
+                      textColor={item.textColor}
+                      className={`mb-3 border-top-${item.color} border-top-3`}
+                    >
+                      <CCardHeader>Header</CCardHeader>
+                      <CCardBody>
+                        <CCardTitle>{item.color} card title</CCardTitle>
+                        <CCardText>
+                          Some quick example text to build on the card title and make up the bulk of
+                          the card&#39;s content.
+                        </CCardText>
+                      </CCardBody>
+                    </CCard>
+                  </CCol>
+                ))}
+              </CRow>
+            </DocsExample>
+          </CCardBody>
+        </CCard>
+      </CCol>
+      <CCol xs={12}>
+        <CCard className="mb-4">
+          <CCardHeader>
+            <strong>Card</strong> <small>Card groups</small>
+          </CCardHeader>
+          <CCardBody>
+            <p className="text-body-secondary small">
+              Use card groups to render cards as a single, attached element with equal width and
+              height columns. Card groups start off stacked and use <code>display: flex;</code> to
+              become attached with uniform dimensions starting at the <code>sm</code> breakpoint.
+            </p>
+            <DocsExample href="components/card/#card-groups">
+              <CCardGroup>
+                <CCard>
+                  <CCardImage orientation="top" src={ReactImg} />
+                  <CCardBody>
+                    <CCardTitle>Card title</CCardTitle>
+                    <CCardText>
+                      This is a wider card with supporting text below as a natural lead-in to
+                      additional content. This content is a little bit longer.
+                    </CCardText>
+                    <CCardText>
+                      <small className="text-body-secondary">Last updated 3 mins ago</small>
+                    </CCardText>
+                  </CCardBody>
+                </CCard>
+                <CCard>
+                  <CCardImage orientation="top" src={ReactImg} />
+                  <CCardBody>
+                    <CCardTitle>Card title</CCardTitle>
+                    <CCardText>
+                      This card has supporting text below as a natural lead-in to additional
+                      content.
+                    </CCardText>
+                    <CCardText>
+                      <small className="text-body-secondary">Last updated 3 mins ago</small>
+                    </CCardText>
+                  </CCardBody>
+                </CCard>
+                <CCard>
+                  <CCardImage orientation="top" src={ReactImg} />
+                  <CCardBody>
+                    <CCardTitle>Card title</CCardTitle>
+                    <CCardText>
+                      This is a wider card with supporting text below as a natural lead-in to
+                      additional content. This card has even longer content than the first to show
+                      that equal height action.
+                    </CCardText>
+                    <CCardText>
+                      <small className="text-body-secondary">Last updated 3 mins ago</small>
+                    </CCardText>
+                  </CCardBody>
+                </CCard>
+              </CCardGroup>
+            </DocsExample>
+            <p className="text-body-secondary small">
+              When using card groups with footers, their content will automatically line up.
+            </p>
+            <DocsExample href="components/card/#card-groups">
+              <CCardGroup>
+                <CCard>
+                  <CCardImage orientation="top" src={ReactImg} />
+                  <CCardBody>
+                    <CCardTitle>Card title</CCardTitle>
+                    <CCardText>
+                      This is a wider card with supporting text below as a natural lead-in to
+                      additional content. This content is a little bit longer.
+                    </CCardText>
+                  </CCardBody>
+                  <CCardFooter>
+                    <small className="text-body-secondary">Last updated 3 mins ago</small>
+                  </CCardFooter>
+                </CCard>
+                <CCard>
+                  <CCardImage orientation="top" src={ReactImg} />
+                  <CCardBody>
+                    <CCardTitle>Card title</CCardTitle>
+                    <CCardText>
+                      This card has supporting text below as a natural lead-in to additional
+                      content.
+                    </CCardText>
+                  </CCardBody>
+                  <CCardFooter>
+                    <small className="text-body-secondary">Last updated 3 mins ago</small>
+                  </CCardFooter>
+                </CCard>
+                <CCard>
+                  <CCardImage orientation="top" src={ReactImg} />
+                  <CCardBody>
+                    <CCardTitle>Card title</CCardTitle>
+                    <CCardText>
+                      This is a wider card with supporting text below as a natural lead-in to
+                      additional content. This card has even longer content than the first to show
+                      that equal height action.
+                    </CCardText>
+                  </CCardBody>
+                  <CCardFooter>
+                    <small className="text-body-secondary">Last updated 3 mins ago</small>
+                  </CCardFooter>
+                </CCard>
+              </CCardGroup>
+            </DocsExample>
+          </CCardBody>
+        </CCard>
+      </CCol>
+      <CCol xs={12}>
+        <CCard className="mb-4">
+          <CCardHeader>
+            <strong>Card</strong> <small>Grid cards</small>
+          </CCardHeader>
+          <CCardBody>
+            <p className="text-body-secondary small">
+              Use the <code>CRow</code> component and set{' '}
+              <code>&#123;xs|sm|md|lg|xl|xxl&#125;=&#123;&#123; cols: * &#125;&#125;</code> property
+              to control how many grid columns (wrapped around your cards) you show per row. For
+              example, here&#39;s <code>xs=&#123;&#123;cols: 1&#125;&#125;</code> laying out the
+              cards on one column, and <code>md=&#123;&#123;cols: 1&#125;&#125;</code> splitting
+              four cards to equal width across multiple rows, from the medium breakpoint up.
+            </p>
+            <DocsExample href="components/card/#grid-cards">
+              <CRow xs={{ cols: 1, gutter: 4 }} md={{ cols: 2 }}>
+                <CCol xs>
+                  <CCard>
+                    <CCardImage orientation="top" src={ReactImg} />
+                    <CCardBody>
+                      <CCardTitle>Card title</CCardTitle>
+                      <CCardText>
+                        This is a wider card with supporting text below as a natural lead-in to
+                        additional content. This content is a little bit longer.
+                      </CCardText>
+                    </CCardBody>
+                    <CCardFooter>
+                      <small className="text-body-secondary">Last updated 3 mins ago</small>
+                    </CCardFooter>
+                  </CCard>
+                </CCol>
+                <CCol xs>
+                  <CCard>
+                    <CCardImage orientation="top" src={ReactImg} />
+                    <CCardBody>
+                      <CCardTitle>Card title</CCardTitle>
+                      <CCardText>
+                        This is a wider card with supporting text below as a natural lead-in to
+                        additional content. This content is a little bit longer.
+                      </CCardText>
+                    </CCardBody>
+                    <CCardFooter>
+                      <small className="text-body-secondary">Last updated 3 mins ago</small>
+                    </CCardFooter>
+                  </CCard>
+                </CCol>
+                <CCol xs>
+                  <CCard>
+                    <CCardImage orientation="top" src={ReactImg} />
+                    <CCardBody>
+                      <CCardTitle>Card title</CCardTitle>
+                      <CCardText>
+                        This is a wider card with supporting text below as a natural lead-in to
+                        additional content. This content is a little bit longer.
+                      </CCardText>
+                    </CCardBody>
+                    <CCardFooter>
+                      <small className="text-body-secondary">Last updated 3 mins ago</small>
+                    </CCardFooter>
+                  </CCard>
+                </CCol>
+                <CCol xs>
+                  <CCard>
+                    <CCardImage orientation="top" src={ReactImg} />
+                    <CCardBody>
+                      <CCardTitle>Card title</CCardTitle>
+                      <CCardText>
+                        This is a wider card with supporting text below as a natural lead-in to
+                        additional content. This content is a little bit longer.
+                      </CCardText>
+                    </CCardBody>
+                    <CCardFooter>
+                      <small className="text-body-secondary">Last updated 3 mins ago</small>
+                    </CCardFooter>
+                  </CCard>
+                </CCol>
+              </CRow>
+            </DocsExample>
+            <p className="text-body-secondary small">
+              Change it to <code>md=&#123;&#123; cols: 3&#125;&#125;</code> and you&#39;ll see the
+              fourth card wrap.
+            </p>
+            <DocsExample href="components/card/#grid-cards">
+              <CRow xs={{ cols: 1, gutter: 4 }} md={{ cols: 3 }}>
+                <CCol xs>
+                  <CCard>
+                    <CCardImage orientation="top" src={ReactImg} />
+                    <CCardBody>
+                      <CCardTitle>Card title</CCardTitle>
+                      <CCardText>
+                        This is a wider card with supporting text below as a natural lead-in to
+                        additional content. This content is a little bit longer.
+                      </CCardText>
+                    </CCardBody>
+                    <CCardFooter>
+                      <small className="text-body-secondary">Last updated 3 mins ago</small>
+                    </CCardFooter>
+                  </CCard>
+                </CCol>
+                <CCol xs>
+                  <CCard>
+                    <CCardImage orientation="top" src={ReactImg} />
+                    <CCardBody>
+                      <CCardTitle>Card title</CCardTitle>
+                      <CCardText>
+                        This is a wider card with supporting text below as a natural lead-in to
+                        additional content. This content is a little bit longer.
+                      </CCardText>
+                    </CCardBody>
+                    <CCardFooter>
+                      <small className="text-body-secondary">Last updated 3 mins ago</small>
+                    </CCardFooter>
+                  </CCard>
+                </CCol>
+                <CCol xs>
+                  <CCard>
+                    <CCardImage orientation="top" src={ReactImg} />
+                    <CCardBody>
+                      <CCardTitle>Card title</CCardTitle>
+                      <CCardText>
+                        This is a wider card with supporting text below as a natural lead-in to
+                        additional content. This content is a little bit longer.
+                      </CCardText>
+                    </CCardBody>
+                    <CCardFooter>
+                      <small className="text-body-secondary">Last updated 3 mins ago</small>
+                    </CCardFooter>
+                  </CCard>
+                </CCol>
+                <CCol xs>
+                  <CCard>
+                    <CCardImage orientation="top" src={ReactImg} />
+                    <CCardBody>
+                      <CCardTitle>Card title</CCardTitle>
+                      <CCardText>
+                        This is a wider card with supporting text below as a natural lead-in to
+                        additional content. This content is a little bit longer.
+                      </CCardText>
+                    </CCardBody>
+                    <CCardFooter>
+                      <small className="text-body-secondary">Last updated 3 mins ago</small>
+                    </CCardFooter>
+                  </CCard>
+                </CCol>
+              </CRow>
+            </DocsExample>
+          </CCardBody>
+        </CCard>
+      </CCol>
+    </CRow>
+  )
+}
+
+export default Cards
Index: PlanningMamagement/frontend/src/views/base/tabs/Tabs.js
===================================================================
diff --git a/PlanningMamagement/frontend/src/views/base/tabs/Tabs.js b/PlanningMamagement/frontend/src/views/base/tabs/Tabs.js
new file mode 100644
--- /dev/null	(date 1728391641999)
+++ b/PlanningMamagement/frontend/src/views/base/tabs/Tabs.js	(date 1728391641999)
@@ -0,0 +1,233 @@
+import React from 'react'
+import {
+  CRow,
+  CCol,
+  CCard,
+  CCardBody,
+  CCardHeader,
+  CTab,
+  CTabContent,
+  CTabList,
+  CTabPanel,
+  CTabs,
+} from '@coreui/react'
+import { DocsExample } from 'src/components'
+
+const Navs = () => {
+  return (
+    <CRow>
+      <CCol xs={12}>
+        <CCard className="mb-4">
+          <CCardHeader>
+            <strong>React Tabs</strong>
+          </CCardHeader>
+          <CCardBody>
+            <p className="text-body-secondary small">
+              The basic React tabs example uses the <code>variant=&#34;tabs&#34;</code> props to
+              generate a tabbed interface.
+            </p>
+            <DocsExample href="components/tabs/#example">
+              <CTabs activeItemKey="profile">
+                <CTabList variant="tabs">
+                  <CTab itemKey="home">Home</CTab>
+                  <CTab itemKey="profile">Profile</CTab>
+                  <CTab itemKey="contact">Contact</CTab>
+                  <CTab disabled itemKey="disabled">
+                    Disabled
+                  </CTab>
+                </CTabList>
+                <CTabContent>
+                  <CTabPanel className="p-3" itemKey="home">
+                    Home tab content
+                  </CTabPanel>
+                  <CTabPanel className="p-3" itemKey="profile">
+                    Profile tab content
+                  </CTabPanel>
+                  <CTabPanel className="p-3" itemKey="contact">
+                    Contact tab content
+                  </CTabPanel>
+                  <CTabPanel className="p-3" itemKey="disabled">
+                    Disabled tab content
+                  </CTabPanel>
+                </CTabContent>
+              </CTabs>
+            </DocsExample>
+          </CCardBody>
+        </CCard>
+      </CCol>
+      <CCol xs={12}>
+        <CCard className="mb-4">
+          <CCardHeader>
+            <strong>React Tabs</strong> <small>Unstyled</small>
+          </CCardHeader>
+          <CCardBody>
+            <p className="text-body-secondary small">
+              If you don’t provide the <code>variant</code> prop, the component will default to a
+              basic style.
+            </p>
+            <DocsExample href="components/tabs/#unstyled">
+              <CTabs activeItemKey="profile">
+                <CTabList>
+                  <CTab itemKey="home">Home</CTab>
+                  <CTab itemKey="profile">Profile</CTab>
+                  <CTab itemKey="contact">Contact</CTab>
+                  <CTab disabled itemKey="disabled">
+                    Disabled
+                  </CTab>
+                </CTabList>
+                <CTabContent>
+                  <CTabPanel className="p-3" itemKey="home">
+                    Home tab content
+                  </CTabPanel>
+                  <CTabPanel className="p-3" itemKey="profile">
+                    Profile tab content
+                  </CTabPanel>
+                  <CTabPanel className="p-3" itemKey="contact">
+                    Contact tab content
+                  </CTabPanel>
+                  <CTabPanel className="p-3" itemKey="disabled">
+                    Disabled tab content
+                  </CTabPanel>
+                </CTabContent>
+              </CTabs>
+            </DocsExample>
+          </CCardBody>
+        </CCard>
+      </CCol>
+      <CCol xs={12}>
+        <CCard className="mb-4">
+          <CCardHeader>
+            <strong>React Tabs</strong> <small>Pills</small>
+          </CCardHeader>
+          <CCardBody>
+            <p className="text-body-secondary small">
+              Take that same code, but use <code>variant=&#34;pills&#34;</code> instead:
+            </p>
+            <DocsExample href="components/tabs/#unstyled">
+              <CTabs activeItemKey={2}>
+                <CTabList variant="pills">
+                  <CTab aria-controls="home-tab-pane" itemKey={1}>
+                    Home
+                  </CTab>
+                  <CTab aria-controls="profile-tab-pane" itemKey={2}>
+                    Profile
+                  </CTab>
+                  <CTab aria-controls="contact-tab-pane" itemKey={3}>
+                    Contact
+                  </CTab>
+                  <CTab aria-controls="disabled-tab-pane" disabled itemKey={4}>
+                    Disabled
+                  </CTab>
+                </CTabList>
+                <CTabContent>
+                  <CTabPanel className="p-3" aria-labelledby="home-tab-pane" itemKey={1}>
+                    Home tab content
+                  </CTabPanel>
+                  <CTabPanel className="p-3" aria-labelledby="profile-tab-pane" itemKey={2}>
+                    Profile tab content
+                  </CTabPanel>
+                  <CTabPanel className="p-3" aria-labelledby="contact-tab-pane" itemKey={3}>
+                    Contact tab content
+                  </CTabPanel>
+                  <CTabPanel className="p-3" aria-labelledby="disabled-tab-pane" itemKey={4}>
+                    Disabled tab content
+                  </CTabPanel>
+                </CTabContent>
+              </CTabs>
+            </DocsExample>
+          </CCardBody>
+        </CCard>
+      </CCol>
+      <CCol xs={12}>
+        <CCard className="mb-4">
+          <CCardHeader>
+            <strong>React Tabs</strong> <small>Underline</small>
+          </CCardHeader>
+          <CCardBody>
+            <p className="text-body-secondary small">
+              Take that same code, but use <code>variant=&#34;underline&#34;</code> instead:
+            </p>
+            <DocsExample href="components/tabs/#unstyled">
+              <CTabs activeItemKey={2}>
+                <CTabList variant="underline">
+                  <CTab aria-controls="home-tab-pane" itemKey={1}>
+                    Home
+                  </CTab>
+                  <CTab aria-controls="profile-tab-pane" itemKey={2}>
+                    Profile
+                  </CTab>
+                  <CTab aria-controls="contact-tab-pane" itemKey={3}>
+                    Contact
+                  </CTab>
+                  <CTab aria-controls="disabled-tab-pane" disabled itemKey={4}>
+                    Disabled
+                  </CTab>
+                </CTabList>
+                <CTabContent>
+                  <CTabPanel className="py-3" aria-labelledby="home-tab-pane" itemKey={1}>
+                    Home tab content
+                  </CTabPanel>
+                  <CTabPanel className="py-3" aria-labelledby="profile-tab-pane" itemKey={2}>
+                    Profile tab content
+                  </CTabPanel>
+                  <CTabPanel className="py-3" aria-labelledby="contact-tab-pane" itemKey={3}>
+                    Contact tab content
+                  </CTabPanel>
+                  <CTabPanel className="py-3" aria-labelledby="disabled-tab-pane" itemKey={4}>
+                    Disabled tab content
+                  </CTabPanel>
+                </CTabContent>
+              </CTabs>
+            </DocsExample>
+          </CCardBody>
+        </CCard>
+      </CCol>
+      <CCol xs={12}>
+        <CCard className="mb-4">
+          <CCardHeader>
+            <strong>React Tabs</strong> <small>Underline border</small>
+          </CCardHeader>
+          <CCardBody>
+            <p className="text-body-secondary small">
+              Take that same code, but use <code>variant=&#34;underline-border&#34;</code> instead:
+            </p>
+            <DocsExample href="components/tabs/#unstyled">
+              <CTabs activeItemKey={2}>
+                <CTabList variant="underline-border">
+                  <CTab aria-controls="home-tab-pane" itemKey={1}>
+                    Home
+                  </CTab>
+                  <CTab aria-controls="profile-tab-pane" itemKey={2}>
+                    Profile
+                  </CTab>
+                  <CTab aria-controls="contact-tab-pane" itemKey={3}>
+                    Contact
+                  </CTab>
+                  <CTab aria-controls="disabled-tab-pane" disabled itemKey={4}>
+                    Disabled
+                  </CTab>
+                </CTabList>
+                <CTabContent>
+                  <CTabPanel className="py-3" aria-labelledby="home-tab-pane" itemKey={1}>
+                    Home tab content
+                  </CTabPanel>
+                  <CTabPanel className="py-3" aria-labelledby="profile-tab-pane" itemKey={2}>
+                    Profile tab content
+                  </CTabPanel>
+                  <CTabPanel className="py-3" aria-labelledby="contact-tab-pane" itemKey={3}>
+                    Contact tab content
+                  </CTabPanel>
+                  <CTabPanel className="py-3" aria-labelledby="disabled-tab-pane" itemKey={4}>
+                    Disabled tab content
+                  </CTabPanel>
+                </CTabContent>
+              </CTabs>
+            </DocsExample>
+          </CCardBody>
+        </CCard>
+      </CCol>
+    </CRow>
+  )
+}
+
+export default Navs
Index: PlanningMamagement/frontend/src/views/base/navbars/Navbars.js
===================================================================
diff --git a/PlanningMamagement/frontend/src/views/base/navbars/Navbars.js b/PlanningMamagement/frontend/src/views/base/navbars/Navbars.js
new file mode 100644
--- /dev/null	(date 1728391641872)
+++ b/PlanningMamagement/frontend/src/views/base/navbars/Navbars.js	(date 1728391641872)
@@ -0,0 +1,174 @@
+import React, { useState } from 'react'
+import {
+  CCard,
+  CCardBody,
+  CCardHeader,
+  CCollapse,
+  CDropdownItem,
+  CDropdownMenu,
+  CDropdownToggle,
+  CForm,
+  CFormInput,
+  CImage,
+  CNavbar,
+  CNavbarNav,
+  CNavbarBrand,
+  CNavbarText,
+  CNavbarToggler,
+  CNavLink,
+  CDropdown,
+  CButton,
+} from '@coreui/react'
+import { DocsLink } from 'src/components'
+
+const CNavbars = () => {
+  const [visible, setVisible] = useState(false)
+  const [isOpenDropdown, setIsOpenDropdown] = useState(false)
+  const [navbarText, setNavbarText] = useState(false)
+
+  return (
+    <>
+      <CCard className="mb-4">
+        <CCardHeader>
+          CNavbar
+          <DocsLink name="CNavbar" />
+        </CCardHeader>
+        <CCardBody>
+          <CNavbar expandable="sm" color="info">
+            <CNavbarToggler onClick={() => setVisible(!visible)} />
+            <CNavbarBrand>NavbarBrand</CNavbarBrand>
+            <CCollapse show={visible} navbar>
+              <CNavbarNav>
+                <CNavLink>Home</CNavLink>
+                <CNavLink>Link</CNavLink>
+              </CNavbarNav>
+              <CNavbarNav className="ms-auto">
+                <CForm className="d-flex">
+                  <CFormInput className="me-sm-2" placeholder="Search" size="sm" />
+                  <CButton color="light" className="my-2 my-sm-0" type="submit">
+                    Search
+                  </CButton>
+                </CForm>
+                <CDropdown inNav>
+                  <CDropdownToggle color="primary">Lang</CDropdownToggle>
+                  <CDropdownMenu>
+                    <CDropdownItem>EN</CDropdownItem>
+                    <CDropdownItem>ES</CDropdownItem>
+                    <CDropdownItem>RU</CDropdownItem>
+                    <CDropdownItem>FA</CDropdownItem>
+                  </CDropdownMenu>
+                </CDropdown>
+                <CDropdown inNav>
+                  <CDropdownToggle color="primary">User</CDropdownToggle>
+                  <CDropdownMenu>
+                    <CDropdownItem>Account</CDropdownItem>
+                    <CDropdownItem>Settings</CDropdownItem>
+                  </CDropdownMenu>
+                </CDropdown>
+              </CNavbarNav>
+            </CCollapse>
+          </CNavbar>
+        </CCardBody>
+      </CCard>
+
+      <CCard className="mb-4">
+        <CCardHeader>CNavbar brand</CCardHeader>
+        <CCardBody>
+          <CNavbar color="faded" light>
+            <CNavbarBrand>
+              <CImage
+                src="https://placekitten.com/g/30/30"
+                className="d-inline-block align-top"
+                alt="CoreuiVue"
+              />
+              CoreUI React
+            </CNavbarBrand>
+          </CNavbar>
+        </CCardBody>
+      </CCard>
+
+      <CCard className="mb-4">
+        <CCardHeader>CNavbar text</CCardHeader>
+        <CCardBody>
+          <CNavbar toggleable="sm" light color="light">
+            <CNavbarToggler
+              inNavbar
+              onClick={() => {
+                setNavbarText(!navbarText)
+              }}
+            />
+            <CNavbarBrand>NavbarBrand</CNavbarBrand>
+            <CCollapse show={navbarText}>
+              <CNavbarNav>
+                <CNavbarText>Navbar text</CNavbarText>
+              </CNavbarNav>
+            </CCollapse>
+          </CNavbar>
+        </CCardBody>
+      </CCard>
+
+      <CCard className="mb-4">
+        <CCardHeader>CNavbar dropdown</CCardHeader>
+        <CCardBody>
+          <CNavbar expandable="false" color="primary">
+            <CNavbarToggler
+              inNavbar
+              onClick={() => {
+                setIsOpenDropdown(!isOpenDropdown)
+              }}
+            />
+            <CCollapse show={isOpenDropdown} navbar>
+              <CNavbarNav>
+                <CNavLink>Home</CNavLink>
+                <CNavLink>Link</CNavLink>
+                <CDropdown inNav>
+                  <CDropdownToggle color="primary">Lang</CDropdownToggle>
+                  <CDropdownMenu>
+                    <CDropdownItem>EN</CDropdownItem>
+                    <CDropdownItem>ES</CDropdownItem>
+                    <CDropdownItem>RU</CDropdownItem>
+                    <CDropdownItem>FA</CDropdownItem>
+                  </CDropdownMenu>
+                </CDropdown>
+                <CDropdown inNav>
+                  <CDropdownToggle color="primary">User</CDropdownToggle>
+                  <CDropdownMenu>
+                    <CDropdownItem>Account</CDropdownItem>
+                    <CDropdownItem>Settings</CDropdownItem>
+                  </CDropdownMenu>
+                </CDropdown>
+              </CNavbarNav>
+            </CCollapse>
+          </CNavbar>
+        </CCardBody>
+      </CCard>
+
+      <CCard className="mb-4">
+        <CCardHeader>CNavbar form</CCardHeader>
+        <CCardBody>
+          <CNavbar light color="light">
+            <CForm className="d-flex">
+              <CFormInput className="me-sm-2" placeholder="Search" size="sm" />
+              <CButton color="outline-success" className="my-2 my-sm-0" type="submit">
+                Search
+              </CButton>
+            </CForm>
+          </CNavbar>
+        </CCardBody>
+      </CCard>
+
+      <CCard className="mb-4">
+        <CCardHeader>CNavbar input group</CCardHeader>
+        <CCardBody>
+          <CNavbar light color="light">
+            <CForm className="d-flex">
+              <CFormInput className="me-sm-2" placeholder="Username" />
+            </CForm>
+          </CNavbar>
+        </CCardBody>
+      </CCard>
+    </>
+  )
+}
+
+export default CNavbars
Index: PlanningMamagement/frontend/src/views/base/tables/Tables.js
===================================================================
diff --git a/PlanningMamagement/frontend/src/views/base/tables/Tables.js b/PlanningMamagement/frontend/src/views/base/tables/Tables.js
new file mode 100644
--- /dev/null	(date 1728391641984)
+++ b/PlanningMamagement/frontend/src/views/base/tables/Tables.js	(date 1728391641984)
@@ -0,0 +1,986 @@
+import React from 'react'
+import {
+  CCard,
+  CCardBody,
+  CCardHeader,
+  CCol,
+  CRow,
+  CTable,
+  CTableBody,
+  CTableCaption,
+  CTableDataCell,
+  CTableHead,
+  CTableHeaderCell,
+  CTableRow,
+} from '@coreui/react'
+import { DocsExample } from 'src/components'
+
+const Tables = () => {
+  return (
+    <CRow>
+      <CCol xs={12}>
+        <CCard className="mb-4">
+          <CCardHeader>
+            <strong>React Table</strong> <small>Basic example</small>
+          </CCardHeader>
+          <CCardBody>
+            <p className="text-body-secondary small">
+              Using the most basic table CoreUI, here&#39;s how <code>&lt;CTable&gt;</code>-based
+              tables look in CoreUI.
+            </p>
+            <DocsExample href="components/table">
+              <CTable>
+                <CTableHead>
+                  <CTableRow>
+                    <CTableHeaderCell scope="col">#</CTableHeaderCell>
+                    <CTableHeaderCell scope="col">Class</CTableHeaderCell>
+                    <CTableHeaderCell scope="col">Heading</CTableHeaderCell>
+                    <CTableHeaderCell scope="col">Heading</CTableHeaderCell>
+                  </CTableRow>
+                </CTableHead>
+                <CTableBody>
+                  <CTableRow>
+                    <CTableHeaderCell scope="row">1</CTableHeaderCell>
+                    <CTableDataCell>Mark</CTableDataCell>
+                    <CTableDataCell>Otto</CTableDataCell>
+                    <CTableDataCell>@mdo</CTableDataCell>
+                  </CTableRow>
+                  <CTableRow>
+                    <CTableHeaderCell scope="row">2</CTableHeaderCell>
+                    <CTableDataCell>Jacob</CTableDataCell>
+                    <CTableDataCell>Thornton</CTableDataCell>
+                    <CTableDataCell>@fat</CTableDataCell>
+                  </CTableRow>
+                  <CTableRow>
+                    <CTableHeaderCell scope="row">3</CTableHeaderCell>
+                    <CTableDataCell colSpan={2}>Larry the Bird</CTableDataCell>
+                    <CTableDataCell>@twitter</CTableDataCell>
+                  </CTableRow>
+                </CTableBody>
+              </CTable>
+            </DocsExample>
+          </CCardBody>
+        </CCard>
+      </CCol>
+      <CCol xs={12}>
+        <CCard className="mb-4">
+          <CCardHeader>
+            <strong>React Table</strong> <small>Variants</small>
+          </CCardHeader>
+          <CCardBody>
+            <p className="text-body-secondary small">
+              Use contextual classes to color tables, table rows or individual cells.
+            </p>
+            <DocsExample href="components/table#variants">
+              <CTable>
+                <CTableHead>
+                  <CTableRow>
+                    <CTableHeaderCell scope="col">Class</CTableHeaderCell>
+                    <CTableHeaderCell scope="col">Heading</CTableHeaderCell>
+                    <CTableHeaderCell scope="col">Heading</CTableHeaderCell>
+                  </CTableRow>
+                </CTableHead>
+                <CTableBody>
+                  <CTableRow>
+                    <CTableHeaderCell scope="row">Default</CTableHeaderCell>
+                    <CTableDataCell>Cell</CTableDataCell>
+                    <CTableDataCell>Cell</CTableDataCell>
+                  </CTableRow>
+                  <CTableRow color="primary">
+                    <CTableHeaderCell scope="row">Primary</CTableHeaderCell>
+                    <CTableDataCell>Cell</CTableDataCell>
+                    <CTableDataCell>Cell</CTableDataCell>
+                  </CTableRow>
+                  <CTableRow color="secondary">
+                    <CTableHeaderCell scope="row">Secondary</CTableHeaderCell>
+                    <CTableDataCell>Cell</CTableDataCell>
+                    <CTableDataCell>Cell</CTableDataCell>
+                  </CTableRow>
+                  <CTableRow color="success">
+                    <CTableHeaderCell scope="row">Success</CTableHeaderCell>
+                    <CTableDataCell>Cell</CTableDataCell>
+                    <CTableDataCell>Cell</CTableDataCell>
+                  </CTableRow>
+                  <CTableRow color="danger">
+                    <CTableHeaderCell scope="row">Danger</CTableHeaderCell>
+                    <CTableDataCell>Cell</CTableDataCell>
+                    <CTableDataCell>Cell</CTableDataCell>
+                  </CTableRow>
+                  <CTableRow color="warning">
+                    <CTableHeaderCell scope="row">Warning</CTableHeaderCell>
+                    <CTableDataCell>Cell</CTableDataCell>
+                    <CTableDataCell>Cell</CTableDataCell>
+                  </CTableRow>
+                  <CTableRow color="info">
+                    <CTableHeaderCell scope="row">Info</CTableHeaderCell>
+                    <CTableDataCell>Cell</CTableDataCell>
+                    <CTableDataCell>Cell</CTableDataCell>
+                  </CTableRow>
+                  <CTableRow color="light">
+                    <CTableHeaderCell scope="row">Light</CTableHeaderCell>
+                    <CTableDataCell>Cell</CTableDataCell>
+                    <CTableDataCell>Cell</CTableDataCell>
+                  </CTableRow>
+                  <CTableRow color="dark">
+                    <CTableHeaderCell scope="row">Dark</CTableHeaderCell>
+                    <CTableDataCell>Cell</CTableDataCell>
+                    <CTableDataCell>Cell</CTableDataCell>
+                  </CTableRow>
+                </CTableBody>
+              </CTable>
+            </DocsExample>
+          </CCardBody>
+        </CCard>
+      </CCol>
+      <CCol xs={12}>
+        <CCard className="mb-4">
+          <CCardHeader>
+            <strong>React Table</strong> <small>Striped rows</small>
+          </CCardHeader>
+          <CCardBody>
+            <p className="text-body-secondary small">
+              Use <code>striped</code> property to add zebra-striping to any table row within the{' '}
+              <code>&lt;CTableBody&gt;</code>.
+            </p>
+            <DocsExample href="components/table#striped-rows">
+              <CTable striped>
+                <CTableHead>
+                  <CTableRow>
+                    <CTableHeaderCell scope="col">#</CTableHeaderCell>
+                    <CTableHeaderCell scope="col">Class</CTableHeaderCell>
+                    <CTableHeaderCell scope="col">Heading</CTableHeaderCell>
+                    <CTableHeaderCell scope="col">Heading</CTableHeaderCell>
+                  </CTableRow>
+                </CTableHead>
+                <CTableBody>
+                  <CTableRow>
+                    <CTableHeaderCell scope="row">1</CTableHeaderCell>
+                    <CTableDataCell>Mark</CTableDataCell>
+                    <CTableDataCell>Otto</CTableDataCell>
+                    <CTableDataCell>@mdo</CTableDataCell>
+                  </CTableRow>
+                  <CTableRow>
+                    <CTableHeaderCell scope="row">2</CTableHeaderCell>
+                    <CTableDataCell>Jacob</CTableDataCell>
+                    <CTableDataCell>Thornton</CTableDataCell>
+                    <CTableDataCell>@fat</CTableDataCell>
+                  </CTableRow>
+                  <CTableRow>
+                    <CTableHeaderCell scope="row">3</CTableHeaderCell>
+                    <CTableDataCell colSpan={2}>Larry the Bird</CTableDataCell>
+                    <CTableDataCell>@twitter</CTableDataCell>
+                  </CTableRow>
+                </CTableBody>
+              </CTable>
+            </DocsExample>
+            <p className="text-body-secondary small">
+              These classes can also be added to table variants:
+            </p>
+            <DocsExample href="components/table#striped-rows">
+              <CTable color="dark" striped>
+                <CTableHead>
+                  <CTableRow>
+                    <CTableHeaderCell scope="col">#</CTableHeaderCell>
+                    <CTableHeaderCell scope="col">Class</CTableHeaderCell>
+                    <CTableHeaderCell scope="col">Heading</CTableHeaderCell>
+                    <CTableHeaderCell scope="col">Heading</CTableHeaderCell>
+                  </CTableRow>
+                </CTableHead>
+                <CTableBody>
+                  <CTableRow>
+                    <CTableHeaderCell scope="row">1</CTableHeaderCell>
+                    <CTableDataCell>Mark</CTableDataCell>
+                    <CTableDataCell>Otto</CTableDataCell>
+                    <CTableDataCell>@mdo</CTableDataCell>
+                  </CTableRow>
+                  <CTableRow>
+                    <CTableHeaderCell scope="row">2</CTableHeaderCell>
+                    <CTableDataCell>Jacob</CTableDataCell>
+                    <CTableDataCell>Thornton</CTableDataCell>
+                    <CTableDataCell>@fat</CTableDataCell>
+                  </CTableRow>
+                  <CTableRow>
+                    <CTableHeaderCell scope="row">3</CTableHeaderCell>
+                    <CTableDataCell colSpan={2}>Larry the Bird</CTableDataCell>
+                    <CTableDataCell>@twitter</CTableDataCell>
+                  </CTableRow>
+                </CTableBody>
+              </CTable>
+            </DocsExample>
+            <DocsExample href="components/table#striped-rows">
+              <CTable color="success" striped>
+                <CTableHead>
+                  <CTableRow>
+                    <CTableHeaderCell scope="col">#</CTableHeaderCell>
+                    <CTableHeaderCell scope="col">Class</CTableHeaderCell>
+                    <CTableHeaderCell scope="col">Heading</CTableHeaderCell>
+                    <CTableHeaderCell scope="col">Heading</CTableHeaderCell>
+                  </CTableRow>
+                </CTableHead>
+                <CTableBody>
+                  <CTableRow>
+                    <CTableHeaderCell scope="row">1</CTableHeaderCell>
+                    <CTableDataCell>Mark</CTableDataCell>
+                    <CTableDataCell>Otto</CTableDataCell>
+                    <CTableDataCell>@mdo</CTableDataCell>
+                  </CTableRow>
+                  <CTableRow>
+                    <CTableHeaderCell scope="row">2</CTableHeaderCell>
+                    <CTableDataCell>Jacob</CTableDataCell>
+                    <CTableDataCell>Thornton</CTableDataCell>
+                    <CTableDataCell>@fat</CTableDataCell>
+                  </CTableRow>
+                  <CTableRow>
+                    <CTableHeaderCell scope="row">3</CTableHeaderCell>
+                    <CTableDataCell colSpan={2}>Larry the Bird</CTableDataCell>
+                    <CTableDataCell>@twitter</CTableDataCell>
+                  </CTableRow>
+                </CTableBody>
+              </CTable>
+            </DocsExample>
+          </CCardBody>
+        </CCard>
+      </CCol>
+      <CCol xs={12}>
+        <CCard className="mb-4">
+          <CCardHeader>
+            <strong>React Table</strong> <small>Hoverable rows</small>
+          </CCardHeader>
+          <CCardBody>
+            <p className="text-body-secondary small">
+              Use <code>hover</code> property to enable a hover state on table rows within a{' '}
+              <code>&lt;CTableBody&gt;</code>.
+            </p>
+            <DocsExample href="components/table#hoverable-rows">
+              <CTable hover>
+                <CTableHead>
+                  <CTableRow>
+                    <CTableHeaderCell scope="col">#</CTableHeaderCell>
+                    <CTableHeaderCell scope="col">Class</CTableHeaderCell>
+                    <CTableHeaderCell scope="col">Heading</CTableHeaderCell>
+                    <CTableHeaderCell scope="col">Heading</CTableHeaderCell>
+                  </CTableRow>
+                </CTableHead>
+                <CTableBody>
+                  <CTableRow>
+                    <CTableHeaderCell scope="row">1</CTableHeaderCell>
+                    <CTableDataCell>Mark</CTableDataCell>
+                    <CTableDataCell>Otto</CTableDataCell>
+                    <CTableDataCell>@mdo</CTableDataCell>
+                  </CTableRow>
+                  <CTableRow>
+                    <CTableHeaderCell scope="row">2</CTableHeaderCell>
+                    <CTableDataCell>Jacob</CTableDataCell>
+                    <CTableDataCell>Thornton</CTableDataCell>
+                    <CTableDataCell>@fat</CTableDataCell>
+                  </CTableRow>
+                  <CTableRow>
+                    <CTableHeaderCell scope="row">3</CTableHeaderCell>
+                    <CTableDataCell colSpan={2}>Larry the Bird</CTableDataCell>
+                    <CTableDataCell>@twitter</CTableDataCell>
+                  </CTableRow>
+                </CTableBody>
+              </CTable>
+            </DocsExample>
+            <DocsExample href="components/table#hoverable-rows">
+              <CTable color="dark" hover>
+                <CTableHead>
+                  <CTableRow>
+                    <CTableHeaderCell scope="col">#</CTableHeaderCell>
+                    <CTableHeaderCell scope="col">Class</CTableHeaderCell>
+                    <CTableHeaderCell scope="col">Heading</CTableHeaderCell>
+                    <CTableHeaderCell scope="col">Heading</CTableHeaderCell>
+                  </CTableRow>
+                </CTableHead>
+                <CTableBody>
+                  <CTableRow>
+                    <CTableHeaderCell scope="row">1</CTableHeaderCell>
+                    <CTableDataCell>Mark</CTableDataCell>
+                    <CTableDataCell>Otto</CTableDataCell>
+                    <CTableDataCell>@mdo</CTableDataCell>
+                  </CTableRow>
+                  <CTableRow>
+                    <CTableHeaderCell scope="row">2</CTableHeaderCell>
+                    <CTableDataCell>Jacob</CTableDataCell>
+                    <CTableDataCell>Thornton</CTableDataCell>
+                    <CTableDataCell>@fat</CTableDataCell>
+                  </CTableRow>
+                  <CTableRow>
+                    <CTableHeaderCell scope="row">3</CTableHeaderCell>
+                    <CTableDataCell colSpan={2}>Larry the Bird</CTableDataCell>
+                    <CTableDataCell>@twitter</CTableDataCell>
+                  </CTableRow>
+                </CTableBody>
+              </CTable>
+            </DocsExample>
+            <DocsExample href="components/table#hoverable-rows">
+              <CTable striped hover>
+                <CTableHead>
+                  <CTableRow>
+                    <CTableHeaderCell scope="col">#</CTableHeaderCell>
+                    <CTableHeaderCell scope="col">Class</CTableHeaderCell>
+                    <CTableHeaderCell scope="col">Heading</CTableHeaderCell>
+                    <CTableHeaderCell scope="col">Heading</CTableHeaderCell>
+                  </CTableRow>
+                </CTableHead>
+                <CTableBody>
+                  <CTableRow>
+                    <CTableHeaderCell scope="row">1</CTableHeaderCell>
+                    <CTableDataCell>Mark</CTableDataCell>
+                    <CTableDataCell>Otto</CTableDataCell>
+                    <CTableDataCell>@mdo</CTableDataCell>
+                  </CTableRow>
+                  <CTableRow>
+                    <CTableHeaderCell scope="row">2</CTableHeaderCell>
+                    <CTableDataCell>Jacob</CTableDataCell>
+                    <CTableDataCell>Thornton</CTableDataCell>
+                    <CTableDataCell>@fat</CTableDataCell>
+                  </CTableRow>
+                  <CTableRow>
+                    <CTableHeaderCell scope="row">3</CTableHeaderCell>
+                    <CTableDataCell colSpan={2}>Larry the Bird</CTableDataCell>
+                    <CTableDataCell>@twitter</CTableDataCell>
+                  </CTableRow>
+                </CTableBody>
+              </CTable>
+            </DocsExample>
+          </CCardBody>
+        </CCard>
+      </CCol>
+      <CCol xs={12}>
+        <CCard className="mb-4">
+          <CCardHeader>
+            <strong>React Table</strong> <small>Active tables</small>
+          </CCardHeader>
+          <CCardBody>
+            <DocsExample href="components/table#active-tables">
+              <CTable>
+                <CTableHead>
+                  <CTableRow>
+                    <CTableHeaderCell scope="col">#</CTableHeaderCell>
+                    <CTableHeaderCell scope="col">Class</CTableHeaderCell>
+                    <CTableHeaderCell scope="col">Heading</CTableHeaderCell>
+                    <CTableHeaderCell scope="col">Heading</CTableHeaderCell>
+                  </CTableRow>
+                </CTableHead>
+                <CTableBody>
+                  <CTableRow active>
+                    <CTableHeaderCell scope="row">1</CTableHeaderCell>
+                    <CTableDataCell>Mark</CTableDataCell>
+                    <CTableDataCell>Otto</CTableDataCell>
+                    <CTableDataCell>@mdo</CTableDataCell>
+                  </CTableRow>
+                  <CTableRow>
+                    <CTableHeaderCell scope="row">2</CTableHeaderCell>
+                    <CTableDataCell>Jacob</CTableDataCell>
+                    <CTableDataCell>Thornton</CTableDataCell>
+                    <CTableDataCell>@fat</CTableDataCell>
+                  </CTableRow>
+                  <CTableRow>
+                    <CTableHeaderCell scope="row">3</CTableHeaderCell>
+                    <CTableDataCell colSpan={2} active>
+                      Larry the Bird
+                    </CTableDataCell>
+                    <CTableDataCell>@twitter</CTableDataCell>
+                  </CTableRow>
+                </CTableBody>
+              </CTable>
+            </DocsExample>
+            <DocsExample href="components/table#active-tables">
+              <CTable color="dark">
+                <CTableHead>
+                  <CTableRow>
+                    <CTableHeaderCell scope="col">#</CTableHeaderCell>
+                    <CTableHeaderCell scope="col">Class</CTableHeaderCell>
+                    <CTableHeaderCell scope="col">Heading</CTableHeaderCell>
+                    <CTableHeaderCell scope="col">Heading</CTableHeaderCell>
+                  </CTableRow>
+                </CTableHead>
+                <CTableBody>
+                  <CTableRow active>
+                    <CTableHeaderCell scope="row">1</CTableHeaderCell>
+                    <CTableDataCell>Mark</CTableDataCell>
+                    <CTableDataCell>Otto</CTableDataCell>
+                    <CTableDataCell>@mdo</CTableDataCell>
+                  </CTableRow>
+                  <CTableRow>
+                    <CTableHeaderCell scope="row">2</CTableHeaderCell>
+                    <CTableDataCell>Jacob</CTableDataCell>
+                    <CTableDataCell>Thornton</CTableDataCell>
+                    <CTableDataCell>@fat</CTableDataCell>
+                  </CTableRow>
+                  <CTableRow>
+                    <CTableHeaderCell scope="row">3</CTableHeaderCell>
+                    <CTableDataCell colSpan={2} active>
+                      Larry the Bird
+                    </CTableDataCell>
+                    <CTableDataCell>@twitter</CTableDataCell>
+                  </CTableRow>
+                </CTableBody>
+              </CTable>
+            </DocsExample>
+          </CCardBody>
+        </CCard>
+      </CCol>
+      <CCol xs={12}>
+        <CCard className="mb-4">
+          <CCardHeader>
+            <strong>React Table</strong> <small>Bordered tables</small>
+          </CCardHeader>
+          <CCardBody>
+            <p className="text-body-secondary small">
+              Add <code>bordered</code> property for borders on all sides of the table and cells.
+            </p>
+            <DocsExample href="components/table#bordered-tables">
+              <CTable bordered>
+                <CTableHead>
+                  <CTableRow>
+                    <CTableHeaderCell scope="col">#</CTableHeaderCell>
+                    <CTableHeaderCell scope="col">Class</CTableHeaderCell>
+                    <CTableHeaderCell scope="col">Heading</CTableHeaderCell>
+                    <CTableHeaderCell scope="col">Heading</CTableHeaderCell>
+                  </CTableRow>
+                </CTableHead>
+                <CTableBody>
+                  <CTableRow>
+                    <CTableHeaderCell scope="row">1</CTableHeaderCell>
+                    <CTableDataCell>Mark</CTableDataCell>
+                    <CTableDataCell>Otto</CTableDataCell>
+                    <CTableDataCell>@mdo</CTableDataCell>
+                  </CTableRow>
+                  <CTableRow>
+                    <CTableHeaderCell scope="row">2</CTableHeaderCell>
+                    <CTableDataCell>Jacob</CTableDataCell>
+                    <CTableDataCell>Thornton</CTableDataCell>
+                    <CTableDataCell>@fat</CTableDataCell>
+                  </CTableRow>
+                  <CTableRow>
+                    <CTableHeaderCell scope="row">3</CTableHeaderCell>
+                    <CTableDataCell colSpan={2}>Larry the Bird</CTableDataCell>
+                    <CTableDataCell>@twitter</CTableDataCell>
+                  </CTableRow>
+                </CTableBody>
+              </CTable>
+            </DocsExample>
+            <p className="text-body-secondary small">
+              <a href="https://coreui.io/docs/utilities/borders#border-color">
+                Border color utilities
+              </a>{' '}
+              can be added to change colors:
+            </p>
+            <DocsExample href="components/table#bordered-tables">
+              <CTable bordered borderColor="primary">
+                <CTableHead>
+                  <CTableRow>
+                    <CTableHeaderCell scope="col">#</CTableHeaderCell>
+                    <CTableHeaderCell scope="col">Class</CTableHeaderCell>
+                    <CTableHeaderCell scope="col">Heading</CTableHeaderCell>
+                    <CTableHeaderCell scope="col">Heading</CTableHeaderCell>
+                  </CTableRow>
+                </CTableHead>
+                <CTableBody>
+                  <CTableRow>
+                    <CTableHeaderCell scope="row">1</CTableHeaderCell>
+                    <CTableDataCell>Mark</CTableDataCell>
+                    <CTableDataCell>Otto</CTableDataCell>
+                    <CTableDataCell>@mdo</CTableDataCell>
+                  </CTableRow>
+                  <CTableRow>
+                    <CTableHeaderCell scope="row">2</CTableHeaderCell>
+                    <CTableDataCell>Jacob</CTableDataCell>
+                    <CTableDataCell>Thornton</CTableDataCell>
+                    <CTableDataCell>@fat</CTableDataCell>
+                  </CTableRow>
+                  <CTableRow>
+                    <CTableHeaderCell scope="row">3</CTableHeaderCell>
+                    <CTableDataCell colSpan={2}>Larry the Bird</CTableDataCell>
+                    <CTableDataCell>@twitter</CTableDataCell>
+                  </CTableRow>
+                </CTableBody>
+              </CTable>
+            </DocsExample>
+          </CCardBody>
+        </CCard>
+      </CCol>
+      <CCol xs={12}>
+        <CCard className="mb-4">
+          <CCardHeader>
+            <strong>React Table</strong> <small>Tables without borders</small>
+          </CCardHeader>
+          <CCardBody>
+            <p className="text-body-secondary small">
+              Add <code>borderless</code> property for a table without borders.
+            </p>
+            <DocsExample href="components/table#tables-without-borders">
+              <CTable borderless>
+                <CTableHead>
+                  <CTableRow>
+                    <CTableHeaderCell scope="col">#</CTableHeaderCell>
+                    <CTableHeaderCell scope="col">Class</CTableHeaderCell>
+                    <CTableHeaderCell scope="col">Heading</CTableHeaderCell>
+                    <CTableHeaderCell scope="col">Heading</CTableHeaderCell>
+                  </CTableRow>
+                </CTableHead>
+                <CTableBody>
+                  <CTableRow>
+                    <CTableHeaderCell scope="row">1</CTableHeaderCell>
+                    <CTableDataCell>Mark</CTableDataCell>
+                    <CTableDataCell>Otto</CTableDataCell>
+                    <CTableDataCell>@mdo</CTableDataCell>
+                  </CTableRow>
+                  <CTableRow>
+                    <CTableHeaderCell scope="row">2</CTableHeaderCell>
+                    <CTableDataCell>Jacob</CTableDataCell>
+                    <CTableDataCell>Thornton</CTableDataCell>
+                    <CTableDataCell>@fat</CTableDataCell>
+                  </CTableRow>
+                  <CTableRow>
+                    <CTableHeaderCell scope="row">3</CTableHeaderCell>
+                    <CTableDataCell colSpan={2}>Larry the Bird</CTableDataCell>
+                    <CTableDataCell>@twitter</CTableDataCell>
+                  </CTableRow>
+                </CTableBody>
+              </CTable>
+            </DocsExample>
+            <DocsExample href="components/table#tables-without-borders">
+              <CTable color="dark" borderless>
+                <CTableHead>
+                  <CTableRow>
+                    <CTableHeaderCell scope="col">#</CTableHeaderCell>
+                    <CTableHeaderCell scope="col">Class</CTableHeaderCell>
+                    <CTableHeaderCell scope="col">Heading</CTableHeaderCell>
+                    <CTableHeaderCell scope="col">Heading</CTableHeaderCell>
+                  </CTableRow>
+                </CTableHead>
+                <CTableBody>
+                  <CTableRow>
+                    <CTableHeaderCell scope="row">1</CTableHeaderCell>
+                    <CTableDataCell>Mark</CTableDataCell>
+                    <CTableDataCell>Otto</CTableDataCell>
+                    <CTableDataCell>@mdo</CTableDataCell>
+                  </CTableRow>
+                  <CTableRow>
+                    <CTableHeaderCell scope="row">2</CTableHeaderCell>
+                    <CTableDataCell>Jacob</CTableDataCell>
+                    <CTableDataCell>Thornton</CTableDataCell>
+                    <CTableDataCell>@fat</CTableDataCell>
+                  </CTableRow>
+                  <CTableRow>
+                    <CTableHeaderCell scope="row">3</CTableHeaderCell>
+                    <CTableDataCell colSpan={2}>Larry the Bird</CTableDataCell>
+                    <CTableDataCell>@twitter</CTableDataCell>
+                  </CTableRow>
+                </CTableBody>
+              </CTable>
+            </DocsExample>
+          </CCardBody>
+        </CCard>
+      </CCol>
+      <CCol xs={12}>
+        <CCard className="mb-4">
+          <CCardHeader>
+            <strong>React Table</strong> <small>Small tables</small>
+          </CCardHeader>
+          <CCardBody>
+            <p className="text-body-secondary small">
+              Add <code>small</code> property to make any <code>&lt;CTable&gt;</code> more compact
+              by cutting all cell <code>padding</code> in half.
+            </p>
+            <DocsExample href="components/table#small-tables">
+              <CTable small>
+                <CTableHead>
+                  <CTableRow>
+                    <CTableHeaderCell scope="col">#</CTableHeaderCell>
+                    <CTableHeaderCell scope="col">Class</CTableHeaderCell>
+                    <CTableHeaderCell scope="col">Heading</CTableHeaderCell>
+                    <CTableHeaderCell scope="col">Heading</CTableHeaderCell>
+                  </CTableRow>
+                </CTableHead>
+                <CTableBody>
+                  <CTableRow>
+                    <CTableHeaderCell scope="row">1</CTableHeaderCell>
+                    <CTableDataCell>Mark</CTableDataCell>
+                    <CTableDataCell>Otto</CTableDataCell>
+                    <CTableDataCell>@mdo</CTableDataCell>
+                  </CTableRow>
+                  <CTableRow>
+                    <CTableHeaderCell scope="row">2</CTableHeaderCell>
+                    <CTableDataCell>Jacob</CTableDataCell>
+                    <CTableDataCell>Thornton</CTableDataCell>
+                    <CTableDataCell>@fat</CTableDataCell>
+                  </CTableRow>
+                  <CTableRow>
+                    <CTableHeaderCell scope="row">3</CTableHeaderCell>
+                    <CTableDataCell colSpan={2}>Larry the Bird</CTableDataCell>
+                    <CTableDataCell>@twitter</CTableDataCell>
+                  </CTableRow>
+                </CTableBody>
+              </CTable>
+            </DocsExample>
+          </CCardBody>
+        </CCard>
+      </CCol>
+      <CCol xs={12}>
+        <CCard className="mb-4">
+          <CCardHeader>
+            <strong>React Table</strong> <small>Vertical alignment</small>
+          </CCardHeader>
+          <CCardBody>
+            <p className="text-body-secondary small">
+              Table cells of <code>&lt;CTableHead&gt;</code> are always vertical aligned to the
+              bottom. Table cells in <code>&lt;CTableBody&gt;</code> inherit their alignment from{' '}
+              <code>&lt;CTable&gt;</code> and are aligned to the the top by default. Use the align
+              property to re-align where needed.
+            </p>
+            <DocsExample href="components/table#vertical-alignment">
+              <CTable align="middle" responsive>
+                <CTableHead>
+                  <CTableRow>
+                    <CTableHeaderCell scope="col" className="w-25">
+                      Heading 1
+                    </CTableHeaderCell>
+                    <CTableHeaderCell scope="col" className="w-25">
+                      Heading 2
+                    </CTableHeaderCell>
+                    <CTableHeaderCell scope="col" className="w-25">
+                      Heading 3
+                    </CTableHeaderCell>
+                    <CTableHeaderCell scope="col" className="w-25">
+                      Heading 4
+                    </CTableHeaderCell>
+                  </CTableRow>
+                </CTableHead>
+                <CTableBody>
+                  <CTableRow>
+                    <CTableDataCell>
+                      This cell inherits <code>vertical-align: middle;</code> from the table
+                    </CTableDataCell>
+                    <CTableDataCell>
+                      This cell inherits <code>vertical-align: middle;</code> from the table
+                    </CTableDataCell>
+                    <CTableDataCell>
+                      This cell inherits <code>vertical-align: middle;</code> from the table
+                    </CTableDataCell>
+                    <CTableDataCell>
+                      This here is some placeholder text, intended to take up quite a bit of
+                      vertical space, to demonsCTableRowate how the vertical alignment works in the
+                      preceding cells.
+                    </CTableDataCell>
+                  </CTableRow>
+                  <CTableRow align="bottom">
+                    <CTableDataCell>
+                      This cell inherits <code>vertical-align: bottom;</code> from the table row
+                    </CTableDataCell>
+                    <CTableDataCell>
+                      This cell inherits <code>vertical-align: bottom;</code> from the table row
+                    </CTableDataCell>
+                    <CTableDataCell>
+                      This cell inherits <code>vertical-align: bottom;</code> from the table row
+                    </CTableDataCell>
+                    <CTableDataCell>
+                      This here is some placeholder text, intended to take up quite a bit of
+                      vertical space, to demonsCTableRowate how the vertical alignment works in the
+                      preceding cells.
+                    </CTableDataCell>
+                  </CTableRow>
+                  <CTableRow>
+                    <CTableDataCell>
+                      This cell inherits <code>vertical-align: middle;</code> from the table
+                    </CTableDataCell>
+                    <CTableDataCell>
+                      This cell inherits <code>vertical-align: middle;</code> from the table
+                    </CTableDataCell>
+                    <CTableDataCell align="top">This cell is aligned to the top.</CTableDataCell>
+                    <CTableDataCell>
+                      This here is some placeholder text, intended to take up quite a bit of
+                      vertical space, to demonsCTableRowate how the vertical alignment works in the
+                      preceding cells.
+                    </CTableDataCell>
+                  </CTableRow>
+                </CTableBody>
+              </CTable>
+            </DocsExample>
+          </CCardBody>
+        </CCard>
+      </CCol>
+      <CCol xs={12}>
+        <CCard className="mb-4">
+          <CCardHeader>
+            <strong>React Table</strong> <small>Nesting</small>
+          </CCardHeader>
+          <CCardBody>
+            <p className="text-body-secondary small">
+              Border styles, active styles, and table variants are not inherited by nested tables.
+            </p>
+            <DocsExample href="components/table#nesting">
+              <CTable striped>
+                <CTableHead>
+                  <CTableRow>
+                    <CTableHeaderCell scope="col">#</CTableHeaderCell>
+                    <CTableHeaderCell scope="col">Class</CTableHeaderCell>
+                    <CTableHeaderCell scope="col">Heading</CTableHeaderCell>
+                    <CTableHeaderCell scope="col">Heading</CTableHeaderCell>
+                  </CTableRow>
+                </CTableHead>
+                <CTableBody>
+                  <CTableRow>
+                    <CTableHeaderCell scope="row">1</CTableHeaderCell>
+                    <CTableDataCell>Mark</CTableDataCell>
+                    <CTableDataCell>Otto</CTableDataCell>
+                    <CTableDataCell>@mdo</CTableDataCell>
+                  </CTableRow>
+                  <CTableRow>
+                    <CTableHeaderCell colSpan={4}>
+                      <CTable>
+                        <CTableHead>
+                          <CTableRow>
+                            <CTableHeaderCell scope="col">Header</CTableHeaderCell>
+                            <CTableHeaderCell scope="col">Header</CTableHeaderCell>
+                            <CTableHeaderCell scope="col">Header</CTableHeaderCell>
+                          </CTableRow>
+                        </CTableHead>
+                        <CTableBody>
+                          <CTableRow>
+                            <CTableHeaderCell scope="row">A</CTableHeaderCell>
+                            <CTableDataCell>First</CTableDataCell>
+                            <CTableDataCell>Last</CTableDataCell>
+                          </CTableRow>
+                          <CTableRow>
+                            <CTableHeaderCell scope="row">B</CTableHeaderCell>
+                            <CTableDataCell>First</CTableDataCell>
+                            <CTableDataCell>Last</CTableDataCell>
+                          </CTableRow>
+                          <CTableRow>
+                            <CTableHeaderCell scope="row">C</CTableHeaderCell>
+                            <CTableDataCell>First</CTableDataCell>
+                            <CTableDataCell>Last</CTableDataCell>
+                          </CTableRow>
+                        </CTableBody>
+                      </CTable>
+                    </CTableHeaderCell>
+                  </CTableRow>
+                  <CTableRow>
+                    <CTableHeaderCell scope="row">3</CTableHeaderCell>
+                    <CTableDataCell colSpan={2}>Larry the Bird</CTableDataCell>
+                    <CTableDataCell>@twitter</CTableDataCell>
+                  </CTableRow>
+                </CTableBody>
+              </CTable>
+            </DocsExample>
+          </CCardBody>
+        </CCard>
+      </CCol>
+      <CCol xs={12}>
+        <CCard className="mb-4">
+          <CCardHeader>
+            <strong>React Table</strong> <small>Table head</small>
+          </CCardHeader>
+          <CCardBody>
+            <p className="text-body-secondary small">
+              Similar to tables and dark tables, use the modifier prop{' '}
+              <code>color=&#34;light&#34;</code> or <code>color=&#34;dark&#34;</code> to make{' '}
+              <code>&lt;CTableHead&gt;</code>s appear light or dark gray.
+            </p>
+            <DocsExample href="components/table#table-head">
+              <CTable>
+                <CTableHead color="light">
+                  <CTableRow>
+                    <CTableHeaderCell scope="col">#</CTableHeaderCell>
+                    <CTableHeaderCell scope="col">Class</CTableHeaderCell>
+                    <CTableHeaderCell scope="col">Heading</CTableHeaderCell>
+                    <CTableHeaderCell scope="col">Heading</CTableHeaderCell>
+                  </CTableRow>
+                </CTableHead>
+                <CTableBody>
+                  <CTableRow>
+                    <CTableHeaderCell scope="row">1</CTableHeaderCell>
+                    <CTableDataCell>Mark</CTableDataCell>
+                    <CTableDataCell>Otto</CTableDataCell>
+                    <CTableDataCell>@mdo</CTableDataCell>
+                  </CTableRow>
+                  <CTableRow>
+                    <CTableHeaderCell scope="row">2</CTableHeaderCell>
+                    <CTableDataCell>Jacob</CTableDataCell>
+                    <CTableDataCell>Thornton</CTableDataCell>
+                    <CTableDataCell>@fat</CTableDataCell>
+                  </CTableRow>
+                  <CTableRow>
+                    <CTableHeaderCell scope="row">3</CTableHeaderCell>
+                    <CTableDataCell>Larry</CTableDataCell>
+                    <CTableDataCell>the Bird</CTableDataCell>
+                    <CTableDataCell>@twitter</CTableDataCell>
+                  </CTableRow>
+                </CTableBody>
+              </CTable>
+            </DocsExample>
+            <DocsExample href="components/table#table-head">
+              <CTable>
+                <CTableHead color="dark">
+                  <CTableRow>
+                    <CTableHeaderCell scope="col">#</CTableHeaderCell>
+                    <CTableHeaderCell scope="col">Class</CTableHeaderCell>
+                    <CTableHeaderCell scope="col">Heading</CTableHeaderCell>
+                    <CTableHeaderCell scope="col">Heading</CTableHeaderCell>
+                  </CTableRow>
+                </CTableHead>
+                <CTableBody>
+                  <CTableRow>
+                    <CTableHeaderCell scope="row">1</CTableHeaderCell>
+                    <CTableDataCell>Mark</CTableDataCell>
+                    <CTableDataCell>Otto</CTableDataCell>
+                    <CTableDataCell>@mdo</CTableDataCell>
+                  </CTableRow>
+                  <CTableRow>
+                    <CTableHeaderCell scope="row">2</CTableHeaderCell>
+                    <CTableDataCell>Jacob</CTableDataCell>
+                    <CTableDataCell>Thornton</CTableDataCell>
+                    <CTableDataCell>@fat</CTableDataCell>
+                  </CTableRow>
+                  <CTableRow>
+                    <CTableHeaderCell scope="row">3</CTableHeaderCell>
+                    <CTableDataCell colSpan={2}>Larry the Bird</CTableDataCell>
+                    <CTableDataCell>@twitter</CTableDataCell>
+                  </CTableRow>
+                </CTableBody>
+              </CTable>
+            </DocsExample>
+          </CCardBody>
+        </CCard>
+      </CCol>
+      <CCol xs={12}>
+        <CCard className="mb-4">
+          <CCardHeader>
+            <strong>React Table</strong> <small>Table foot</small>
+          </CCardHeader>
+          <CCardBody>
+            <DocsExample href="components/table#table-foot">
+              <CTable>
+                <CTableHead color="light">
+                  <CTableRow>
+                    <CTableHeaderCell scope="col">#</CTableHeaderCell>
+                    <CTableHeaderCell scope="col">Class</CTableHeaderCell>
+                    <CTableHeaderCell scope="col">Heading</CTableHeaderCell>
+                    <CTableHeaderCell scope="col">Heading</CTableHeaderCell>
+                  </CTableRow>
+                </CTableHead>
+                <CTableBody>
+                  <CTableRow>
+                    <CTableHeaderCell scope="row">1</CTableHeaderCell>
+                    <CTableDataCell>Mark</CTableDataCell>
+                    <CTableDataCell>Otto</CTableDataCell>
+                    <CTableDataCell>@mdo</CTableDataCell>
+                  </CTableRow>
+                  <CTableRow>
+                    <CTableHeaderCell scope="row">2</CTableHeaderCell>
+                    <CTableDataCell>Jacob</CTableDataCell>
+                    <CTableDataCell>Thornton</CTableDataCell>
+                    <CTableDataCell>@fat</CTableDataCell>
+                  </CTableRow>
+                  <CTableRow>
+                    <CTableHeaderCell scope="row">3</CTableHeaderCell>
+                    <CTableDataCell colSpan={2}>Larry the Bird</CTableDataCell>
+                    <CTableDataCell>@twitter</CTableDataCell>
+                  </CTableRow>
+                </CTableBody>
+                <CTableHead>
+                  <CTableRow>
+                    <CTableDataCell>Footer</CTableDataCell>
+                    <CTableDataCell>Footer</CTableDataCell>
+                    <CTableDataCell>Footer</CTableDataCell>
+                    <CTableDataCell>Footer</CTableDataCell>
+                  </CTableRow>
+                </CTableHead>
+              </CTable>
+            </DocsExample>
+          </CCardBody>
+        </CCard>
+      </CCol>
+      <CCol xs={12}>
+        <CCard className="mb-4">
+          <CCardHeader>
+            <strong>React Table</strong> <small>Captions</small>
+          </CCardHeader>
+          <CCardBody>
+            <p className="text-body-secondary small">
+              A <code>&lt;CTableCaption&gt;</code> functions like a heading for a table. It helps
+              users with screen readers to find a table and understand what it&#39;s about and
+              decide if they want to read it.
+            </p>
+            <DocsExample href="components/table#captions">
+              <CTable>
+                <CTableCaption>List of users</CTableCaption>
+                <CTableHead>
+                  <CTableRow>
+                    <CTableHeaderCell scope="col">#</CTableHeaderCell>
+                    <CTableHeaderCell scope="col">Class</CTableHeaderCell>
+                    <CTableHeaderCell scope="col">Heading</CTableHeaderCell>
+                    <CTableHeaderCell scope="col">Heading</CTableHeaderCell>
+                  </CTableRow>
+                </CTableHead>
+                <CTableBody>
+                  <CTableRow>
+                    <CTableHeaderCell scope="row">1</CTableHeaderCell>
+                    <CTableDataCell>Mark</CTableDataCell>
+                    <CTableDataCell>Otto</CTableDataCell>
+                    <CTableDataCell>@mdo</CTableDataCell>
+                  </CTableRow>
+                  <CTableRow>
+                    <CTableHeaderCell scope="row">2</CTableHeaderCell>
+                    <CTableDataCell>Jacob</CTableDataCell>
+                    <CTableDataCell>Thornton</CTableDataCell>
+                    <CTableDataCell>@fat</CTableDataCell>
+                  </CTableRow>
+                  <CTableRow>
+                    <CTableHeaderCell scope="row">3</CTableHeaderCell>
+                    <CTableDataCell>Larry</CTableDataCell>
+                    <CTableDataCell>the Bird</CTableDataCell>
+                    <CTableDataCell>@twitter</CTableDataCell>
+                  </CTableRow>
+                </CTableBody>
+              </CTable>
+            </DocsExample>
+            <p className="text-body-secondary small">
+              You can also put the <code>&lt;CTableCaption&gt;</code> on the top of the table with{' '}
+              <code>caption=&#34;top&#34;</code>.
+            </p>
+            <DocsExample href="components/table#captions">
+              <CTable caption="top">
+                <CTableCaption>List of users</CTableCaption>
+                <CTableHead>
+                  <CTableRow>
+                    <CTableHeaderCell scope="col">#</CTableHeaderCell>
+                    <CTableHeaderCell scope="col">Class</CTableHeaderCell>
+                    <CTableHeaderCell scope="col">Heading</CTableHeaderCell>
+                    <CTableHeaderCell scope="col">Heading</CTableHeaderCell>
+                  </CTableRow>
+                </CTableHead>
+                <CTableBody>
+                  <CTableRow>
+                    <CTableHeaderCell scope="row">1</CTableHeaderCell>
+                    <CTableDataCell>Mark</CTableDataCell>
+                    <CTableDataCell>Otto</CTableDataCell>
+                    <CTableDataCell>@mdo</CTableDataCell>
+                  </CTableRow>
+                  <CTableRow>
+                    <CTableHeaderCell scope="row">2</CTableHeaderCell>
+                    <CTableDataCell>Jacob</CTableDataCell>
+                    <CTableDataCell>Thornton</CTableDataCell>
+                    <CTableDataCell>@fat</CTableDataCell>
+                  </CTableRow>
+                  <CTableRow>
+                    <CTableHeaderCell scope="row">3</CTableHeaderCell>
+                    <CTableDataCell>Larry</CTableDataCell>
+                    <CTableDataCell>the Bird</CTableDataCell>
+                    <CTableDataCell>@twitter</CTableDataCell>
+                  </CTableRow>
+                </CTableBody>
+              </CTable>
+            </DocsExample>
+          </CCardBody>
+        </CCard>
+      </CCol>
+    </CRow>
+  )
+}
+
+export default Tables
Index: PlanningMamagement/frontend/src/views/base/progress/Progress.js
===================================================================
diff --git a/PlanningMamagement/frontend/src/views/base/progress/Progress.js b/PlanningMamagement/frontend/src/views/base/progress/Progress.js
new file mode 100644
--- /dev/null	(date 1728391641943)
+++ b/PlanningMamagement/frontend/src/views/base/progress/Progress.js	(date 1728391641943)
@@ -0,0 +1,186 @@
+import React from 'react'
+import { CCard, CCardBody, CCardHeader, CCol, CProgress, CProgressBar, CRow } from '@coreui/react'
+import { DocsExample } from 'src/components'
+
+const Progress = () => {
+  return (
+    <CRow>
+      <CCol xs={12}>
+        <CCard className="mb-4">
+          <CCardHeader>
+            <strong>React Progress</strong> <small>Basic example</small>
+          </CCardHeader>
+          <CCardBody>
+            <p className="text-body-secondary small">
+              Progress components are built with two HTML elements, some CSS to set the width, and a
+              few attributes. We don&#39;tuse{' '}
+              <a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/progress">
+                the HTML5 <code>&lt;progress&gt;</code> element
+              </a>
+              , ensuring you can stack progress bars, animate them, and place text labels over them.
+            </p>
+            <DocsExample href="components/progress">
+              <CProgress className="mb-3">
+                <CProgressBar value={0} />
+              </CProgress>
+              <CProgress className="mb-3">
+                <CProgressBar value={25} />
+              </CProgress>
+              <CProgress className="mb-3">
+                <CProgressBar value={50} />
+              </CProgress>
+              <CProgress className="mb-3">
+                <CProgressBar value={75} />
+              </CProgress>
+              <CProgress className="mb-3">
+                <CProgressBar value={100} />
+              </CProgress>
+            </DocsExample>
+          </CCardBody>
+        </CCard>
+      </CCol>
+      <CCol xs={12}>
+        <CCard className="mb-4">
+          <CCardHeader>
+            <strong>React Progress</strong> <small>Labels</small>
+          </CCardHeader>
+          <CCardBody>
+            <p className="text-body-secondary small">
+              Add labels to your progress bars by placing text within the{' '}
+              <code>&lt;CProgressBar&gt;</code>.
+            </p>
+            <DocsExample href="components/progress#labels">
+              <CProgress className="mb-3">
+                <CProgressBar value={25}>25%</CProgressBar>
+              </CProgress>
+            </DocsExample>
+          </CCardBody>
+        </CCard>
+      </CCol>
+      <CCol xs={12}>
+        <CCard className="mb-4">
+          <CCardHeader>
+            <strong>React Progress</strong> <small>Height</small>
+          </CCardHeader>
+          <CCardBody>
+            <p className="text-body-secondary small">
+              We only set a <code>height</code> value on the <code>&lt;CProgress&gt;</code>, so if
+              you change that value the inner <code>&lt;CProgressBar&gt;</code> will automatically
+              resize accordingly.
+            </p>
+            <DocsExample href="components/progress#height">
+              <CProgress height={1} className="mb-3">
+                <CProgressBar value={25}></CProgressBar>
+              </CProgress>
+              <CProgress height={20} className="mb-3">
+                <CProgressBar value={25}></CProgressBar>
+              </CProgress>
+            </DocsExample>
+          </CCardBody>
+        </CCard>
+      </CCol>
+      <CCol xs={12}>
+        <CCard className="mb-4">
+          <CCardHeader>
+            <strong>React Progress</strong> <small>Backgrounds</small>
+          </CCardHeader>
+          <CCardBody>
+            <p className="text-body-secondary small">
+              Use <code>color</code> prop to change the appearance of individual progress bars.
+            </p>
+            <DocsExample href="components/progress#backgrounds">
+              <CProgress className="mb-3">
+                <CProgressBar color="success" value={25} />
+              </CProgress>
+              <CProgress className="mb-3">
+                <CProgressBar color="info" value={50} />
+              </CProgress>
+              <CProgress className="mb-3">
+                <CProgressBar color="warning" value={75} />
+              </CProgress>
+              <CProgress className="mb-3">
+                <CProgressBar color="danger" value={100} />
+              </CProgress>
+            </DocsExample>
+          </CCardBody>
+        </CCard>
+      </CCol>
+      <CCol xs={12}>
+        <CCard className="mb-4">
+          <CCardHeader>
+            <strong>React Progress</strong> <small>Multiple bars</small>
+          </CCardHeader>
+          <CCardBody>
+            <p className="text-body-secondary small">
+              Include multiple progress bars in a progress component if you need.
+            </p>
+            <DocsExample href="components/progress#multiple-bars">
+              <CProgress className="mb-3">
+                <CProgressBar value={15} />
+                <CProgressBar color="success" value={30} />
+                <CProgressBar color="info" value={20} />
+              </CProgress>
+            </DocsExample>
+          </CCardBody>
+        </CCard>
+      </CCol>
+      <CCol xs={12}>
+        <CCard className="mb-4">
+          <CCardHeader>
+            <strong>React Progress</strong> <small>Striped</small>
+          </CCardHeader>
+          <CCardBody>
+            <p className="text-body-secondary small">
+              Add <code>variant=&#34;striped&#34;</code> to any <code>&lt;CProgressBar&gt;</code> to
+              apply a stripe via CSS gradient over the progress bar&#39;s background color.
+            </p>
+            <DocsExample href="components/progress#striped">
+              <CProgress className="mb-3">
+                <CProgressBar color="success" variant="striped" value={25} />
+              </CProgress>
+              <CProgress className="mb-3">
+                <CProgressBar color="info" variant="striped" value={50} />
+              </CProgress>
+              <CProgress className="mb-3">
+                <CProgressBar color="warning" variant="striped" value={75} />
+              </CProgress>
+              <CProgress className="mb-3">
+                <CProgressBar color="danger" variant="striped" value={100} />
+              </CProgress>
+            </DocsExample>
+          </CCardBody>
+        </CCard>
+      </CCol>
+      <CCol xs={12}>
+        <CCard className="mb-4">
+          <CCardHeader>
+            <strong>React Progress</strong> <small>Animated stripes</small>
+          </CCardHeader>
+          <CCardBody>
+            <p className="text-body-secondary small">
+              The striped gradient can also be animated. Add <code>animated</code> property to{' '}
+              <code>&lt;CProgressBar&gt;</code> to animate the stripes right to left via CSS3
+              animations.
+            </p>
+            <DocsExample href="components/progress#animated-stripes">
+              <CProgress className="mb-3">
+                <CProgressBar color="success" variant="striped" animated value={25} />
+              </CProgress>
+              <CProgress className="mb-3">
+                <CProgressBar color="info" variant="striped" animated value={50} />
+              </CProgress>
+              <CProgress className="mb-3">
+                <CProgressBar color="warning" variant="striped" animated value={75} />
+              </CProgress>
+              <CProgress className="mb-3">
+                <CProgressBar color="danger" variant="striped" animated value={100} />
+              </CProgress>
+            </DocsExample>
+          </CCardBody>
+        </CCard>
+      </CCol>
+    </CRow>
+  )
+}
+
+export default Progress
Index: PlanningMamagement/frontend/src/views/base/popovers/Popovers.js
===================================================================
diff --git a/PlanningMamagement/frontend/src/views/base/popovers/Popovers.js b/PlanningMamagement/frontend/src/views/base/popovers/Popovers.js
new file mode 100644
--- /dev/null	(date 1728391641929)
+++ b/PlanningMamagement/frontend/src/views/base/popovers/Popovers.js	(date 1728391641929)
@@ -0,0 +1,71 @@
+import React from 'react'
+import { CButton, CCard, CCardBody, CCardHeader, CPopover, CRow, CCol } from '@coreui/react'
+import { DocsExample } from 'src/components'
+
+const Popovers = () => {
+  return (
+    <CRow>
+      <CCol xs={12}>
+        <CCard className="mb-4">
+          <CCardHeader>
+            <strong>React Popover</strong> <small>Basic example</small>
+          </CCardHeader>
+          <CCardBody>
+            <DocsExample href="components/popover">
+              <CPopover
+                title="Popover title"
+                content="And here’s some amazing content. It’s very engaging. Right?"
+                placement="right"
+              >
+                <CButton color="danger" size="lg">
+                  Click to toggle popover
+                </CButton>
+              </CPopover>
+            </DocsExample>
+          </CCardBody>
+        </CCard>
+      </CCol>
+      <CCol xs={12}>
+        <CCard className="mb-4">
+          <CCardHeader>
+            <strong>React Popover</strong> <small>Four directions</small>
+          </CCardHeader>
+          <CCardBody>
+            <p className="text-body-secondary small">
+              Four options are available: top, right, bottom, and left aligned. Directions are
+              mirrored when using CoreUI for React in RTL.
+            </p>
+            <DocsExample href="components/popover#four-directions">
+              <CPopover
+                content="Vivamus sagittis lacus vel augue laoreet rutrum faucibus."
+                placement="top"
+              >
+                <CButton color="secondary">Popover on top</CButton>
+              </CPopover>
+              <CPopover
+                content="Vivamus sagittis lacus vel augue laoreet rutrum faucibus."
+                placement="right"
+              >
+                <CButton color="secondary">Popover on right</CButton>
+              </CPopover>
+              <CPopover
+                content="Vivamus sagittis lacus vel augue laoreet rutrum faucibus."
+                placement="bottom"
+              >
+                <CButton color="secondary">Popover on bottom</CButton>
+              </CPopover>
+              <CPopover
+                content="Vivamus sagittis lacus vel augue laoreet rutrum faucibus."
+                placement="left"
+              >
+                <CButton color="secondary">Popover on left</CButton>
+              </CPopover>
+            </DocsExample>
+          </CCardBody>
+        </CCard>
+      </CCol>
+    </CRow>
+  )
+}
+
+export default Popovers
Index: PlanningMamagement/frontend/src/views/base/tooltips/Tooltips.js
===================================================================
diff --git a/PlanningMamagement/frontend/src/views/base/tooltips/Tooltips.js b/PlanningMamagement/frontend/src/views/base/tooltips/Tooltips.js
new file mode 100644
--- /dev/null	(date 1728391642014)
+++ b/PlanningMamagement/frontend/src/views/base/tooltips/Tooltips.js	(date 1728391642014)
@@ -0,0 +1,77 @@
+import React from 'react'
+import { CButton, CCard, CCardBody, CCardHeader, CLink, CTooltip, CRow, CCol } from '@coreui/react'
+import { DocsExample } from 'src/components'
+
+const Tooltips = () => {
+  return (
+    <CRow>
+      <CCol xs={12}>
+        <CCard className="mb-4">
+          <CCardHeader>
+            <strong>React Tooltip</strong> <small>Basic example</small>
+          </CCardHeader>
+          <CCardBody>
+            <p className="text-body-secondary small">Hover over the links below to see tooltips:</p>
+            <DocsExample href="components/tooltip">
+              <p className="text-body-secondary">
+                Tight pants next level keffiyeh
+                <CTooltip content="Tooltip text">
+                  <CLink> you probably </CLink>
+                </CTooltip>
+                haven&#39;theard of them. Photo booth beard raw denim letterpress vegan messenger
+                bag stumptown. Farm-to-table seitan, mcsweeney&#39;s fixie sustainable quinoa 8-bit
+                american apparel
+                <CTooltip content="Tooltip text">
+                  <CLink> have a </CLink>
+                </CTooltip>
+                terry richardson vinyl chambray. Beard stumptown, cardigans banh mi lomo
+                thundercats. Tofu biodiesel williamsburg marfa, four loko mcsweeney&#39;&#39;s
+                cleanse vegan chambray. A really ironic artisan
+                <CTooltip content="Tooltip text">
+                  <CLink> whatever keytar </CLink>
+                </CTooltip>
+                scenester farm-to-table banksy Austin
+                <CTooltip content="Tooltip text">
+                  <CLink> twitter handle </CLink>
+                </CTooltip>
+                freegan cred raw denim single-origin coffee viral.
+              </p>
+            </DocsExample>
+            <p className="text-body-secondary small">
+              Hover over the buttons below to see the four tooltips directions: top, right, bottom,
+              and left. Directions are mirrored when using CoreUI in RTL.
+            </p>
+            <DocsExample href="components/tooltip">
+              <CTooltip
+                content="Vivamus sagittis lacus vel augue laoreet rutrum faucibus."
+                placement="top"
+              >
+                <CButton color="secondary">Tooltip on top</CButton>
+              </CTooltip>
+              <CTooltip
+                content="Vivamus sagittis lacus vel augue laoreet rutrum faucibus."
+                placement="right"
+              >
+                <CButton color="secondary">Tooltip on right</CButton>
+              </CTooltip>
+              <CTooltip
+                content="Vivamus sagittis lacus vel augue laoreet rutrum faucibus."
+                placement="bottom"
+              >
+                <CButton color="secondary">Tooltip on bottom</CButton>
+              </CTooltip>
+              <CTooltip
+                content="Vivamus sagittis lacus vel augue laoreet rutrum faucibus."
+                placement="left"
+              >
+                <CButton color="secondary">Tooltip on left</CButton>
+              </CTooltip>
+            </DocsExample>
+          </CCardBody>
+        </CCard>
+      </CCol>
+    </CRow>
+  )
+}
+
+export default Tooltips
Index: PlanningMamagement/frontend/src/views/base/spinners/Spinners.js
===================================================================
diff --git a/PlanningMamagement/frontend/src/views/base/spinners/Spinners.js b/PlanningMamagement/frontend/src/views/base/spinners/Spinners.js
new file mode 100644
--- /dev/null	(date 1728391641966)
+++ b/PlanningMamagement/frontend/src/views/base/spinners/Spinners.js	(date 1728391641966)
@@ -0,0 +1,120 @@
+import React from 'react'
+import { CButton, CCard, CCardBody, CCardHeader, CCol, CSpinner, CRow } from '@coreui/react'
+import { DocsExample } from 'src/components'
+
+const Spinners = () => {
+  return (
+    <CRow>
+      <CCol xs={12}>
+        <CCard className="mb-4">
+          <CCardHeader>
+            <strong>React Spinner</strong> <small>Border</small>
+          </CCardHeader>
+          <CCardBody>
+            <p className="text-body-secondary small">
+              Use the border spinners for a lightweight loading indicator.
+            </p>
+            <DocsExample href="components/spinner">
+              <CSpinner />
+            </DocsExample>
+            <p className="text-body-secondary small">
+              The border spinner uses <code>currentColor</code> for its <code>border-color</code>.
+              You can use any of our text color utilities on the standard spinner.
+            </p>
+            <DocsExample href="components/spinner#colors">
+              <CSpinner color="primary" />
+              <CSpinner color="secondary" />
+              <CSpinner color="success" />
+              <CSpinner color="danger" />
+              <CSpinner color="warning" />
+              <CSpinner color="info" />
+              <CSpinner color="light" />
+              <CSpinner color="dark" />
+            </DocsExample>
+          </CCardBody>
+        </CCard>
+      </CCol>
+      <CCol xs={12}>
+        <CCard className="mb-4">
+          <CCardHeader>
+            <strong>React Spinner</strong> <small>Growing</small>
+          </CCardHeader>
+          <CCardBody>
+            <p className="text-body-secondary small">
+              If you don&#39;tfancy a border spinner, switch to the grow spinner. While it
+              doesn&#39;t technically spin, it does repeatedly grow!
+            </p>
+            <DocsExample href="components/spinner#growing-spinner">
+              <CSpinner variant="grow" />
+            </DocsExample>
+            <p className="text-body-secondary small">
+              Once again, this spinner is built with <code>currentColor</code>, so you can easily
+              change its appearance. Here it is in blue, along with the supported variants.
+            </p>
+            <DocsExample href="components/spinner#growing-spinner">
+              <CSpinner color="primary" variant="grow" />
+              <CSpinner color="secondary" variant="grow" />
+              <CSpinner color="success" variant="grow" />
+              <CSpinner color="danger" variant="grow" />
+              <CSpinner color="warning" variant="grow" />
+              <CSpinner color="info" variant="grow" />
+              <CSpinner color="light" variant="grow" />
+              <CSpinner color="dark" variant="grow" />
+            </DocsExample>
+          </CCardBody>
+        </CCard>
+      </CCol>
+      <CCol xs={12}>
+        <CCard className="mb-4">
+          <CCardHeader>
+            <strong>React Spinner</strong> <small>Size</small>
+          </CCardHeader>
+          <CCardBody>
+            <p className="text-body-secondary small">
+              Add <code>size=&#34;sm&#34;</code> property to make a smaller spinner that can quickly
+              be used within other components.
+            </p>
+            <DocsExample href="components/spinner#size">
+              <CSpinner size="sm" />
+              <CSpinner size="sm" variant="grow" />
+            </DocsExample>
+          </CCardBody>
+        </CCard>
+      </CCol>
+      <CCol xs={12}>
+        <CCard className="mb-4">
+          <CCardHeader>
+            <strong>React Spinner</strong> <small>Buttons</small>
+          </CCardHeader>
+          <CCardBody>
+            <p className="text-body-secondary small">
+              Use spinners within buttons to indicate an action is currently processing or taking
+              place. You may also swap the text out of the spinner element and utilize button text
+              as needed.
+            </p>
+            <DocsExample href="components/spinner#buttons">
+              <CButton color="primary" disabled>
+                <CSpinner as="span" size="sm" aria-hidden="true" />
+              </CButton>
+              <CButton color="primary" disabled>
+                <CSpinner as="span" size="sm" aria-hidden="true" />
+                Loading...
+              </CButton>
+            </DocsExample>
+            <DocsExample href="components/spinner#buttons">
+              <CButton color="primary" disabled>
+                <CSpinner as="span" size="sm" variant="grow" aria-hidden="true" />
+              </CButton>
+              <CButton color="primary" disabled>
+                <CSpinner as="span" size="sm" variant="grow" aria-hidden="true" />
+                Loading...
+              </CButton>
+            </DocsExample>
+          </CCardBody>
+        </CCard>
+      </CCol>
+    </CRow>
+  )
+}
+
+export default Spinners
Index: PlanningMamagement/frontend/src/views/base/carousels/Carousels.js
===================================================================
diff --git a/PlanningMamagement/frontend/src/views/base/carousels/Carousels.js b/PlanningMamagement/frontend/src/views/base/carousels/Carousels.js
new file mode 100644
--- /dev/null	(date 1728391641816)
+++ b/PlanningMamagement/frontend/src/views/base/carousels/Carousels.js	(date 1728391641816)
@@ -0,0 +1,212 @@
+import React from 'react'
+import {
+  CCard,
+  CCardBody,
+  CCardHeader,
+  CCarousel,
+  CCarouselCaption,
+  CCarouselItem,
+  CCol,
+  CRow,
+} from '@coreui/react'
+import { DocsExample } from 'src/components'
+
+import AngularImg from 'src/assets/images/angular.jpg'
+import ReactImg from 'src/assets/images/react.jpg'
+import VueImg from 'src/assets/images/vue.jpg'
+
+const slidesLight = [
+  'data:image/svg+xml;charset=UTF-8,%3Csvg%20width%3D%22800%22%20height%3D%22400%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%20800%20400%22%20preserveAspectRatio%3D%22none%22%3E%3Cdefs%3E%3Cstyle%20type%3D%22text%2Fcss%22%3E%23holder_1607923e7e2%20text%20%7B%20fill%3A%23AAA%3Bfont-weight%3Anormal%3Bfont-family%3AHelvetica%2C%20monospace%3Bfont-size%3A40pt%20%7D%20%3C%2Fstyle%3E%3C%2Fdefs%3E%3Cg%20id%3D%22holder_1607923e7e2%22%3E%3Crect%20width%3D%22800%22%20height%3D%22400%22%20fill%3D%22%23F5F5F5%22%3E%3C%2Frect%3E%3Cg%3E%3Ctext%20x%3D%22285.9296875%22%20y%3D%22217.75625%22%3EFirst%20slide%3C%2Ftext%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fsvg%3E',
+  'data:image/svg+xml;charset=UTF-8,%3Csvg%20width%3D%22800%22%20height%3D%22400%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%20800%20400%22%20preserveAspectRatio%3D%22none%22%3E%3Cdefs%3E%3Cstyle%20type%3D%22text%2Fcss%22%3E%23holder_15ba800aa20%20text%20%7B%20fill%3A%23BBB%3Bfont-weight%3Anormal%3Bfont-family%3AHelvetica%2C%20monospace%3Bfont-size%3A40pt%20%7D%20%3C%2Fstyle%3E%3C%2Fdefs%3E%3Cg%20id%3D%22holder_15ba800aa20%22%3E%3Crect%20width%3D%22800%22%20height%3D%22400%22%20fill%3D%22%23EEE%22%3E%3C%2Frect%3E%3Cg%3E%3Ctext%20x%3D%22247.3203125%22%20y%3D%22218.3%22%3ESecond%20slide%3C%2Ftext%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fsvg%3E',
+  'data:image/svg+xml;charset=UTF-8,%3Csvg%20width%3D%22800%22%20height%3D%22400%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20viewBox%3D%220%200%20800%20400%22%20preserveAspectRatio%3D%22none%22%3E%3Cdefs%3E%3Cstyle%20type%3D%22text%2Fcss%22%3E%23holder_15ba800aa21%20text%20%7B%20fill%3A%23999%3Bfont-weight%3Anormal%3Bfont-family%3AHelvetica%2C%20monospace%3Bfont-size%3A40pt%20%7D%20%3C%2Fstyle%3E%3C%2Fdefs%3E%3Cg%20id%3D%22holder_15ba800aa21%22%3E%3Crect%20width%3D%22800%22%20height%3D%22400%22%20fill%3D%22%23E5E5E5%22%3E%3C%2Frect%3E%3Cg%3E%3Ctext%20x%3D%22277%22%20y%3D%22218.3%22%3EThird%20slide%3C%2Ftext%3E%3C%2Fg%3E%3C%2Fg%3E%3C%2Fsvg%3E',
+]
+
+const Carousels = () => {
+  return (
+    <CRow>
+      <CCol xs={12}>
+        <CCard className="mb-4">
+          <CCardHeader>
+            <strong>Carousel</strong> <small>Slide only</small>
+          </CCardHeader>
+          <CCardBody>
+            <p className="text-body-secondary small">Here’s a carousel with slides</p>
+            <DocsExample href="components/carousel">
+              <CCarousel>
+                <CCarouselItem>
+                  <img className="d-block w-100" src={ReactImg} alt="slide 1" />
+                </CCarouselItem>
+                <CCarouselItem>
+                  <img className="d-block w-100" src={AngularImg} alt="slide 2" />
+                </CCarouselItem>
+                <CCarouselItem>
+                  <img className="d-block w-100" src={VueImg} alt="slide 3" />
+                </CCarouselItem>
+              </CCarousel>
+            </DocsExample>
+          </CCardBody>
+        </CCard>
+      </CCol>
+      <CCol xs={12}>
+        <CCard className="mb-4">
+          <CCardHeader>
+            <strong>Carousel</strong> <small>With controls</small>
+          </CCardHeader>
+          <CCardBody>
+            <p className="text-body-secondary small">
+              Adding in the previous and next controls by <code>controls</code> property.
+            </p>
+            <DocsExample href="components/carousel/#with-controls">
+              <CCarousel controls>
+                <CCarouselItem>
+                  <img className="d-block w-100" src={ReactImg} alt="slide 1" />
+                </CCarouselItem>
+                <CCarouselItem>
+                  <img className="d-block w-100" src={AngularImg} alt="slide 2" />
+                </CCarouselItem>
+                <CCarouselItem>
+                  <img className="d-block w-100" src={VueImg} alt="slide 3" />
+                </CCarouselItem>
+              </CCarousel>
+            </DocsExample>
+          </CCardBody>
+        </CCard>
+      </CCol>
+      <CCol xs={12}>
+        <CCard className="mb-4">
+          <CCardHeader>
+            <strong>Carousel</strong> <small>With indicators</small>
+          </CCardHeader>
+          <CCardBody>
+            <p className="text-body-secondary small">
+              You can attach the indicators to the carousel, lengthwise the controls, too.
+            </p>
+            <DocsExample href="components/carousel/#with-indicators">
+              <CCarousel controls indicators>
+                <CCarouselItem>
+                  <img className="d-block w-100" src={ReactImg} alt="slide 1" />
+                </CCarouselItem>
+                <CCarouselItem>
+                  <img className="d-block w-100" src={AngularImg} alt="slide 2" />
+                </CCarouselItem>
+                <CCarouselItem>
+                  <img className="d-block w-100" src={VueImg} alt="slide 3" />
+                </CCarouselItem>
+              </CCarousel>
+            </DocsExample>
+          </CCardBody>
+        </CCard>
+      </CCol>
+      <CCol xs={12}>
+        <CCard className="mb-4">
+          <CCardHeader>
+            <strong>Carousel</strong> <small>With captions</small>
+          </CCardHeader>
+          <CCardBody>
+            <p className="text-body-secondary small">
+              You can add captions to slides with the <code>&lt;CCarouselCaption&gt;</code> element
+              within any <code>&lt;CCarouselItem&gt;</code>. They can be immediately hidden on
+              smaller viewports, as shown below, with optional{' '}
+              <a href="https://coreui.io//utilities/display">display utilities</a>. We hide them
+              with <code>.d-none</code> and draw them back on medium-sized devices with{' '}
+              <code>.d-md-block</code>.
+            </p>
+            <DocsExample href="components/carousel/#with-captions">
+              <CCarousel controls indicators>
+                <CCarouselItem>
+                  <img className="d-block w-100" src={ReactImg} alt="slide 1" />
+                  <CCarouselCaption className="d-none d-md-block">
+                    <h5>First slide label</h5>
+                    <p>Some representative placeholder content for the first slide.</p>
+                  </CCarouselCaption>
+                </CCarouselItem>
+                <CCarouselItem>
+                  <img className="d-block w-100" src={AngularImg} alt="slide 2" />
+                  <CCarouselCaption className="d-none d-md-block">
+                    <h5>Second slide label</h5>
+                    <p>Some representative placeholder content for the first slide.</p>
+                  </CCarouselCaption>
+                </CCarouselItem>
+                <CCarouselItem>
+                  <img className="d-block w-100" src={VueImg} alt="slide 3" />
+                  <CCarouselCaption className="d-none d-md-block">
+                    <h5>Third slide label</h5>
+                    <p>Some representative placeholder content for the first slide.</p>
+                  </CCarouselCaption>
+                </CCarouselItem>
+              </CCarousel>
+            </DocsExample>
+          </CCardBody>
+        </CCard>
+      </CCol>
+      <CCol xs={12}>
+        <CCard className="mb-4">
+          <CCardHeader>
+            <strong>Carousel</strong> <small>Crossfade</small>
+          </CCardHeader>
+          <CCardBody>
+            <p className="text-body-secondary small">
+              Add <code>transition=&#34;crossfade&#34;</code> to your carousel to animate slides
+              with a fade transition instead of a slide.
+            </p>
+            <DocsExample href="components/carousel/#crossfade">
+              <CCarousel controls transition="crossfade">
+                <CCarouselItem>
+                  <img className="d-block w-100" src={ReactImg} alt="slide 1" />
+                </CCarouselItem>
+                <CCarouselItem>
+                  <img className="d-block w-100" src={AngularImg} alt="slide 2" />
+                </CCarouselItem>
+                <CCarouselItem>
+                  <img className="d-block w-100" src={VueImg} alt="slide 3" />
+                </CCarouselItem>
+              </CCarousel>
+            </DocsExample>
+          </CCardBody>
+        </CCard>
+      </CCol>
+      <CCol xs={12}>
+        <CCard className="mb-4">
+          <CCardHeader>
+            <strong>Carousel</strong> <small>Dark variant</small>
+          </CCardHeader>
+          <CCardBody>
+            <p className="text-body-secondary small">
+              Add <code>dark</code> property to the <code>CCarousel</code> for darker controls,
+              indicators, and captions. Controls have been inverted from their default white fill
+              with the <code>filter</code> CSS property. Captions and controls have additional Sass
+              variables that customize the <code>color</code> and <code>background-color</code>.
+            </p>
+            <DocsExample href="components/carousel/#dark-variant">
+              <CCarousel controls indicators dark>
+                <CCarouselItem>
+                  <img className="d-block w-100" src={slidesLight[0]} alt="slide 1" />
+                  <CCarouselCaption className="d-none d-md-block">
+                    <h5>First slide label</h5>
+                    <p>Some representative placeholder content for the first slide.</p>
+                  </CCarouselCaption>
+                </CCarouselItem>
+                <CCarouselItem>
+                  <img className="d-block w-100" src={slidesLight[1]} alt="slide 2" />
+                  <CCarouselCaption className="d-none d-md-block">
+                    <h5>Second slide label</h5>
+                    <p>Some representative placeholder content for the first slide.</p>
+                  </CCarouselCaption>
+                </CCarouselItem>
+                <CCarouselItem>
+                  <img className="d-block w-100" src={slidesLight[2]} alt="slide 3" />
+                  <CCarouselCaption className="d-none d-md-block">
+                    <h5>Third slide label</h5>
+                    <p>Some representative placeholder content for the first slide.</p>
+                  </CCarouselCaption>
+                </CCarouselItem>
+              </CCarousel>
+            </DocsExample>
+          </CCardBody>
+        </CCard>
+      </CCol>
+    </CRow>
+  )
+}
+
+export default Carousels
Index: PlanningMamagement/frontend/src/views/base/accordion/Accordion.js
===================================================================
diff --git a/PlanningMamagement/frontend/src/views/base/accordion/Accordion.js b/PlanningMamagement/frontend/src/views/base/accordion/Accordion.js
new file mode 100644
--- /dev/null	(date 1728391641772)
+++ b/PlanningMamagement/frontend/src/views/base/accordion/Accordion.js	(date 1728391641772)
@@ -0,0 +1,177 @@
+import React from 'react'
+import {
+  CCard,
+  CCardBody,
+  CCardHeader,
+  CCol,
+  CRow,
+  CAccordion,
+  CAccordionBody,
+  CAccordionHeader,
+  CAccordionItem,
+} from '@coreui/react'
+import { DocsExample } from 'src/components'
+
+const Accordion = () => {
+  return (
+    <CRow>
+      <CCol xs={12}>
+        <CCard className="mb-4">
+          <CCardHeader>
+            <strong>React Accordion</strong>
+          </CCardHeader>
+          <CCardBody>
+            <p className="text-body-secondary small">
+              Click the accordions below to expand/collapse the accordion content.
+            </p>
+            <DocsExample href="components/accordion">
+              <CAccordion activeItemKey={2}>
+                <CAccordionItem itemKey={1}>
+                  <CAccordionHeader>Accordion Item #1</CAccordionHeader>
+                  <CAccordionBody>
+                    <strong>This is the first item&#39;s accordion body.</strong> It is hidden by
+                    default, until the collapse plugin adds the appropriate classes that we use to
+                    style each element. These classes control the overall appearance, as well as the
+                    showing and hiding via CSS transitions. You can modify any of this with custom
+                    CSS or overriding our default variables. It&#39;s also worth noting that just
+                    about any HTML can go within the <code>.accordion-body</code>, though the
+                    transition does limit overflow.
+                  </CAccordionBody>
+                </CAccordionItem>
+                <CAccordionItem itemKey={2}>
+                  <CAccordionHeader>Accordion Item #2</CAccordionHeader>
+                  <CAccordionBody>
+                    <strong>This is the second item&#39;s accordion body.</strong> It is hidden by
+                    default, until the collapse plugin adds the appropriate classes that we use to
+                    style each element. These classes control the overall appearance, as well as the
+                    showing and hiding via CSS transitions. You can modify any of this with custom
+                    CSS or overriding our default variables. It&#39;s also worth noting that just
+                    about any HTML can go within the <code>.accordion-body</code>, though the
+                    transition does limit overflow.
+                  </CAccordionBody>
+                </CAccordionItem>
+                <CAccordionItem itemKey={3}>
+                  <CAccordionHeader>Accordion Item #3</CAccordionHeader>
+                  <CAccordionBody>
+                    <strong>This is the second item&#39;s accordion body.</strong> It is hidden by
+                    default, until the collapse plugin adds the appropriate classes that we use to
+                    style each element. These classes control the overall appearance, as well as the
+                    showing and hiding via CSS transitions. You can modify any of this with custom
+                    CSS or overriding our default variables. It&#39;s also worth noting that just
+                    about any HTML can go within the <code>.accordion-body</code>, though the
+                    transition does limit overflow.
+                  </CAccordionBody>
+                </CAccordionItem>
+              </CAccordion>
+            </DocsExample>
+          </CCardBody>
+        </CCard>
+        <CCard className="mb-4">
+          <CCardHeader>
+            <strong>React Accordion</strong> <small>Flush</small>
+          </CCardHeader>
+          <CCardBody>
+            <p className="text-body-secondary small">
+              Add <code>flush</code> to remove the default <code>background-color</code>, some
+              borders, and some rounded corners to render accordions edge-to-edge with their parent
+              container.
+            </p>
+            <DocsExample href="components/accordion#flush">
+              <CAccordion flush>
+                <CAccordionItem itemKey={1}>
+                  <CAccordionHeader>Accordion Item #1</CAccordionHeader>
+                  <CAccordionBody>
+                    <strong>This is the first item&#39;s accordion body.</strong> It is hidden by
+                    default, until the collapse plugin adds the appropriate classes that we use to
+                    style each element. These classes control the overall appearance, as well as the
+                    showing and hiding via CSS transitions. You can modify any of this with custom
+                    CSS or overriding our default variables. It&#39;s also worth noting that just
+                    about any HTML can go within the <code>.accordion-body</code>, though the
+                    transition does limit overflow.
+                  </CAccordionBody>
+                </CAccordionItem>
+                <CAccordionItem itemKey={2}>
+                  <CAccordionHeader>Accordion Item #2</CAccordionHeader>
+                  <CAccordionBody>
+                    <strong>This is the second item&#39;s accordion body.</strong> It is hidden by
+                    default, until the collapse plugin adds the appropriate classes that we use to
+                    style each element. These classes control the overall appearance, as well as the
+                    showing and hiding via CSS transitions. You can modify any of this with custom
+                    CSS or overriding our default variables. It&#39;s also worth noting that just
+                    about any HTML can go within the <code>.accordion-body</code>, though the
+                    transition does limit overflow.
+                  </CAccordionBody>
+                </CAccordionItem>
+                <CAccordionItem itemKey={3}>
+                  <CAccordionHeader>Accordion Item #3</CAccordionHeader>
+                  <CAccordionBody>
+                    <strong>This is the second item&#39;s accordion body.</strong> It is hidden by
+                    default, until the collapse plugin adds the appropriate classes that we use to
+                    style each element. These classes control the overall appearance, as well as the
+                    showing and hiding via CSS transitions. You can modify any of this with custom
+                    CSS or overriding our default variables. It&#39;s also worth noting that just
+                    about any HTML can go within the <code>.accordion-body</code>, though the
+                    transition does limit overflow.
+                  </CAccordionBody>
+                </CAccordionItem>
+              </CAccordion>
+            </DocsExample>
+          </CCardBody>
+        </CCard>
+        <CCard className="mb-4">
+          <CCardHeader>
+            <strong>React Accordion</strong> <small>Always open</small>
+          </CCardHeader>
+          <CCardBody>
+            <p className="text-body-secondary small">
+              Add <code>alwaysOpen</code> property to make accordion items stay open when another
+              item is opened.
+            </p>
+            <DocsExample href="components/accordion#flush">
+              <CAccordion alwaysOpen>
+                <CAccordionItem itemKey={1}>
+                  <CAccordionHeader>Accordion Item #1</CAccordionHeader>
+                  <CAccordionBody>
+                    <strong>This is the first item&#39;s accordion body.</strong> It is hidden by
+                    default, until the collapse plugin adds the appropriate classes that we use to
+                    style each element. These classes control the overall appearance, as well as the
+                    showing and hiding via CSS transitions. You can modify any of this with custom
+                    CSS or overriding our default variables. It&#39;s also worth noting that just
+                    about any HTML can go within the <code>.accordion-body</code>, though the
+                    transition does limit overflow.
+                  </CAccordionBody>
+                </CAccordionItem>
+                <CAccordionItem itemKey={2}>
+                  <CAccordionHeader>Accordion Item #2</CAccordionHeader>
+                  <CAccordionBody>
+                    <strong>This is the second item&#39;s accordion body.</strong> It is hidden by
+                    default, until the collapse plugin adds the appropriate classes that we use to
+                    style each element. These classes control the overall appearance, as well as the
+                    showing and hiding via CSS transitions. You can modify any of this with custom
+                    CSS or overriding our default variables. It&#39;s also worth noting that just
+                    about any HTML can go within the <code>.accordion-body</code>, though the
+                    transition does limit overflow.
+                  </CAccordionBody>
+                </CAccordionItem>
+                <CAccordionItem itemKey={3}>
+                  <CAccordionHeader>Accordion Item #3</CAccordionHeader>
+                  <CAccordionBody>
+                    <strong>This is the second item&#39;s accordion body.</strong> It is hidden by
+                    default, until the collapse plugin adds the appropriate classes that we use to
+                    style each element. These classes control the overall appearance, as well as the
+                    showing and hiding via CSS transitions. You can modify any of this with custom
+                    CSS or overriding our default variables. It&#39;s also worth noting that just
+                    about any HTML can go within the <code>.accordion-body</code>, though the
+                    transition does limit overflow.
+                  </CAccordionBody>
+                </CAccordionItem>
+              </CAccordion>
+            </DocsExample>
+          </CCardBody>
+        </CCard>
+      </CCol>
+    </CRow>
+  )
+}
+
+export default Accordion
Index: PlanningMamagement/frontend/src/views/base/jumbotrons/Jumbotrons.js
===================================================================
diff --git a/PlanningMamagement/frontend/src/views/base/jumbotrons/Jumbotrons.js b/PlanningMamagement/frontend/src/views/base/jumbotrons/Jumbotrons.js
new file mode 100644
--- /dev/null	(date 1728391641845)
+++ b/PlanningMamagement/frontend/src/views/base/jumbotrons/Jumbotrons.js	(date 1728391641845)
@@ -0,0 +1,58 @@
+import React from 'react'
+import { CButton, CCard, CCardBody, CCardHeader, CCol, CContainer, CRow } from '@coreui/react'
+import { DocsLink } from 'src/components'
+
+const Jumbotrons = () => {
+  return (
+    <>
+      <CCard className="mb-4">
+        <CCardHeader>
+          Jumbotron
+          <DocsLink name="CJumbotron" />
+        </CCardHeader>
+        <CCardBody>
+          <CContainer className="py-5" fluid>
+            <h1 className="display-5 fw-bold">Custom jumbotron</h1>
+            <p className="col-md-8 fs-4">
+              Using a series of utilities, you can create this jumbotron, just like the one in
+              previous versions of Bootstrap. Check out the examples below for how you can remix and
+              restyle it to your liking.
+            </p>
+            <CButton color="primary" size="lg">
+              Example button
+            </CButton>
+          </CContainer>
+          <CRow className="align-items-md-stretch">
+            <CCol md={6}>
+              <div className="h-100 p-5 text-white bg-dark rounded-3">
+                <h2>Change the background</h2>
+                <p>
+                  Swap the background-color utility and add a `.text-*` color utility to mix up the
+                  jumbotron look. Then, mix and match with additional component themes and more.
+                </p>
+                <CButton color="light" variant="outline">
+                  DocsExample button
+                </CButton>
+              </div>
+            </CCol>
+            <CCol md={6}>
+              <div className="h-100 p-5 bg-light border rounded-3">
+                <h2>Add borders</h2>
+                <p>
+                  Or, keep it light and add a border for some added definition to the boundaries of
+                  your content. Be sure to look under the hood at the source HTML here as we&#39;ve
+                  adjusted the alignment and sizing of both column&#39;s content for equal-height.
+                </p>
+                <CButton color="secondary" variant="outline">
+                  DocsExample button
+                </CButton>
+              </div>
+            </CCol>
+          </CRow>
+        </CCardBody>
+      </CCard>
+    </>
+  )
+}
+
+export default Jumbotrons
Index: PlanningMamagement/frontend/src/views/base/collapses/Collapses.js
===================================================================
diff --git a/PlanningMamagement/frontend/src/views/base/collapses/Collapses.js b/PlanningMamagement/frontend/src/views/base/collapses/Collapses.js
new file mode 100644
--- /dev/null	(date 1728391641830)
+++ b/PlanningMamagement/frontend/src/views/base/collapses/Collapses.js	(date 1728391641830)
@@ -0,0 +1,135 @@
+import React, { useState } from 'react'
+import { CButton, CCard, CCardBody, CCardHeader, CCol, CCollapse, CRow } from '@coreui/react'
+import { DocsExample } from 'src/components'
+
+const Collapses = () => {
+  const [visible, setVisible] = useState(false)
+  const [visibleHorizontal, setVisibleHorizontal] = useState(false)
+  const [visibleA, setVisibleA] = useState(false)
+  const [visibleB, setVisibleB] = useState(false)
+
+  return (
+    <CRow>
+      <CCol xs={12}>
+        <CCard className="mb-4">
+          <CCardHeader>
+            <strong>React Collapse</strong>
+          </CCardHeader>
+          <CCardBody>
+            <p className="text-body-secondary small">You can use a link or a button component.</p>
+            <DocsExample href="components/collapse">
+              <CButton
+                color="primary"
+                href="#"
+                onClick={(e) => {
+                  e.preventDefault()
+                  setVisible(!visible)
+                }}
+              >
+                Link
+              </CButton>
+              <CButton color="primary" onClick={() => setVisible(!visible)}>
+                Button
+              </CButton>
+              <CCollapse visible={visible}>
+                <CCard className="mt-3">
+                  <CCardBody>
+                    Anim pariatur cliche reprehenderit, enim eiusmod high life accusamus terry
+                    richardson ad squid. Nihil anim keffiyeh helvetica, craft beer labore wes
+                    anderson cred nesciunt sapiente ea proident.
+                  </CCardBody>
+                </CCard>
+              </CCollapse>
+            </DocsExample>
+          </CCardBody>
+        </CCard>
+      </CCol>
+      <CCol xs={12}>
+        <CCard className="mb-4">
+          <CCardHeader>
+            <strong>React Collapse</strong> <small> Horizontal</small>
+          </CCardHeader>
+          <CCardBody>
+            <p className="text-body-secondary small">You can use a link or a button component.</p>
+            <DocsExample href="components/collapse#horizontal">
+              <CButton
+                className="mb-3"
+                color="primary"
+                onClick={() => setVisibleHorizontal(!visibleHorizontal)}
+                aria-expanded={visibleHorizontal}
+                aria-controls="collapseWidthExample"
+              >
+                Button
+              </CButton>
+              <div style={{ minHeight: '120px' }}>
+                <CCollapse id="collapseWidthExample" horizontal visible={visibleHorizontal}>
+                  <CCard style={{ width: '300px' }}>
+                    <CCardBody>
+                      This is some placeholder content for a horizontal collapse. It&#39;s hidden by
+                      default and shown when triggered.
+                    </CCardBody>
+                  </CCard>
+                </CCollapse>
+              </div>
+            </DocsExample>
+          </CCardBody>
+        </CCard>
+      </CCol>
+      <CCol xs={12}>
+        <CCard className="mb-4">
+          <CCardHeader>
+            <strong>React Collapse</strong> <small> multi target</small>
+          </CCardHeader>
+          <CCardBody>
+            <p className="text-body-secondary small">
+              A <code>&lt;CButton&gt;</code> can show and hide multiple elements.
+            </p>
+            <DocsExample href="components/collapse#multiple-targets">
+              <CButton color="primary" onClick={() => setVisibleA(!visibleA)}>
+                Toggle first element
+              </CButton>
+              <CButton color="primary" onClick={() => setVisibleB(!visibleB)}>
+                Toggle second element
+              </CButton>
+              <CButton
+                color="primary"
+                onClick={() => {
+                  setVisibleA(!visibleA)
+                  setVisibleB(!visibleB)
+                }}
+              >
+                Toggle both elements
+              </CButton>
+              <CRow>
+                <CCol xs={6}>
+                  <CCollapse visible={visibleA}>
+                    <CCard className="mt-3">
+                      <CCardBody>
+                        Anim pariatur cliche reprehenderit, enim eiusmod high life accusamus terry
+                        richardson ad squid. Nihil anim keffiyeh helvetica, craft beer labore wes
+                        anderson cred nesciunt sapiente ea proident.
+                      </CCardBody>
+                    </CCard>
+                  </CCollapse>
+                </CCol>
+                <CCol xs={6}>
+                  <CCollapse visible={visibleB}>
+                    <CCard className="mt-3">
+                      <CCardBody>
+                        Anim pariatur cliche reprehenderit, enim eiusmod high life accusamus terry
+                        richardson ad squid. Nihil anim keffiyeh helvetica, craft beer labore wes
+                        anderson cred nesciunt sapiente ea proident.
+                      </CCardBody>
+                    </CCard>
+                  </CCollapse>
+                </CCol>
+              </CRow>
+            </DocsExample>
+          </CCardBody>
+        </CCard>
+      </CCol>
+    </CRow>
+  )
+}
+
+export default Collapses
Index: PlanningMamagement/frontend/src/views/base/list-groups/ListGroups.js
===================================================================
diff --git a/PlanningMamagement/frontend/src/views/base/list-groups/ListGroups.js b/PlanningMamagement/frontend/src/views/base/list-groups/ListGroups.js
new file mode 100644
--- /dev/null	(date 1728391641858)
+++ b/PlanningMamagement/frontend/src/views/base/list-groups/ListGroups.js	(date 1728391641858)
@@ -0,0 +1,346 @@
+import React from 'react'
+import {
+  CBadge,
+  CCard,
+  CCardBody,
+  CCardHeader,
+  CCol,
+  CFormCheck,
+  CListGroup,
+  CListGroupItem,
+  CRow,
+} from '@coreui/react'
+import { DocsExample } from 'src/components'
+
+const ListGroups = () => {
+  return (
+    <CRow>
+      <CCol xs={12}>
+        <CCard className="mb-4">
+          <CCardHeader>
+            <strong>React List Group</strong> <small>Basic example</small>
+          </CCardHeader>
+          <CCardBody>
+            <p className="text-body-secondary small">
+              The default list group is an unordered list with items and the proper CSS classes.
+              Build upon it with the options that follow, or with your CSS as required.
+            </p>
+            <DocsExample href="components/list-group">
+              <CListGroup>
+                <CListGroupItem>Cras justo odio</CListGroupItem>
+                <CListGroupItem>Dapibus ac facilisis in</CListGroupItem>
+                <CListGroupItem>Morbi leo risus</CListGroupItem>
+                <CListGroupItem>Porta ac consectetur ac</CListGroupItem>
+                <CListGroupItem>Vestibulum at eros</CListGroupItem>
+              </CListGroup>
+            </DocsExample>
+          </CCardBody>
+        </CCard>
+      </CCol>
+      <CCol xs={12}>
+        <CCard className="mb-4">
+          <CCardHeader>
+            <strong>React List Group</strong> <small>Active items</small>
+          </CCardHeader>
+          <CCardBody>
+            <p className="text-body-secondary small">
+              Add <code>active</code> boolean property to a <code>&lt;CListGroupItem&gt;</code> to
+              show the current active selection.
+            </p>
+            <DocsExample href="components/list-group/#active-items">
+              <CListGroup>
+                <CListGroupItem active>Cras justo odio</CListGroupItem>
+                <CListGroupItem>Dapibus ac facilisis in</CListGroupItem>
+                <CListGroupItem>Morbi leo risus</CListGroupItem>
+                <CListGroupItem>Porta ac consectetur ac</CListGroupItem>
+                <CListGroupItem>Vestibulum at eros</CListGroupItem>
+              </CListGroup>
+            </DocsExample>
+          </CCardBody>
+        </CCard>
+      </CCol>
+      <CCol xs={12}>
+        <CCard className="mb-4">
+          <CCardHeader>
+            <strong>React List Group</strong> <small>Disabled items</small>
+          </CCardHeader>
+          <CCardBody>
+            <p className="text-body-secondary small">
+              Add <code>disabled</code> boolean property to a <code>&lt;CListGroupItem&gt;</code> to
+              make it appear disabled.
+            </p>
+            <DocsExample href="components/list-group/#disabled-items">
+              <CListGroup>
+                <CListGroupItem disabled>Cras justo odio</CListGroupItem>
+                <CListGroupItem>Dapibus ac facilisis in</CListGroupItem>
+                <CListGroupItem>Morbi leo risus</CListGroupItem>
+                <CListGroupItem>Porta ac consectetur ac</CListGroupItem>
+                <CListGroupItem>Vestibulum at eros</CListGroupItem>
+              </CListGroup>
+            </DocsExample>
+          </CCardBody>
+        </CCard>
+      </CCol>
+      <CCol xs={12}>
+        <CCard className="mb-4">
+          <CCardHeader>
+            <strong>React List Group</strong> <small>Links and buttons</small>
+          </CCardHeader>
+          <CCardBody>
+            <p className="text-body-secondary small">
+              Use <code>&lt;a&gt;</code>s or <code>&lt;button&gt;</code>s to create{' '}
+              <em>actionable</em> list group items with hover, disabled, and active states by adding{' '}
+              <code>component=&#34;a|button&#34;</code>. We separate these pseudo-classes to ensure
+              list groups made of non-interactive elements (like <code>&lt;li&gt;</code>s or{' '}
+              <code>&lt;div&gt;</code>
+              s) don&#39;tprovide a click or tap affordance.
+            </p>
+            <DocsExample href="components/list-group/#links-and-buttons">
+              <CListGroup>
+                <CListGroupItem as="a" href="#" active>
+                  Cras justo odio
+                </CListGroupItem>
+                <CListGroupItem as="a" href="#">
+                  Dapibus ac facilisis in
+                </CListGroupItem>
+                <CListGroupItem as="a" href="#">
+                  Morbi leo risus
+                </CListGroupItem>
+                <CListGroupItem as="a" href="#">
+                  Porta ac consectetur ac
+                </CListGroupItem>
+                <CListGroupItem as="a" href="#" disabled>
+                  Vestibulum at eros
+                </CListGroupItem>
+              </CListGroup>
+            </DocsExample>
+          </CCardBody>
+        </CCard>
+      </CCol>
+      <CCol xs={12}>
+        <CCard className="mb-4">
+          <CCardHeader>
+            <strong>React List Group</strong> <small>Flush</small>
+          </CCardHeader>
+          <CCardBody>
+            <p className="text-body-secondary small">
+              Add <code>flush</code> boolean property to remove some borders and rounded corners to
+              render list group items edge-to-edge in a parent container (e.g., cards).
+            </p>
+            <DocsExample href="components/list-group/#flush">
+              <CListGroup flush>
+                <CListGroupItem>Cras justo odio</CListGroupItem>
+                <CListGroupItem>Dapibus ac facilisis in</CListGroupItem>
+                <CListGroupItem>Morbi leo risus</CListGroupItem>
+                <CListGroupItem>Porta ac consectetur ac</CListGroupItem>
+                <CListGroupItem>Vestibulum at eros</CListGroupItem>
+              </CListGroup>
+            </DocsExample>
+          </CCardBody>
+        </CCard>
+      </CCol>
+      <CCol xs={12}>
+        <CCard className="mb-4">
+          <CCardHeader>
+            <strong>React List Group</strong> <small>Horizontal</small>
+          </CCardHeader>
+          <CCardBody>
+            <p className="text-body-secondary small">
+              Add <code>layout=&#34;horizontal&#34;</code> to change the layout of list group items
+              from vertical to horizontal across all breakpoints. Alternatively, choose a responsive
+              variant <code>.layout=&#34;horizontal-&#123;sm | md | lg | xl | xxl&#125;&#34;</code>{' '}
+              to make a list group horizontal starting at that breakpoint&#39;s{' '}
+              <code>min-width</code>. Currently{' '}
+              <strong>horizontal list groups cannot be combined with flush list groups.</strong>
+            </p>
+            <DocsExample href="components/list-group/#flush">
+              {['', '-sm', '-md', '-lg', '-xl', '-xxl'].map((breakpoint, index) => (
+                <CListGroup className="mb-2" layout={`horizontal${breakpoint}`} key={index}>
+                  <CListGroupItem>Cras justo odio</CListGroupItem>
+                  <CListGroupItem>Dapibus ac facilisis in</CListGroupItem>
+                  <CListGroupItem>Morbi leo risus</CListGroupItem>
+                </CListGroup>
+              ))}
+            </DocsExample>
+          </CCardBody>
+        </CCard>
+      </CCol>
+      <CCol xs={12}>
+        <CCard className="mb-4">
+          <CCardHeader>
+            <strong>React List Group</strong> <small>Contextual classes</small>
+          </CCardHeader>
+          <CCardBody>
+            <p className="text-body-secondary small">
+              Use contextual classes to style list items with a stateful background and color.
+            </p>
+            <DocsExample href="components/list-group/#contextual-classes">
+              <CListGroup>
+                <CListGroupItem>Dapibus ac facilisis in</CListGroupItem>
+                {[
+                  'primary',
+                  'secondary',
+                  'success',
+                  'danger',
+                  'warning',
+                  'info',
+                  'light',
+                  'dark',
+                ].map((color, index) => (
+                  <CListGroupItem color={color} key={index}>
+                    A simple {color} list group item
+                  </CListGroupItem>
+                ))}
+              </CListGroup>
+            </DocsExample>
+            <p className="text-body-secondary small">
+              Contextual classes also work with <code>&lt;a&gt;</code>s or{' '}
+              <code>&lt;button&gt;</code>s. Note the addition of the hover styles here not present
+              in the previous example. Also supported is the <code>active</code> state; apply it to
+              indicate an active selection on a contextual list group item.
+            </p>
+            <DocsExample href="components/list-group/#contextual-classes">
+              <CListGroup>
+                <CListGroupItem as="a" href="#">
+                  Dapibus ac facilisis in
+                </CListGroupItem>
+                {[
+                  'primary',
+                  'secondary',
+                  'success',
+                  'danger',
+                  'warning',
+                  'info',
+                  'light',
+                  'dark',
+                ].map((color, index) => (
+                  <CListGroupItem as="a" href="#" color={color} key={index}>
+                    A simple {color} list group item
+                  </CListGroupItem>
+                ))}
+              </CListGroup>
+            </DocsExample>
+          </CCardBody>
+        </CCard>
+      </CCol>
+      <CCol xs={12}>
+        <CCard className="mb-4">
+          <CCardHeader>
+            <strong>React List Group</strong> <small>With badges</small>
+          </CCardHeader>
+          <CCardBody>
+            <p className="text-body-secondary small">
+              Add badges to any list group item to show unread counts, activity, and more.
+            </p>
+            <DocsExample href="components/list-group/#with-badges">
+              <CListGroup>
+                <CListGroupItem className="d-flex justify-content-between align-items-center">
+                  Cras justo odio
+                  <CBadge color="primary" shape="rounded-pill">
+                    14
+                  </CBadge>
+                </CListGroupItem>
+                <CListGroupItem className="d-flex justify-content-between align-items-center">
+                  Dapibus ac facilisis in
+                  <CBadge color="primary" shape="rounded-pill">
+                    2
+                  </CBadge>
+                </CListGroupItem>
+                <CListGroupItem className="d-flex justify-content-between align-items-center">
+                  Morbi leo risus
+                  <CBadge color="primary" shape="rounded-pill">
+                    1
+                  </CBadge>
+                </CListGroupItem>
+              </CListGroup>
+            </DocsExample>
+          </CCardBody>
+        </CCard>
+      </CCol>
+      <CCol xs={12}>
+        <CCard className="mb-4">
+          <CCardHeader>
+            <strong>React List Group</strong> <small>Custom content</small>
+          </CCardHeader>
+          <CCardBody>
+            <p className="text-body-secondary small">
+              Add nearly any HTML within, even for linked list groups like the one below, with the
+              help of <a href="https://coreui.io/docs/utilities/flex/">flexbox utilities</a>.
+            </p>
+            <DocsExample href="components/list-group/#custom-content">
+              <CListGroup>
+                <CListGroupItem as="a" href="#" active>
+                  <div className="d-flex w-100 justify-content-between">
+                    <h5 className="mb-1">List group item heading</h5>
+                    <small>3 days ago</small>
+                  </div>
+                  <p className="mb-1">
+                    Donec id elit non mi porta gravida at eget metus. Maecenas sed diam eget risus
+                    varius blandit.
+                  </p>
+                  <small>Donec id elit non mi porta.</small>
+                </CListGroupItem>
+                <CListGroupItem as="a" href="#">
+                  <div className="d-flex w-100 justify-content-between">
+                    <h5 className="mb-1">List group item heading</h5>
+                    <small className="text-body-secondary">3 days ago</small>
+                  </div>
+                  <p className="mb-1">
+                    Donec id elit non mi porta gravida at eget metus. Maecenas sed diam eget risus
+                    varius blandit.
+                  </p>
+                  <small className="text-body-secondary">Donec id elit non mi porta.</small>
+                </CListGroupItem>
+                <CListGroupItem as="a" href="#">
+                  <div className="d-flex w-100 justify-content-between">
+                    <h5 className="mb-1">List group item heading</h5>
+                    <small className="text-body-secondary">3 days ago</small>
+                  </div>
+                  <p className="mb-1">
+                    Donec id elit non mi porta gravida at eget metus. Maecenas sed diam eget risus
+                    varius blandit.
+                  </p>
+                  <small className="text-body-secondary">Donec id elit non mi porta.</small>
+                </CListGroupItem>
+              </CListGroup>
+            </DocsExample>
+          </CCardBody>
+        </CCard>
+      </CCol>
+      <CCol xs={12}>
+        <CCard className="mb-4">
+          <CCardHeader>
+            <strong>React List Group</strong> <small>Checkboxes and radios</small>
+          </CCardHeader>
+          <CCardBody>
+            <p className="text-body-secondary small">
+              Place CoreUI&#39;s checkboxes and radios within list group items and customize as
+              needed.
+            </p>
+            <DocsExample href="components/list-group/#checkboxes-and-radios">
+              <CListGroup>
+                <CListGroupItem>
+                  <CFormCheck label="Cras justo odio" />
+                </CListGroupItem>
+                <CListGroupItem>
+                  <CFormCheck label="Dapibus ac facilisis in" defaultChecked />
+                </CListGroupItem>
+                <CListGroupItem>
+                  <CFormCheck label="Morbi leo risus" defaultChecked />
+                </CListGroupItem>
+                <CListGroupItem>
+                  <CFormCheck label="orta ac consectetur ac" />
+                </CListGroupItem>
+                <CListGroupItem>
+                  <CFormCheck label="Vestibulum at eros" />
+                </CListGroupItem>
+              </CListGroup>
+            </DocsExample>
+          </CCardBody>
+        </CCard>
+      </CCol>
+    </CRow>
+  )
+}
+
+export default ListGroups
Index: PlanningMamagement/frontend/src/views/base/breadcrumbs/Breadcrumbs.js
===================================================================
diff --git a/PlanningMamagement/frontend/src/views/base/breadcrumbs/Breadcrumbs.js b/PlanningMamagement/frontend/src/views/base/breadcrumbs/Breadcrumbs.js
new file mode 100644
--- /dev/null	(date 1728391641787)
+++ b/PlanningMamagement/frontend/src/views/base/breadcrumbs/Breadcrumbs.js	(date 1728391641787)
@@ -0,0 +1,74 @@
+import React from 'react'
+import {
+  CBreadcrumb,
+  CBreadcrumbItem,
+  CCard,
+  CCardBody,
+  CCardHeader,
+  CCol,
+  CRow,
+  CLink,
+} from '@coreui/react'
+import { DocsExample } from 'src/components'
+
+const Breadcrumbs = () => {
+  return (
+    <CRow>
+      <CCol xs={12}>
+        <CCard className="mb-4">
+          <CCardHeader>
+            <strong>React Breadcrumb</strong>
+          </CCardHeader>
+          <CCardBody>
+            <p className="text-body-secondary small">
+              The breadcrumb navigation provides links back to each previous page the user navigated
+              through and shows the current location in a website or an application. You don’t have
+              to add separators, because they automatically added in CSS through{' '}
+              <a href="https://developer.mozilla.org/en-US/docs/Web/CSS/::before">
+                {' '}
+                <code>::before</code>
+              </a>{' '}
+              and{' '}
+              <a href="https://developer.mozilla.org/en-US/docs/Web/CSS/content">
+                {' '}
+                <code>content</code>
+              </a>
+              .
+            </p>
+            <DocsExample href="components/breadcrumb">
+              <CBreadcrumb>
+                <CBreadcrumbItem>
+                  <CLink href="#">Home</CLink>
+                </CBreadcrumbItem>
+                <CBreadcrumbItem active>Library</CBreadcrumbItem>
+              </CBreadcrumb>
+              <CBreadcrumb>
+                <CBreadcrumbItem>
+                  <CLink href="#">Home</CLink>
+                </CBreadcrumbItem>
+                <CBreadcrumbItem>
+                  <CLink href="#">Library</CLink>
+                </CBreadcrumbItem>
+                <CBreadcrumbItem active>Data</CBreadcrumbItem>
+              </CBreadcrumb>
+              <CBreadcrumb>
+                <CBreadcrumbItem>
+                  <CLink href="#">Home</CLink>
+                </CBreadcrumbItem>
+                <CBreadcrumbItem>
+                  <CLink href="#">Library</CLink>
+                </CBreadcrumbItem>
+                <CBreadcrumbItem>
+                  <CLink href="#">Data</CLink>
+                </CBreadcrumbItem>
+                <CBreadcrumbItem active>Bootstrap</CBreadcrumbItem>
+              </CBreadcrumb>
+            </DocsExample>
+          </CCardBody>
+        </CCard>
+      </CCol>
+    </CRow>
+  )
+}
+
+export default Breadcrumbs
Index: PlanningMamagement/frontend/src/views/base/placeholders/Placeholders.js
===================================================================
diff --git a/PlanningMamagement/frontend/src/views/base/placeholders/Placeholders.js b/PlanningMamagement/frontend/src/views/base/placeholders/Placeholders.js
new file mode 100644
--- /dev/null	(date 1728391641915)
+++ b/PlanningMamagement/frontend/src/views/base/placeholders/Placeholders.js	(date 1728391641915)
@@ -0,0 +1,197 @@
+import React from 'react'
+import {
+  CButton,
+  CCard,
+  CCardBody,
+  CCardHeader,
+  CCardImage,
+  CCardText,
+  CCardTitle,
+  CCol,
+  CPlaceholder,
+  CRow,
+} from '@coreui/react'
+import { DocsExample } from 'src/components'
+
+import ReactImg from 'src/assets/images/react.jpg'
+
+const Placeholders = () => {
+  return (
+    <CRow>
+      <CCol xs={12}>
+        <CCard className="mb-4">
+          <CCardHeader>
+            <strong>React Placeholder</strong>
+          </CCardHeader>
+          <CCardBody>
+            <p className="text-body-secondary small">
+              In the example below, we take a typical card component and recreate it with
+              placeholders applied to create a &#34;loading card&#34;. Size and proportions are the
+              same between the two.
+            </p>
+            <DocsExample href="components/placeholder">
+              <div className="d-flex justify-content-around p-3">
+                <CCard style={{ width: '18rem' }}>
+                  <CCardImage orientation="top" src={ReactImg} />
+                  <CCardBody>
+                    <CCardTitle>Card title</CCardTitle>
+                    <CCardText>
+                      Some quick example text to build on the card title and make up the bulk of the
+                      card&#39;s content.
+                    </CCardText>
+                    <CButton color="primary" href="#">
+                      Go somewhere
+                    </CButton>
+                  </CCardBody>
+                </CCard>
+                <CCard style={{ width: '18rem' }}>
+                  <CCardImage
+                    component="svg"
+                    orientation="top"
+                    width="100%"
+                    height="162"
+                    xmlns="http://www.w3.org/2000/svg"
+                    role="img"
+                    aria-label="Placeholder"
+                    preserveAspectRatio="xMidYMid slice"
+                    focusable="false"
+                  >
+                    <title>Placeholder</title>
+                    <rect width="100%" height="100%" fill="#868e96"></rect>
+                  </CCardImage>
+                  <CCardBody>
+                    <CPlaceholder component={CCardTitle} animation="glow" xs={7}>
+                      <CPlaceholder xs={6} />
+                    </CPlaceholder>
+                    <CPlaceholder component={CCardText} animation="glow">
+                      <CPlaceholder xs={7} />
+                      <CPlaceholder xs={4} />
+                      <CPlaceholder xs={4} />
+                      <CPlaceholder xs={6} />
+                      <CPlaceholder xs={8} />
+                    </CPlaceholder>
+                    <CPlaceholder
+                      color="primary"
+                      component={CButton}
+                      disabled
+                      href="#"
+                      tabIndex={-1}
+                      xs={6}
+                    ></CPlaceholder>
+                  </CCardBody>
+                </CCard>
+              </div>
+            </DocsExample>
+          </CCardBody>
+        </CCard>
+        <CCard className="mb-4">
+          <CCardHeader>
+            <strong>React Placeholder</strong>
+          </CCardHeader>
+          <CCardBody>
+            <p className="text-body-secondary small">
+              Create placeholders with the <code>&lt;CPlaceholder&gt;</code> component and a grid
+              column propx (e.g., <code>xs={6}</code>) to set the <code>width</code>. They can
+              replace the text inside an element or be added as a modifier class to an existing
+              component.
+            </p>
+            <DocsExample href="components/placeholder">
+              <p aria-hidden="true">
+                <CPlaceholder xs={6} />
+              </p>
+              <CPlaceholder
+                color="primary"
+                component={CButton}
+                aria-hidden="true"
+                disabled
+                href="#"
+                tabIndex={-1}
+                xs={4}
+              ></CPlaceholder>
+            </DocsExample>
+          </CCardBody>
+        </CCard>
+        <CCard className="mb-4">
+          <CCardHeader>
+            <strong>React Placeholder</strong> <small> Width</small>
+          </CCardHeader>
+          <CCardBody>
+            <p className="text-body-secondary small">
+              You can change the <code>width</code> through grid column classes, width utilities, or
+              inline styles.
+            </p>
+            <DocsExample href="components/placeholder#width">
+              <CPlaceholder xs={6} />
+              <CPlaceholder className="w-75" />
+              <CPlaceholder style={{ width: '30%' }} />
+            </DocsExample>
+          </CCardBody>
+        </CCard>
+        <CCard className="mb-4">
+          <CCardHeader>
+            <strong>React Placeholder</strong> <small> Color</small>
+          </CCardHeader>
+          <CCardBody>
+            <p className="text-body-secondary small">
+              By default, the <code>&lt;CPlaceholder&gt;</code> uses <code>currentColor</code>. This
+              can be overridden with a custom color or utility class.
+            </p>
+            <DocsExample href="components/placeholder#color">
+              <CPlaceholder xs={12} />
+
+              <CPlaceholder color="primary" xs={12} />
+              <CPlaceholder color="secondary" xs={12} />
+              <CPlaceholder color="success" xs={12} />
+              <CPlaceholder color="danger" xs={12} />
+              <CPlaceholder color="warning" xs={12} />
+              <CPlaceholder color="info" xs={12} />
+              <CPlaceholder color="light" xs={12} />
+              <CPlaceholder color="dark" xs={12} />
+            </DocsExample>
+          </CCardBody>
+        </CCard>
+        <CCard className="mb-4">
+          <CCardHeader>
+            <strong>React Placeholder</strong> <small> Sizing</small>
+          </CCardHeader>
+          <CCardBody>
+            <p className="text-body-secondary small">
+              The size of <code>&lt;CPlaceholder&gt;</code>s are based on the typographic style of
+              the parent element. Customize them with <code>size</code> prop: <code>lg</code>,{' '}
+              <code>sm</code>, or <code>xs</code>.
+            </p>
+            <DocsExample href="components/placeholder#sizing">
+              <CPlaceholder xs={12} size="lg" />
+              <CPlaceholder xs={12} />
+              <CPlaceholder xs={12} size="sm" />
+              <CPlaceholder xs={12} size="xs" />
+            </DocsExample>
+          </CCardBody>
+        </CCard>
+        <CCard className="mb-4">
+          <CCardHeader>
+            <strong>React Placeholder</strong> <small> Animation</small>
+          </CCardHeader>
+          <CCardBody>
+            <p className="text-body-secondary small">
+              Animate placeholders with <code>animation=&#34;glow&#34;</code> or{' '}
+              <code>animation=&#34;wave&#34;</code> to better convey the perception of something
+              being <em>actively</em> loaded.
+            </p>
+            <DocsExample href="components/placeholder#animation">
+              <CPlaceholder component="p" animation="glow">
+                <CPlaceholder xs={12} />
+              </CPlaceholder>
+
+              <CPlaceholder component="p" animation="wave">
+                <CPlaceholder xs={12} />
+              </CPlaceholder>
+            </DocsExample>
+          </CCardBody>
+        </CCard>
+      </CCol>
+    </CRow>
+  )
+}
+
+export default Placeholders
Index: PlanningMamagement/frontend/src/views/base/paginations/Paginations.js
===================================================================
diff --git a/PlanningMamagement/frontend/src/views/base/paginations/Paginations.js b/PlanningMamagement/frontend/src/views/base/paginations/Paginations.js
new file mode 100644
--- /dev/null	(date 1728391641901)
+++ b/PlanningMamagement/frontend/src/views/base/paginations/Paginations.js	(date 1728391641901)
@@ -0,0 +1,174 @@
+import React from 'react'
+import {
+  CCard,
+  CCardBody,
+  CCardHeader,
+  CCol,
+  CPagination,
+  CPaginationItem,
+  CRow,
+} from '@coreui/react'
+import { DocsExample } from 'src/components'
+
+const Paginations = () => {
+  return (
+    <CRow>
+      <CCol xs={12}>
+        <CCard className="mb-4">
+          <CCardHeader>
+            <strong>React Pagination</strong>
+          </CCardHeader>
+          <CCardBody>
+            <p className="text-body-secondary small">
+              We use a large block of connected links for our pagination, making links hard to miss
+              and easily scalable—all while providing large hit areas. Pagination is built with list
+              HTML elements so screen readers can announce the number of available links. Use a
+              wrapping <code>&lt;nav&gt;</code> element to identify it as a navigation section to
+              screen readers and other assistive technologies.
+            </p>
+            <p className="text-body-secondary small">
+              In addition, as pages likely have more than one such navigation section, it&#39;s
+              advisable to provide a descriptive <code>aria-label</code> for the{' '}
+              <code>&lt;nav&gt;</code> to reflect its purpose. For example, if the pagination
+              component is used to navigate between a set of search results, an appropriate label
+              could be <code>aria-label=&#34;Search results pages&#34;</code>.
+            </p>
+            <DocsExample href="components/pagination">
+              <CPagination aria-label="Page navigation example">
+                <CPaginationItem>Previous</CPaginationItem>
+                <CPaginationItem>1</CPaginationItem>
+                <CPaginationItem>2</CPaginationItem>
+                <CPaginationItem>3</CPaginationItem>
+                <CPaginationItem>Next</CPaginationItem>
+              </CPagination>
+            </DocsExample>
+          </CCardBody>
+        </CCard>
+      </CCol>
+      <CCol xs={12}>
+        <CCard className="mb-4">
+          <CCardHeader>
+            <strong>React Pagination</strong> <small>Working with icons</small>
+          </CCardHeader>
+          <CCardBody>
+            <p className="text-body-secondary small">
+              Looking to use an icon or symbol in place of text for some pagination links? Be sure
+              to provide proper screen reader support with <code>aria</code> attributes.
+            </p>
+            <DocsExample href="components/pagination#working-with-icons">
+              <CPagination aria-label="Page navigation example">
+                <CPaginationItem aria-label="Previous">
+                  <span aria-hidden="true">&laquo;</span>
+                </CPaginationItem>
+                <CPaginationItem>1</CPaginationItem>
+                <CPaginationItem>2</CPaginationItem>
+                <CPaginationItem>3</CPaginationItem>
+                <CPaginationItem aria-label="Next">
+                  <span aria-hidden="true">&raquo;</span>
+                </CPaginationItem>
+              </CPagination>
+            </DocsExample>
+          </CCardBody>
+        </CCard>
+      </CCol>
+      <CCol xs={12}>
+        <CCard className="mb-4">
+          <CCardHeader>
+            <strong>React Pagination</strong> <small>Disabled and active states</small>
+          </CCardHeader>
+          <CCardBody>
+            <p className="text-body-secondary small">
+              Pagination links are customizable for different circumstances. Use{' '}
+              <code>disabled</code> for links that appear un-clickable and <code>.active</code> to
+              indicate the current page.
+            </p>
+            <p className="text-body-secondary small">
+              While the <code>disabled</code> prop uses <code>pointer-events: none</code> to{' '}
+              <em>try</em> to disable the link functionality of <code>&lt;a&gt;</code>s, that CSS
+              property is not yet standardized and doesn&#39;taccount for keyboard navigation. As
+              such, we always add <code>tabindex=&#34;-1&#34;</code> on disabled links and use
+              custom JavaScript to fully disable their functionality.
+            </p>
+            <DocsExample href="components/pagination#disabled-and-active-states">
+              <CPagination aria-label="Page navigation example">
+                <CPaginationItem aria-label="Previous" disabled>
+                  <span aria-hidden="true">&laquo;</span>
+                </CPaginationItem>
+                <CPaginationItem active>1</CPaginationItem>
+                <CPaginationItem>2</CPaginationItem>
+                <CPaginationItem>3</CPaginationItem>
+                <CPaginationItem aria-label="Next">
+                  <span aria-hidden="true">&raquo;</span>
+                </CPaginationItem>
+              </CPagination>
+            </DocsExample>
+          </CCardBody>
+        </CCard>
+      </CCol>
+      <CCol xs={12}>
+        <CCard className="mb-4">
+          <CCardHeader>
+            <strong>React Pagination</strong> <small>Sizing</small>
+          </CCardHeader>
+          <CCardBody>
+            <p className="text-body-secondary small">
+              Fancy larger or smaller pagination? Add <code>size=&#34;lg&#34;</code> or{' '}
+              <code>size=&#34;sm&#34;</code> for additional sizes.
+            </p>
+            <DocsExample href="components/pagination#sizing">
+              <CPagination size="lg" aria-label="Page navigation example">
+                <CPaginationItem>Previous</CPaginationItem>
+                <CPaginationItem>1</CPaginationItem>
+                <CPaginationItem>2</CPaginationItem>
+                <CPaginationItem>3</CPaginationItem>
+                <CPaginationItem>Next</CPaginationItem>
+              </CPagination>
+            </DocsExample>
+            <DocsExample href="components/pagination#sizing">
+              <CPagination size="sm" aria-label="Page navigation example">
+                <CPaginationItem>Previous</CPaginationItem>
+                <CPaginationItem>1</CPaginationItem>
+                <CPaginationItem>2</CPaginationItem>
+                <CPaginationItem>3</CPaginationItem>
+                <CPaginationItem>Next</CPaginationItem>
+              </CPagination>
+            </DocsExample>
+          </CCardBody>
+        </CCard>
+      </CCol>
+      <CCol xs={12}>
+        <CCard className="mb-4">
+          <CCardHeader>
+            <strong>React Pagination</strong> <small>Alignment</small>
+          </CCardHeader>
+          <CCardBody>
+            <p className="text-body-secondary small">
+              Change the alignment of pagination components with{' '}
+              <a href="https://coreui.io/docs/utilities/flex/">flexbox utilities</a>.
+            </p>
+            <DocsExample href="components/pagination#aligment">
+              <CPagination className="justify-content-center" aria-label="Page navigation example">
+                <CPaginationItem disabled>Previous</CPaginationItem>
+                <CPaginationItem>1</CPaginationItem>
+                <CPaginationItem>2</CPaginationItem>
+                <CPaginationItem>3</CPaginationItem>
+                <CPaginationItem>Next</CPaginationItem>
+              </CPagination>
+            </DocsExample>
+            <DocsExample href="components/pagination#aligment">
+              <CPagination className="justify-content-end" aria-label="Page navigation example">
+                <CPaginationItem disabled>Previous</CPaginationItem>
+                <CPaginationItem>1</CPaginationItem>
+                <CPaginationItem>2</CPaginationItem>
+                <CPaginationItem>3</CPaginationItem>
+                <CPaginationItem>Next</CPaginationItem>
+              </CPagination>
+            </DocsExample>
+          </CCardBody>
+        </CCard>
+      </CCol>
+    </CRow>
+  )
+}
+
+export default Paginations
Index: PlanningMamagement/frontend/src/views/forms/layout/Layout.js
===================================================================
diff --git a/PlanningMamagement/frontend/src/views/forms/layout/Layout.js b/PlanningMamagement/frontend/src/views/forms/layout/Layout.js
new file mode 100644
--- /dev/null	(date 1728391642198)
+++ b/PlanningMamagement/frontend/src/views/forms/layout/Layout.js	(date 1728391642198)
@@ -0,0 +1,424 @@
+import React from 'react'
+import {
+  CButton,
+  CCard,
+  CCardBody,
+  CCardHeader,
+  CCol,
+  CForm,
+  CFormCheck,
+  CFormInput,
+  CFormLabel,
+  CFormSelect,
+  CInputGroup,
+  CInputGroupText,
+  CRow,
+} from '@coreui/react'
+import { DocsExample } from 'src/components'
+
+const Layout = () => {
+  return (
+    <CRow>
+      <CCol xs={12}>
+        <CCard className="mb-4">
+          <CCardHeader>
+            <strong>Layout</strong> <small>Form grid</small>
+          </CCardHeader>
+          <CCardBody>
+            <p className="text-body-secondary small">
+              More complex forms can be built using our grid classes. Use these for form layouts
+              that require multiple columns, varied widths, and additional alignment options.
+            </p>
+            <DocsExample href="forms/layout#form-grid">
+              <CRow>
+                <CCol xs>
+                  <CFormInput placeholder="First name" aria-label="First name" />
+                </CCol>
+                <CCol xs>
+                  <CFormInput placeholder="Last name" aria-label="Last name" />
+                </CCol>
+              </CRow>
+            </DocsExample>
+          </CCardBody>
+        </CCard>
+      </CCol>
+      <CCol xs={12}>
+        <CCard className="mb-4">
+          <CCardHeader>
+            <strong>Layout</strong> <small>Gutters</small>
+          </CCardHeader>
+          <CCardBody>
+            <p className="text-body-secondary small">
+              By adding <a href="https://coreui.io/docs/layout/gutters/">gutter modifier classes</a>
+              , you can have control over the gutter width in as well the inline as block direction.
+            </p>
+            <DocsExample href="forms/layout#gutters">
+              <CRow className="g-3">
+                <CCol xs>
+                  <CFormInput placeholder="First name" aria-label="First name" />
+                </CCol>
+                <CCol xs>
+                  <CFormInput placeholder="Last name" aria-label="Last name" />
+                </CCol>
+              </CRow>
+            </DocsExample>
+            <p className="text-body-secondary small">
+              More complex layouts can also be created with the grid system.
+            </p>
+            <DocsExample href="forms/layout#gutters">
+              <CForm className="row g-3">
+                <CCol md={6}>
+                  <CFormLabel htmlFor="inputEmail4">Email</CFormLabel>
+                  <CFormInput type="email" id="inputEmail4" />
+                </CCol>
+                <CCol md={6}>
+                  <CFormLabel htmlFor="inputPassword4">Password</CFormLabel>
+                  <CFormInput type="password" id="inputPassword4" />
+                </CCol>
+                <CCol xs={12}>
+                  <CFormLabel htmlFor="inputAddress">Address</CFormLabel>
+                  <CFormInput id="inputAddress" placeholder="1234 Main St" />
+                </CCol>
+                <CCol xs={12}>
+                  <CFormLabel htmlFor="inputAddress2">Address 2</CFormLabel>
+                  <CFormInput id="inputAddress2" placeholder="Apartment, studio, or floor" />
+                </CCol>
+                <CCol md={6}>
+                  <CFormLabel htmlFor="inputCity">City</CFormLabel>
+                  <CFormInput id="inputCity" />
+                </CCol>
+                <CCol md={4}>
+                  <CFormLabel htmlFor="inputState">State</CFormLabel>
+                  <CFormSelect id="inputState">
+                    <option>Choose...</option>
+                    <option>...</option>
+                  </CFormSelect>
+                </CCol>
+                <CCol md={2}>
+                  <CFormLabel htmlFor="inputZip">Zip</CFormLabel>
+                  <CFormInput id="inputZip" />
+                </CCol>
+                <CCol xs={12}>
+                  <CFormCheck type="checkbox" id="gridCheck" label="Check me out" />
+                </CCol>
+                <CCol xs={12}>
+                  <CButton color="primary" type="submit">
+                    Sign in
+                  </CButton>
+                </CCol>
+              </CForm>
+            </DocsExample>
+          </CCardBody>
+        </CCard>
+      </CCol>
+      <CCol xs={12}>
+        <CCard className="mb-4">
+          <CCardHeader>
+            <strong>Layout</strong> <small>Horizontal form</small>
+          </CCardHeader>
+          <CCardBody>
+            <p className="text-body-secondary small">
+              Create horizontal forms with the grid by adding the <code>.row</code> class to form
+              groups and using the <code>.col-*-*</code> classes to specify the width of your labels
+              and controls. Be sure to add <code>.col-form-label</code> to your{' '}
+              <code>&lt;CFormLabel&gt;</code>s as well so they&#39;re vertically centered with their
+              associated form controls.
+            </p>
+            <p className="text-body-secondary small">
+              At times, you maybe need to use margin or padding utilities to create that perfect
+              alignment you need. For example, we&#39;ve removed the <code>padding-top</code> on our
+              stacked radio inputs label to better align the text baseline.
+            </p>
+            <DocsExample href="forms/layout#horizontal-form">
+              <CForm>
+                <CRow className="mb-3">
+                  <CFormLabel htmlFor="inputEmail3" className="col-sm-2 col-form-label">
+                    Email
+                  </CFormLabel>
+                  <CCol sm={10}>
+                    <CFormInput type="email" id="inputEmail3" />
+                  </CCol>
+                </CRow>
+                <CRow className="mb-3">
+                  <CFormLabel htmlFor="inputPassword3" className="col-sm-2 col-form-label">
+                    Password
+                  </CFormLabel>
+                  <CCol sm={10}>
+                    <CFormInput type="password" id="inputPassword3" />
+                  </CCol>
+                </CRow>
+                <fieldset className="row mb-3">
+                  <legend className="col-form-label col-sm-2 pt-0">Radios</legend>
+                  <CCol sm={10}>
+                    <CFormCheck
+                      type="radio"
+                      name="gridRadios"
+                      id="gridRadios1"
+                      value="option1"
+                      label="First radio"
+                      defaultChecked
+                    />
+                    <CFormCheck
+                      type="radio"
+                      name="gridRadios"
+                      id="gridRadios2"
+                      value="option2"
+                      label="Second radio"
+                    />
+                    <CFormCheck
+                      type="radio"
+                      name="gridRadios"
+                      id="gridRadios3"
+                      value="option3"
+                      label="Third disabled radio"
+                      disabled
+                    />
+                  </CCol>
+                </fieldset>
+                <CRow className="mb-3">
+                  <div className="col-sm-10 offset-sm-2">
+                    <CFormCheck type="checkbox" id="gridCheck1" label="Example checkbox" />
+                  </div>
+                </CRow>
+                <CButton color="primary" type="submit">
+                  Sign in
+                </CButton>
+              </CForm>
+            </DocsExample>
+          </CCardBody>
+        </CCard>
+      </CCol>
+      <CCol xs={12}>
+        <CCard className="mb-4">
+          <CCardHeader>
+            <strong>Layout</strong> <small>Horizontal form label sizing</small>
+          </CCardHeader>
+          <CCardBody>
+            <p className="text-body-secondary small">
+              Be sure to use <code>.col-form-label-sm</code> or <code>.col-form-label-lg</code> to
+              your <code>&lt;CFormLabel&gt;</code>s or <code>&lt;legend&gt;</code>s to correctly
+              follow the size of <code>.form-control-lg</code> and <code>.form-control-sm</code>.
+            </p>
+            <DocsExample href="forms/layout#horizontal-form-label-sizing">
+              <CRow className="mb-3">
+                <CFormLabel
+                  htmlFor="colFormLabelSm"
+                  className="col-sm-2 col-form-label col-form-label-sm"
+                >
+                  Email
+                </CFormLabel>
+                <CCol sm={10}>
+                  <CFormInput
+                    type="email"
+                    className="form-control form-control-sm"
+                    id="colFormLabelSm"
+                    placeholder="col-form-label-sm"
+                  />
+                </CCol>
+              </CRow>
+              <CRow className="mb-3">
+                <CFormLabel htmlFor="colFormLabel" className="col-sm-2 col-form-label">
+                  Email
+                </CFormLabel>
+                <CCol sm={10}>
+                  <CFormInput type="email" id="colFormLabel" placeholder="col-form-label" />
+                </CCol>
+              </CRow>
+              <CRow>
+                <CFormLabel
+                  htmlFor="colFormLabelLg"
+                  className="col-sm-2 col-form-label col-form-label-lg"
+                >
+                  Email
+                </CFormLabel>
+                <CCol sm={10}>
+                  <CFormInput
+                    type="email"
+                    className="form-control form-control-lg"
+                    id="colFormLabelLg"
+                    placeholder="col-form-label-lg"
+                  />
+                </CCol>
+              </CRow>
+            </DocsExample>
+          </CCardBody>
+        </CCard>
+      </CCol>
+      <CCol xs={12}>
+        <CCard className="mb-4">
+          <CCardHeader>
+            <strong>Layout</strong> <small>Column sizing</small>
+          </CCardHeader>
+          <CCardBody>
+            <p className="text-body-secondary small">
+              As shown in the previous examples, our grid system allows you to place any number of{' '}
+              <code>&lt;CCol&gt;</code>s within a <code>&lt;CRow&gt;</code>. They&#39;ll split the
+              available width equally between them. You may also pick a subset of your columns to
+              take up more or less space, while the remaining <code>&lt;CCol&gt;</code>s equally
+              split the rest, with specific column classes like{' '}
+              <code>&lt;CCol sm=&#34;7&#34;&gt;</code>.
+            </p>
+            <DocsExample href="forms/layout#column-sizing">
+              <CRow className="g-3">
+                <CCol sm={7}>
+                  <CFormInput placeholder="City" aria-label="City" />
+                </CCol>
+                <CCol sm>
+                  <CFormInput placeholder="State" aria-label="State" />
+                </CCol>
+                <CCol sm>
+                  <CFormInput placeholder="Zip" aria-label="Zip" />
+                </CCol>
+              </CRow>
+            </DocsExample>
+          </CCardBody>
+        </CCard>
+      </CCol>
+      <CCol xs={12}>
+        <CCard className="mb-4">
+          <CCardHeader>
+            <strong>Layout</strong> <small>Auto-sizing</small>
+          </CCardHeader>
+          <CCardBody>
+            <p className="text-body-secondary small">
+              The example below uses a flexbox utility to vertically center the contents and changes{' '}
+              <code>&lt;CCol&gt;</code> to <code>&lt;CCol xs=&#34;auto&#34;&gt;</code> so that your
+              columns only take up as much space as needed. Put another way, the column sizes itself
+              based on the contents.
+            </p>
+            <DocsExample href="forms/layout#auto-sizing">
+              <CForm className="row gy-2 gx-3 align-items-center">
+                <CCol xs="auto">
+                  <CFormLabel className="visually-hidden" htmlFor="autoSizingInput">
+                    Name
+                  </CFormLabel>
+                  <CFormInput id="autoSizingInput" placeholder="Jane Doe" />
+                </CCol>
+                <CCol xs="auto">
+                  <CFormLabel className="visually-hidden" htmlFor="autoSizingInputGroup">
+                    Username
+                  </CFormLabel>
+                  <CInputGroup>
+                    <CInputGroupText>@</CInputGroupText>
+                    <CFormInput id="autoSizingInputGroup" placeholder="Username" />
+                  </CInputGroup>
+                </CCol>
+                <CCol xs="auto">
+                  <CFormLabel className="visually-hidden" htmlFor="autoSizingSelect">
+                    Preference
+                  </CFormLabel>
+                  <CFormSelect id="autoSizingSelect">
+                    <option>Choose...</option>
+                    <option value="1">One</option>
+                    <option value="2">Two</option>
+                    <option value="3">Three</option>
+                  </CFormSelect>
+                </CCol>
+                <CCol xs="auto">
+                  <CFormCheck type="checkbox" id="autoSizingCheck" label="Remember me" />
+                </CCol>
+                <CCol xs="auto">
+                  <CButton color="primary" type="submit">
+                    Submit
+                  </CButton>
+                </CCol>
+              </CForm>
+            </DocsExample>
+            <p className="text-body-secondary small">
+              You can then remix that once again with size-specific column classes.
+            </p>
+            <DocsExample href="forms/layout#auto-sizing">
+              <CForm className="row gx-3 gy-2 align-items-center">
+                <CCol sm={3}>
+                  <CFormLabel className="visually-hidden" htmlFor="specificSizeInputName">
+                    Name
+                  </CFormLabel>
+                  <CFormInput id="specificSizeInputName" placeholder="Jane Doe" />
+                </CCol>
+                <CCol sm={3}>
+                  <CFormLabel className="visually-hidden" htmlFor="specificSizeInputGroupUsername">
+                    Username
+                  </CFormLabel>
+                  <CInputGroup>
+                    <CInputGroupText>@</CInputGroupText>
+                    <CFormInput id="specificSizeInputGroupUsername" placeholder="Username" />
+                  </CInputGroup>
+                </CCol>
+                <CCol sm={3}>
+                  <CFormLabel className="visually-hidden" htmlFor="specificSizeSelect">
+                    Preference
+                  </CFormLabel>
+                  <CFormSelect id="specificSizeSelect">
+                    <option>Choose...</option>
+                    <option value="1">One</option>
+                    <option value="2">Two</option>
+                    <option value="3">Three</option>
+                  </CFormSelect>
+                </CCol>
+                <CCol xs="auto">
+                  <CFormCheck type="checkbox" id="autoSizingCheck2" label="Remember me" />
+                </CCol>
+                <CCol xs="auto">
+                  <CButton color="primary" type="submit">
+                    Submit
+                  </CButton>
+                </CCol>
+              </CForm>
+            </DocsExample>
+          </CCardBody>
+        </CCard>
+      </CCol>
+      <CCol xs={12}>
+        <CCard className="mb-4">
+          <CCardHeader>
+            <strong>Layout</strong> <small>Inline forms</small>
+          </CCardHeader>
+          <CCardBody>
+            <p className="text-body-secondary small">
+              Use the <code>&lt;CCol xs=&#34;auto&#34;&gt;</code> class to create horizontal
+              layouts. By adding{' '}
+              <a href="https://coreui.io/docs/layout/gutters/">gutter modifier classes</a>, we will
+              have gutters in horizontal and vertical directions. The{' '}
+              <code>.align-items-center</code> aligns the form elements to the middle, making the{' '}
+              <code>&lt;CFormCheck&gt;</code> align properly.
+            </p>
+            <DocsExample href="forms/layout#inline-forms">
+              <CForm className="row row-cols-lg-auto g-3 align-items-center">
+                <CCol xs={12}>
+                  <CFormLabel className="visually-hidden" htmlFor="inlineFormInputGroupUsername">
+                    Username
+                  </CFormLabel>
+                  <CInputGroup>
+                    <CInputGroupText>@</CInputGroupText>
+                    <CFormInput id="inlineFormInputGroupUsername" placeholder="Username" />
+                  </CInputGroup>
+                </CCol>
+                <CCol xs={12}>
+                  <CFormLabel className="visually-hidden" htmlFor="inlineFormSelectPref">
+                    Preference
+                  </CFormLabel>
+                  <CFormSelect id="inlineFormSelectPref">
+                    <option>Choose...</option>
+                    <option value="1">One</option>
+                    <option value="2">Two</option>
+                    <option value="3">Three</option>
+                  </CFormSelect>
+                </CCol>
+                <CCol xs={12}>
+                  <CFormCheck type="checkbox" id="inlineFormCheck" label="Remember me" />
+                </CCol>
+                <CCol xs={12}>
+                  <CButton color="primary" type="submit">
+                    Submit
+                  </CButton>
+                </CCol>
+              </CForm>
+            </DocsExample>
+          </CCardBody>
+        </CCard>
+      </CCol>
+    </CRow>
+  )
+}
+
+export default Layout
Index: PlanningMamagement/frontend/src/views/forms/range/Range.js
===================================================================
diff --git a/PlanningMamagement/frontend/src/views/forms/range/Range.js b/PlanningMamagement/frontend/src/views/forms/range/Range.js
new file mode 100644
--- /dev/null	(date 1728391642213)
+++ b/PlanningMamagement/frontend/src/views/forms/range/Range.js	(date 1728391642213)
@@ -0,0 +1,82 @@
+import React from 'react'
+import { CCard, CCardBody, CCardHeader, CCol, CFormLabel, CFormRange, CRow } from '@coreui/react'
+import { DocsExample } from 'src/components'
+
+const Range = () => {
+  return (
+    <CRow>
+      <CCol xs={12}>
+        <CCard className="mb-4">
+          <CCardHeader>
+            <strong>React Range</strong> <small></small>
+          </CCardHeader>
+          <CCardBody>
+            <p className="text-body-secondary small">
+              Create custom <code>&lt;input type=&#34;range&#34;&gt;</code> controls with{' '}
+              <code>&lt;CFormRange&gt;</code>.
+            </p>
+            <DocsExample href="forms/range" tabContentClassName="bg-opacity-10">
+              <CFormLabel htmlFor="customRange1">Example range</CFormLabel>
+              <CFormRange id="customRange1" />
+            </DocsExample>
+          </CCardBody>
+        </CCard>
+      </CCol>
+      <CCol xs={12}>
+        <CCard className="mb-4">
+          <CCardHeader>
+            <strong>React Range</strong> <small>Disabled</small>
+          </CCardHeader>
+          <CCardBody>
+            <p className="text-body-secondary small">
+              Add the <code>disabled</code> boolean attribute on an input to give it a grayed out
+              appearance and remove pointer events.
+            </p>
+            <DocsExample href="forms/range#disabled" tabContentClassName="bg-opacity-10">
+              <CFormLabel htmlFor="disabledRange">Disabled range</CFormLabel>
+              <CFormRange id="disabledRange" disabled />
+            </DocsExample>
+          </CCardBody>
+        </CCard>
+      </CCol>
+      <CCol xs={12}>
+        <CCard className="mb-4">
+          <CCardHeader>
+            <strong>React Range</strong> <small>Min and max</small>
+          </CCardHeader>
+          <CCardBody>
+            <p className="text-body-secondary small">
+              Range inputs have implicit values for <code>min</code> and <code>max</code>—
+              <code>0</code> and <code>100</code>, respectively. You may specify new values for
+              those using the <code>min</code> and <code>max</code> attributes.
+            </p>
+            <DocsExample href="forms/range#min-and-max" tabContentClassName="bg-opacity-10">
+              <CFormLabel htmlFor="customRange2">Example range</CFormLabel>
+              <CFormRange min={0} max={5} defaultValue="3" id="customRange2" />
+            </DocsExample>
+          </CCardBody>
+        </CCard>
+      </CCol>
+      <CCol xs={12}>
+        <CCard className="mb-4">
+          <CCardHeader>
+            <strong>React Range</strong> <small>Steps</small>
+          </CCardHeader>
+          <CCardBody>
+            <p className="text-body-secondary small">
+              By default, range inputs &#34;snap&#34; to integer values. To change this, you can
+              specify a <code>step</code> value. In the example below, we double the number of steps
+              by using <code>step=&#34;0.5&#34;</code>.
+            </p>
+            <DocsExample href="forms/range#steps" tabContentClassName="bg-opacity-10">
+              <CFormLabel htmlFor="customRange3">Example range</CFormLabel>
+              <CFormRange min={0} max={5} step={0.5} defaultValue="3" id="customRange3" />
+            </DocsExample>
+          </CCardBody>
+        </CCard>
+      </CCol>
+    </CRow>
+  )
+}
+
+export default Range
Index: PlanningMamagement/frontend/src/views/forms/validation/Validation.js
===================================================================
diff --git a/PlanningMamagement/frontend/src/views/forms/validation/Validation.js b/PlanningMamagement/frontend/src/views/forms/validation/Validation.js
new file mode 100644
--- /dev/null	(date 1728391642244)
+++ b/PlanningMamagement/frontend/src/views/forms/validation/Validation.js	(date 1728391642244)
@@ -0,0 +1,503 @@
+import React, { useState } from 'react'
+import {
+  CButton,
+  CCard,
+  CCardBody,
+  CCardHeader,
+  CCol,
+  CForm,
+  CFormCheck,
+  CFormInput,
+  CFormFeedback,
+  CFormLabel,
+  CFormSelect,
+  CFormTextarea,
+  CInputGroup,
+  CInputGroupText,
+  CRow,
+} from '@coreui/react'
+import { DocsExample } from 'src/components'
+
+const CustomStyles = () => {
+  const [validated, setValidated] = useState(false)
+  const handleSubmit = (event) => {
+    const form = event.currentTarget
+    if (form.checkValidity() === false) {
+      event.preventDefault()
+      event.stopPropagation()
+    }
+    setValidated(true)
+  }
+  return (
+    <CForm
+      className="row g-3 needs-validation"
+      noValidate
+      validated={validated}
+      onSubmit={handleSubmit}
+    >
+      <CCol md={4}>
+        <CFormLabel htmlFor="validationCustom01">Email</CFormLabel>
+        <CFormInput type="text" id="validationCustom01" defaultValue="Mark" required />
+        <CFormFeedback valid>Looks good!</CFormFeedback>
+      </CCol>
+      <CCol md={4}>
+        <CFormLabel htmlFor="validationCustom02">Email</CFormLabel>
+        <CFormInput type="text" id="validationCustom02" defaultValue="Otto" required />
+        <CFormFeedback valid>Looks good!</CFormFeedback>
+      </CCol>
+      <CCol md={4}>
+        <CFormLabel htmlFor="validationCustomUsername">Username</CFormLabel>
+        <CInputGroup className="has-validation">
+          <CInputGroupText id="inputGroupPrepend">@</CInputGroupText>
+          <CFormInput
+            type="text"
+            id="validationCustomUsername"
+            defaultValue=""
+            aria-describedby="inputGroupPrepend"
+            required
+          />
+          <CFormFeedback invalid>Please choose a username.</CFormFeedback>
+        </CInputGroup>
+      </CCol>
+      <CCol md={6}>
+        <CFormLabel htmlFor="validationCustom03">City</CFormLabel>
+        <CFormInput type="text" id="validationCustom03" required />
+        <CFormFeedback invalid>Please provide a valid city.</CFormFeedback>
+      </CCol>
+      <CCol md={3}>
+        <CFormLabel htmlFor="validationCustom04">City</CFormLabel>
+        <CFormSelect id="validationCustom04">
+          <option disabled>Choose...</option>
+          <option>...</option>
+        </CFormSelect>
+        <CFormFeedback invalid>Please provide a valid city.</CFormFeedback>
+      </CCol>
+      <CCol md={3}>
+        <CFormLabel htmlFor="validationCustom05">City</CFormLabel>
+        <CFormInput type="text" id="validationCustom05" required />
+        <CFormFeedback invalid>Please provide a valid zip.</CFormFeedback>
+      </CCol>
+      <CCol xs={12}>
+        <CFormCheck
+          type="checkbox"
+          id="invalidCheck"
+          label="Agree to terms and conditions"
+          required
+        />
+        <CFormFeedback invalid>You must agree before submitting.</CFormFeedback>
+      </CCol>
+      <CCol xs={12}>
+        <CButton color="primary" type="submit">
+          Submit form
+        </CButton>
+      </CCol>
+    </CForm>
+  )
+}
+
+const BrowserDefaults = () => {
+  const [validated, setValidated] = useState(false)
+  const handleSubmit = (event) => {
+    const form = event.currentTarget
+    if (form.checkValidity() === false) {
+      event.preventDefault()
+      event.stopPropagation()
+    }
+    setValidated(true)
+  }
+  return (
+    <CForm className="row g-3 needs-validation" validated={validated} onSubmit={handleSubmit}>
+      <CCol md={4}>
+        <CFormLabel htmlFor="validationDefault01">Email</CFormLabel>
+        <CFormInput type="text" id="validationDefault01" defaultValue="Mark" required />
+        <CFormFeedback valid>Looks good!</CFormFeedback>
+      </CCol>
+      <CCol md={4}>
+        <CFormLabel htmlFor="validationDefault02">Email</CFormLabel>
+        <CFormInput type="text" id="validationDefault02" defaultValue="Otto" required />
+        <CFormFeedback valid>Looks good!</CFormFeedback>
+      </CCol>
+      <CCol md={4}>
+        <CFormLabel htmlFor="validationDefaultUsername">Username</CFormLabel>
+        <CInputGroup className="has-validation">
+          <CInputGroupText id="inputGroupPrepend02">@</CInputGroupText>
+          <CFormInput
+            type="text"
+            id="validationDefaultUsername"
+            defaultValue=""
+            aria-describedby="inputGroupPrepend02"
+            required
+          />
+          <CFormFeedback invalid>Please choose a username.</CFormFeedback>
+        </CInputGroup>
+      </CCol>
+      <CCol md={6}>
+        <CFormLabel htmlFor="validationDefault03">City</CFormLabel>
+        <CFormInput type="text" id="validationDefault03" required />
+        <CFormFeedback invalid>Please provide a valid city.</CFormFeedback>
+      </CCol>
+      <CCol md={3}>
+        <CFormLabel htmlFor="validationDefault04">City</CFormLabel>
+        <CFormSelect id="validationDefault04">
+          <option disabled>Choose...</option>
+          <option>...</option>
+        </CFormSelect>
+        <CFormFeedback invalid>Please provide a valid city.</CFormFeedback>
+      </CCol>
+      <CCol md={3}>
+        <CFormLabel htmlFor="validationDefault05">City</CFormLabel>
+        <CFormInput type="text" id="validationDefault05" required />
+        <CFormFeedback invalid>Please provide a valid zip.</CFormFeedback>
+      </CCol>
+      <CCol xs={12}>
+        <CFormCheck
+          type="checkbox"
+          id="invalidCheck"
+          label="Agree to terms and conditions"
+          required
+        />
+        <CFormFeedback invalid>You must agree before submitting.</CFormFeedback>
+      </CCol>
+      <CCol xs={12}>
+        <CButton color="primary" type="submit">
+          Submit form
+        </CButton>
+      </CCol>
+    </CForm>
+  )
+}
+
+const Tooltips = () => {
+  const [validated, setValidated] = useState(false)
+  const handleSubmit = (event) => {
+    const form = event.currentTarget
+    if (form.checkValidity() === false) {
+      event.preventDefault()
+      event.stopPropagation()
+    }
+    setValidated(true)
+  }
+  return (
+    <CForm
+      className="row g-3 needs-validation"
+      noValidate
+      validated={validated}
+      onSubmit={handleSubmit}
+    >
+      <CCol md={4} className="position-relative">
+        <CFormLabel htmlFor="validationTooltip01">Email</CFormLabel>
+        <CFormInput type="text" id="validationTooltip01" defaultValue="Mark" required />
+        <CFormFeedback tooltip valid>
+          Looks good!
+        </CFormFeedback>
+      </CCol>
+      <CCol md={4} className="position-relative">
+        <CFormLabel htmlFor="validationTooltip02">Email</CFormLabel>
+        <CFormInput type="text" id="validationTooltip02" defaultValue="Otto" required />
+        <CFormFeedback tooltip valid>
+          Looks good!
+        </CFormFeedback>
+      </CCol>
+      <CCol md={4} className="position-relative">
+        <CFormLabel htmlFor="validationTooltipUsername">Username</CFormLabel>
+        <CInputGroup className="has-validation">
+          <CInputGroupText id="inputGroupPrepend">@</CInputGroupText>
+          <CFormInput
+            type="text"
+            id="validationTooltipUsername"
+            defaultValue=""
+            aria-describedby="inputGroupPrepend"
+            required
+          />
+          <CFormFeedback tooltip invalid>
+            Please choose a username.
+          </CFormFeedback>
+        </CInputGroup>
+      </CCol>
+      <CCol md={6} className="position-relative">
+        <CFormLabel htmlFor="validationTooltip03">City</CFormLabel>
+        <CFormInput type="text" id="validationTooltip03" required />
+        <CFormFeedback tooltip invalid>
+          Please provide a valid city.
+        </CFormFeedback>
+      </CCol>
+      <CCol md={3} className="position-relative">
+        <CFormLabel htmlFor="validationTooltip04">City</CFormLabel>
+        <CFormSelect id="validationTooltip04" required>
+          <option disabled defaultValue="">
+            Choose...
+          </option>
+          <option>...</option>
+        </CFormSelect>
+        <CFormFeedback tooltip invalid>
+          Please provide a valid city.
+        </CFormFeedback>
+      </CCol>
+      <CCol md={3} className="position-relative">
+        <CFormLabel htmlFor="validationTooltip05">City</CFormLabel>
+        <CFormInput type="text" id="validationTooltip05" required />
+        <CFormFeedback tooltip invalid>
+          Please provide a valid zip.
+        </CFormFeedback>
+      </CCol>
+      <CCol xs={12} className="position-relative">
+        <CButton color="primary" type="submit">
+          Submit form
+        </CButton>
+      </CCol>
+    </CForm>
+  )
+}
+
+const Validation = () => {
+  return (
+    <CRow>
+      <CCol xs={12}>
+        <CCard className="mb-4">
+          <CCardHeader>
+            <strong>Validation</strong> <small>Custom styles</small>
+          </CCardHeader>
+          <CCardBody>
+            <p className="text-body-secondary small">
+              For custom CoreUI form validation messages, you&#39;ll need to add the{' '}
+              <code>noValidate</code> boolean property to your <code>&lt;CForm&gt;</code>. This
+              disables the browser default feedback tooltips, but still provides access to the form
+              validation APIs in JavaScript. Try to submit the form below; our JavaScript will
+              intercept the submit button and relay feedback to you. When attempting to submit,
+              you&#39;ll see the <code>:invalid</code> and <code>:valid</code> styles applied to
+              your form controls.
+            </p>
+            <p className="text-body-secondary small">
+              Custom feedback styles apply custom colors, borders, focus styles, and background
+              icons to better communicate feedback.{' '}
+            </p>
+            <DocsExample href="forms/validation">{CustomStyles()}</DocsExample>
+          </CCardBody>
+        </CCard>
+      </CCol>
+      <CCol xs={12}>
+        <CCard className="mb-4">
+          <CCardHeader>
+            <strong>Validation</strong> <small>Browser defaults</small>
+          </CCardHeader>
+          <CCardBody>
+            <p className="text-body-secondary small">
+              Not interested in custom validation feedback messages or writing JavaScript to change
+              form behaviors? All good, you can use the browser defaults. Try submitting the form
+              below. Depending on your browser and OS, you&#39;ll see a slightly different style of
+              feedback.
+            </p>
+            <p className="text-body-secondary small">
+              While these feedback styles cannot be styled with CSS, you can still customize the
+              feedback text through JavaScript.
+            </p>
+            <DocsExample href="forms/validation#browser-defaults">{BrowserDefaults()}</DocsExample>
+          </CCardBody>
+        </CCard>
+      </CCol>
+      <CCol xs={12}>
+        <CCard className="mb-4">
+          <CCardHeader>
+            <strong>Validation</strong> <small>Server side</small>
+          </CCardHeader>
+          <CCardBody>
+            <p className="text-body-secondary small">
+              We recommend using client-side validation, but in case you require server-side
+              validation, you can indicate invalid and valid form fields with <code>invalid</code>{' '}
+              and <code>valid</code> boolean properties.
+            </p>
+            <p className="text-body-secondary small">
+              For invalid fields, ensure that the invalid feedback/error message is associated with
+              the relevant form field using <code>aria-describedby</code> (noting that this
+              attribute allows more than one <code>id</code> to be referenced, in case the field
+              already points to additional form text).
+            </p>
+            <DocsExample href="forms/validation#server-side">
+              <CForm className="row g-3 needs-validation">
+                <CCol md={4}>
+                  <CFormLabel htmlFor="validationServer01">Email</CFormLabel>
+                  <CFormInput
+                    type="text"
+                    id="validationServer01"
+                    defaultValue="Mark"
+                    valid
+                    required
+                  />
+                  <CFormFeedback valid>Looks good!</CFormFeedback>
+                </CCol>
+                <CCol md={4}>
+                  <CFormLabel htmlFor="validationServer02">Email</CFormLabel>
+                  <CFormInput
+                    type="text"
+                    id="validationServer02"
+                    defaultValue="Otto"
+                    valid
+                    required
+                  />
+                  <CFormFeedback valid>Looks good!</CFormFeedback>
+                </CCol>
+                <CCol md={4}>
+                  <CFormLabel htmlFor="validationServerUsername">Username</CFormLabel>
+                  <CInputGroup className="has-validation">
+                    <CInputGroupText id="inputGroupPrepend03">@</CInputGroupText>
+                    <CFormInput
+                      type="text"
+                      id="validationServerUsername"
+                      defaultValue=""
+                      aria-describedby="inputGroupPrepend03"
+                      invalid
+                      required
+                    />
+                    <CFormFeedback invalid>Please choose a username.</CFormFeedback>
+                  </CInputGroup>
+                </CCol>
+                <CCol md={6}>
+                  <CFormLabel htmlFor="validationServer03">City</CFormLabel>
+                  <CFormInput type="text" id="validationServer03" invalid required />
+                  <CFormFeedback invalid>Please provide a valid city.</CFormFeedback>
+                </CCol>
+                <CCol md={3}>
+                  <CFormLabel htmlFor="validationServer04">City</CFormLabel>
+                  <CFormSelect id="validationServer04" invalid>
+                    <option disabled>Choose...</option>
+                    <option>...</option>
+                  </CFormSelect>
+                  <CFormFeedback invalid>Please provide a valid city.</CFormFeedback>
+                </CCol>
+                <CCol md={3}>
+                  <CFormLabel htmlFor="validationServer05">City</CFormLabel>
+                  <CFormInput type="text" id="validationServer05" invalid required />
+                  <CFormFeedback invalid>Please provide a valid zip.</CFormFeedback>
+                </CCol>
+                <CCol xs={12}>
+                  <CFormCheck
+                    type="checkbox"
+                    id="invalidCheck"
+                    label="Agree to terms and conditions"
+                    invalid
+                    required
+                  />
+                  <CFormFeedback invalid>You must agree before submitting.</CFormFeedback>
+                </CCol>
+                <CCol xs={12}>
+                  <CButton color="primary" type="submit">
+                    Submit form
+                  </CButton>
+                </CCol>
+              </CForm>
+            </DocsExample>
+          </CCardBody>
+        </CCard>
+      </CCol>
+      <CCol xs={12}>
+        <CCard className="mb-4">
+          <CCardHeader>
+            <strong>Validation</strong> <small>Supported elements</small>
+          </CCardHeader>
+          <CCardBody>
+            <p className="text-body-secondary small">
+              Validation styles are available for the following form controls and components:
+            </p>
+            <ul>
+              <li>
+                <code>&lt;CFormInput&gt;</code>s
+              </li>
+              <li>
+                <code>&lt;CFormSelect&gt;</code>s
+              </li>
+              <li>
+                <code>&lt;CFormCheck&gt;</code>s
+              </li>
+            </ul>
+            <DocsExample href="forms/validation#supported-elements">
+              <CForm validated={true}>
+                <div className="mb-3">
+                  <CFormLabel htmlFor="validationTextarea" className="form-label">
+                    Textarea
+                  </CFormLabel>
+                  <CFormTextarea
+                    id="validationTextarea"
+                    placeholder="Required example textarea"
+                    invalid
+                    required
+                  ></CFormTextarea>
+                  <CFormFeedback invalid>Please enter a message in the textarea.</CFormFeedback>
+                </div>
+                <CFormCheck
+                  className="mb-3"
+                  id="validationFormCheck1"
+                  label="Check this checkbox"
+                  required
+                />
+                <CFormFeedback invalid>Example invalid feedback text</CFormFeedback>
+
+                <CFormCheck
+                  type="radio"
+                  name="radio-stacked"
+                  id="validationFormCheck2"
+                  label="Check this checkbox"
+                  required
+                />
+
+                <CFormCheck
+                  className="mb-3"
+                  type="radio"
+                  name="radio-stacked"
+                  id="validationFormCheck3"
+                  label="Or toggle this other radio"
+                  required
+                />
+                <CFormFeedback invalid>More example invalid feedback text</CFormFeedback>
+
+                <div className="mb-3">
+                  <CFormSelect required aria-label="select example">
+                    <option>Open this select menu</option>
+                    <option value="1">One</option>
+                    <option value="2">Two</option>
+                    <option value="3">Three</option>
+                  </CFormSelect>
+                  <CFormFeedback invalid>Example invalid select feedback</CFormFeedback>
+                </div>
+
+                <div className="mb-3">
+                  <CFormInput
+                    type="file"
+                    id="validationTextarea"
+                    aria-label="file example"
+                    required
+                  />
+                  <CFormFeedback invalid>Example invalid form file feedback</CFormFeedback>
+                </div>
+
+                <div className="mb-3">
+                  <CButton type="submit" color="primary" disabled>
+                    Submit form
+                  </CButton>
+                </div>
+              </CForm>
+            </DocsExample>
+          </CCardBody>
+        </CCard>
+      </CCol>
+      <CCol xs={12}>
+        <CCard className="mb-4">
+          <CCardHeader>
+            <strong>Validation</strong> <small>Tooltips</small>
+          </CCardHeader>
+          <CCardBody>
+            <p className="text-body-secondary small">
+              If your form layout allows it, you can swap the text for the tooltip to display
+              validation feedback in a styled tooltip. Be sure to have a parent with{' '}
+              <code>position: relative</code> on it for tooltip positioning. In the example below,
+              our column classes have this already, but your project may require an alternative
+              setup.
+            </p>
+            <DocsExample href="forms/validation#tooltips">{Tooltips()}</DocsExample>
+          </CCardBody>
+        </CCard>
+      </CCol>
+    </CRow>
+  )
+}
+
+export default Validation
Index: PlanningMamagement/frontend/src/views/forms/select/Select.js
===================================================================
diff --git a/PlanningMamagement/frontend/src/views/forms/select/Select.js b/PlanningMamagement/frontend/src/views/forms/select/Select.js
new file mode 100644
--- /dev/null	(date 1728391642230)
+++ b/PlanningMamagement/frontend/src/views/forms/select/Select.js	(date 1728391642230)
@@ -0,0 +1,99 @@
+import React from 'react'
+import { CCard, CCardBody, CCardHeader, CCol, CFormSelect, CRow } from '@coreui/react'
+import { DocsExample } from 'src/components'
+
+const Select = () => {
+  return (
+    <CRow>
+      <CCol xs={12}>
+        <CCard className="mb-4">
+          <CCardHeader>
+            <strong>React Select</strong> <small>Default</small>
+          </CCardHeader>
+          <CCardBody>
+            <DocsExample href="forms/select">
+              <CFormSelect aria-label="Default select example">
+                <option>Open this select menu</option>
+                <option value="1">One</option>
+                <option value="2">Two</option>
+                <option value="3">Three</option>
+              </CFormSelect>
+            </DocsExample>
+          </CCardBody>
+        </CCard>
+      </CCol>
+      <CCol xs={12}>
+        <CCard className="mb-4">
+          <CCardHeader>
+            <strong>React Select</strong> <small>Sizing</small>
+          </CCardHeader>
+          <CCardBody>
+            <p className="text-body-secondary small">
+              You may also choose from small and large custom selects to match our similarly sized
+              text inputs.
+            </p>
+            <DocsExample href="forms/select#sizing">
+              <CFormSelect size="lg" className="mb-3" aria-label="Large select example">
+                <option>Open this select menu</option>
+                <option value="1">One</option>
+                <option value="2">Two</option>
+                <option value="3">Three</option>
+              </CFormSelect>
+              <CFormSelect size="sm" className="mb-3" aria-label="Small select example">
+                <option>Open this select menu</option>
+                <option value="1">One</option>
+                <option value="2">Two</option>
+                <option value="3">Three</option>
+              </CFormSelect>
+            </DocsExample>
+            <p className="text-body-secondary small">
+              The <code>multiple</code> attribute is also supported:
+            </p>
+            <DocsExample href="forms/select#sizing">
+              <CFormSelect size="lg" multiple aria-label="Multiple select example">
+                <option>Open this select menu</option>
+                <option value="1">One</option>
+                <option value="2">Two</option>
+                <option value="3">Three</option>
+              </CFormSelect>
+            </DocsExample>
+            <p className="text-body-secondary small">
+              As is the <code>htmlSize</code> property:
+            </p>
+            <DocsExample href="forms/select#sizing">
+              <CFormSelect size="lg" multiple aria-label="Multiple select example">
+                <option>Open this select menu</option>
+                <option value="1">One</option>
+                <option value="2">Two</option>
+                <option value="3">Three</option>
+              </CFormSelect>
+            </DocsExample>
+          </CCardBody>
+        </CCard>
+      </CCol>
+      <CCol xs={12}>
+        <CCard className="mb-4">
+          <CCardHeader>
+            <strong>React Select</strong> <small>Disabled</small>
+          </CCardHeader>
+          <CCardBody>
+            <p className="text-body-secondary small">
+              Add the <code>disabled</code> boolean attribute on a select to give it a grayed out
+              appearance and remove pointer events.
+            </p>
+            <DocsExample href="forms/select#disabled">
+              <CFormSelect aria-label="Disabled select example" disabled>
+                <option>Open this select menu</option>
+                <option value="1">One</option>
+                <option value="2">Two</option>
+                <option value="3">Three</option>
+              </CFormSelect>
+            </DocsExample>
+          </CCardBody>
+        </CCard>
+      </CCol>
+    </CRow>
+  )
+}
+
+export default Select
Index: PlanningMamagement/frontend/src/views/forms/form-control/FormControl.js
===================================================================
diff --git a/PlanningMamagement/frontend/src/views/forms/form-control/FormControl.js b/PlanningMamagement/frontend/src/views/forms/form-control/FormControl.js
new file mode 100644
--- /dev/null	(date 1728391642165)
+++ b/PlanningMamagement/frontend/src/views/forms/form-control/FormControl.js	(date 1728391642165)
@@ -0,0 +1,248 @@
+import React from 'react'
+import {
+  CButton,
+  CCard,
+  CCardBody,
+  CCardHeader,
+  CCol,
+  CForm,
+  CFormInput,
+  CFormLabel,
+  CFormTextarea,
+  CRow,
+} from '@coreui/react'
+import { DocsExample } from 'src/components'
+
+const FormControl = () => {
+  return (
+    <CRow>
+      <CCol xs={12}>
+        <CCard className="mb-4">
+          <CCardHeader>
+            <strong>React Form Control</strong>
+          </CCardHeader>
+          <CCardBody>
+            <DocsExample href="forms/form-control">
+              <CForm>
+                <div className="mb-3">
+                  <CFormLabel htmlFor="exampleFormControlInput1">Email address</CFormLabel>
+                  <CFormInput
+                    type="email"
+                    id="exampleFormControlInput1"
+                    placeholder="name@example.com"
+                  />
+                </div>
+                <div className="mb-3">
+                  <CFormLabel htmlFor="exampleFormControlTextarea1">Example textarea</CFormLabel>
+                  <CFormTextarea id="exampleFormControlTextarea1" rows={3}></CFormTextarea>
+                </div>
+              </CForm>
+            </DocsExample>
+          </CCardBody>
+        </CCard>
+      </CCol>
+      <CCol xs={12}>
+        <CCard className="mb-4">
+          <CCardHeader>
+            <strong>React Form Control</strong> <small>Sizing</small>
+          </CCardHeader>
+          <CCardBody>
+            <p className="text-body-secondary small">
+              Set heights using <code>size</code> property like <code>size=&#34;lg&#34;</code> and{' '}
+              <code>size=&#34;sm&#34;</code>.
+            </p>
+            <DocsExample href="forms/form-control#sizing">
+              <CFormInput
+                type="text"
+                size="lg"
+                placeholder="Large input"
+                aria-label="lg input example"
+              />
+              <br />
+              <CFormInput
+                type="text"
+                placeholder="Default input"
+                aria-label="default input example"
+              />
+              <br />
+              <CFormInput
+                type="text"
+                size="sm"
+                placeholder="Small input"
+                aria-label="sm input example"
+              />
+            </DocsExample>
+          </CCardBody>
+        </CCard>
+      </CCol>
+      <CCol xs={12}>
+        <CCard className="mb-4">
+          <CCardHeader>
+            <strong>React Form Control</strong> <small>Disabled</small>
+          </CCardHeader>
+          <CCardBody>
+            <p className="text-body-secondary small">
+              Add the <code>disabled</code> boolean attribute on an input to give it a grayed out
+              appearance and remove pointer events.
+            </p>
+            <DocsExample href="forms/form-control#disabled">
+              <CFormInput
+                type="text"
+                placeholder="Disabled input"
+                aria-label="Disabled input example"
+                disabled
+              />
+              <br />
+              <CFormInput
+                type="text"
+                placeholder="Disabled readonly input"
+                aria-label="Disabled input example"
+                disabled
+                readOnly
+              />
+              <br />
+            </DocsExample>
+          </CCardBody>
+        </CCard>
+      </CCol>
+      <CCol xs={12}>
+        <CCard className="mb-4">
+          <CCardHeader>
+            <strong>React Form Control</strong> <small>Readonly</small>
+          </CCardHeader>
+          <CCardBody>
+            <p className="text-body-secondary small">
+              Add the <code>readOnly</code> boolean attribute on an input to prevent modification of
+              the input&#39;s value. Read-only inputs appear lighter (just like disabled inputs),
+              but retain the standard cursor.
+            </p>
+            <DocsExample href="forms/form-control#readonly">
+              <CFormInput
+                type="text"
+                placeholder="Readonly input here..."
+                aria-label="readonly input example"
+                readOnly
+              />
+            </DocsExample>
+          </CCardBody>
+        </CCard>
+      </CCol>
+      <CCol xs={12}>
+        <CCard className="mb-4">
+          <CCardHeader>
+            <strong>React Form Control</strong> <small>Readonly plain text</small>
+          </CCardHeader>
+          <CCardBody>
+            <p className="text-body-secondary small">
+              If you want to have <code>&lt;input readonly&gt;</code> elements in your form styled
+              as plain text, use the <code>plainText</code> boolean property to remove the default
+              form field styling and preserve the correct margin and padding.
+            </p>
+            <DocsExample href="components/accordion">
+              <CRow className="mb-3">
+                <CFormLabel htmlFor="staticEmail" className="col-sm-2 col-form-label">
+                  Email
+                </CFormLabel>
+                <div className="col-sm-10">
+                  <CFormInput
+                    type="text"
+                    id="staticEmail"
+                    defaultValue="email@example.com"
+                    readOnly
+                    plainText
+                  />
+                </div>
+              </CRow>
+              <CRow className="mb-3">
+                <CFormLabel htmlFor="inputPassword" className="col-sm-2 col-form-label">
+                  Password
+                </CFormLabel>
+                <div className="col-sm-10">
+                  <CFormInput type="password" id="inputPassword" />
+                </div>
+              </CRow>
+            </DocsExample>
+            <DocsExample href="components/accordion">
+              <CForm className="row g-3">
+                <div className="col-auto">
+                  <CFormLabel htmlFor="staticEmail2" className="visually-hidden">
+                    Email
+                  </CFormLabel>
+                  <CFormInput
+                    type="text"
+                    id="staticEmail2"
+                    defaultValue="email@example.com"
+                    readOnly
+                    plainText
+                  />
+                </div>
+                <div className="col-auto">
+                  <CFormLabel htmlFor="inputPassword2" className="visually-hidden">
+                    Password
+                  </CFormLabel>
+                  <CFormInput type="password" id="inputPassword2" placeholder="Password" />
+                </div>
+                <div className="col-auto">
+                  <CButton color="primary" type="submit" className="mb-3">
+                    Confirm identity
+                  </CButton>
+                </div>
+              </CForm>
+            </DocsExample>
+          </CCardBody>
+        </CCard>
+      </CCol>
+      <CCol xs={12}>
+        <CCard className="mb-4">
+          <CCardHeader>
+            <strong>React Form Control</strong> <small>File input</small>
+          </CCardHeader>
+          <CCardBody>
+            <DocsExample href="forms/form-control#file-input">
+              <div className="mb-3">
+                <CFormLabel htmlFor="formFile">Default file input example</CFormLabel>
+                <CFormInput type="file" id="formFile" />
+              </div>
+              <div className="mb-3">
+                <CFormLabel htmlFor="formFileMultiple">Multiple files input example</CFormLabel>
+                <CFormInput type="file" id="formFileMultiple" multiple />
+              </div>
+              <div className="mb-3">
+                <CFormLabel htmlFor="formFileDisabled">Disabled file input example</CFormLabel>
+                <CFormInput type="file" id="formFileDisabled" disabled />
+              </div>
+              <div className="mb-3">
+                <CFormLabel htmlFor="formFileSm">Small file input example</CFormLabel>
+                <CFormInput type="file" size="sm" id="formFileSm" />
+              </div>
+              <div>
+                <CFormLabel htmlFor="formFileLg">Large file input example</CFormLabel>
+                <CFormInput type="file" size="lg" id="formFileLg" />
+              </div>
+            </DocsExample>
+          </CCardBody>
+        </CCard>
+      </CCol>
+      <CCol xs={12}>
+        <CCard className="mb-4">
+          <CCardHeader>
+            <strong>React Form Control</strong> <small>Color</small>
+          </CCardHeader>
+          <CCardBody>
+            <DocsExample href="forms/form-control#color">
+              <CFormLabel htmlFor="exampleColorInput">Color picker</CFormLabel>
+              <CFormInput
+                type="color"
+                id="exampleColorInput"
+                defaultValue="#563d7c"
+                title="Choose your color"
+              />
+            </DocsExample>
+          </CCardBody>
+        </CCard>
+      </CCol>
+    </CRow>
+  )
+}
+
+export default FormControl
Index: PlanningMamagement/frontend/src/views/forms/input-group/InputGroup.js
===================================================================
diff --git a/PlanningMamagement/frontend/src/views/forms/input-group/InputGroup.js b/PlanningMamagement/frontend/src/views/forms/input-group/InputGroup.js
new file mode 100644
--- /dev/null	(date 1728391642181)
+++ b/PlanningMamagement/frontend/src/views/forms/input-group/InputGroup.js	(date 1728391642181)
@@ -0,0 +1,503 @@
+import React from 'react'
+import {
+  CButton,
+  CCard,
+  CCardBody,
+  CCardHeader,
+  CCol,
+  CDropdown,
+  CDropdownDivider,
+  CDropdownItem,
+  CDropdownMenu,
+  CDropdownToggle,
+  CFormCheck,
+  CFormInput,
+  CFormLabel,
+  CFormSelect,
+  CFormTextarea,
+  CInputGroup,
+  CInputGroupText,
+  CRow,
+} from '@coreui/react'
+import { DocsExample } from 'src/components'
+
+const InputGroup = () => {
+  return (
+    <CRow>
+      <CCol xs={12}>
+        <CCard className="mb-4">
+          <CCardHeader>
+            <strong>React Input group</strong> <small>Basic example</small>
+          </CCardHeader>
+          <CCardBody>
+            <p className="text-body-secondary small">
+              Place one add-on or button on either side of an input. You may also place one on both
+              sides of an input. Remember to place <code>&lt;CFormLabel&gt;</code>s outside the
+              input group.
+            </p>
+            <DocsExample href="forms/input-group">
+              <CInputGroup className="mb-3">
+                <CInputGroupText id="basic-addon1">@</CInputGroupText>
+                <CFormInput
+                  placeholder="Username"
+                  aria-label="Username"
+                  aria-describedby="basic-addon1"
+                />
+              </CInputGroup>
+              <CInputGroup className="mb-3">
+                <CFormInput
+                  placeholder="Recipient&#39;s username"
+                  aria-label="Recipient&#39;s username"
+                  aria-describedby="basic-addon2"
+                />
+                <CInputGroupText id="basic-addon2">@example.com</CInputGroupText>
+              </CInputGroup>
+              <CFormLabel htmlFor="basic-url">Your vanity URL</CFormLabel>
+              <CInputGroup className="mb-3">
+                <CInputGroupText id="basic-addon3">https://example.com/users/</CInputGroupText>
+                <CFormInput id="basic-url" aria-describedby="basic-addon3" />
+              </CInputGroup>
+              <CInputGroup className="mb-3">
+                <CInputGroupText>$</CInputGroupText>
+                <CFormInput aria-label="Amount (to the nearest dollar)" />
+                <CInputGroupText>.00</CInputGroupText>
+              </CInputGroup>
+              <CInputGroup className="mb-3">
+                <CFormInput placeholder="Username" aria-label="Username" />
+                <CInputGroupText>@</CInputGroupText>
+                <CFormInput placeholder="Server" aria-label="Server" />
+              </CInputGroup>
+              <CInputGroup>
+                <CInputGroupText>With textarea</CInputGroupText>
+                <CFormTextarea aria-label="With textarea"></CFormTextarea>
+              </CInputGroup>
+            </DocsExample>
+          </CCardBody>
+        </CCard>
+      </CCol>
+      <CCol xs={12}>
+        <CCard className="mb-4">
+          <CCardHeader>
+            <strong>React Input group</strong> <small>Wrapping</small>
+          </CCardHeader>
+          <CCardBody>
+            <p className="text-body-secondary small">
+              Input groups wrap by default via <code>flex-wrap: wrap</code> in order to accommodate
+              custom form field validation within an input group. You may disable this with{' '}
+              <code>.flex-nowrap</code>.
+            </p>
+            <DocsExample href="forms/input-group#wrapping">
+              <CInputGroup className="flex-nowrap">
+                <CInputGroupText id="addon-wrapping">@</CInputGroupText>
+                <CFormInput
+                  placeholder="Username"
+                  aria-label="Username"
+                  aria-describedby="addon-wrapping"
+                />
+              </CInputGroup>
+            </DocsExample>
+          </CCardBody>
+        </CCard>
+      </CCol>
+      <CCol xs={12}>
+        <CCard className="mb-4">
+          <CCardHeader>
+            <strong>React Input group</strong> <small>Sizing</small>
+          </CCardHeader>
+          <CCardBody>
+            <p className="text-body-secondary small">
+              Add the relative form sizing classes to the <code>&lt;CInputGroup&gt;</code> itself
+              and contents within will automatically resize—no need for repeating the form control
+              size classes on each element.
+            </p>
+            <p className="text-body-secondary small">
+              <strong>Sizing on the individual input group elements isn&#39;tsupported.</strong>
+            </p>
+            <DocsExample href="forms/input-group#sizing">
+              <CInputGroup size="sm" className="mb-3">
+                <CInputGroupText id="inputGroup-sizing-sm">Small</CInputGroupText>
+                <CFormInput
+                  aria-label="Sizing example input"
+                  aria-describedby="inputGroup-sizing-sm"
+                />
+              </CInputGroup>
+              <CInputGroup className="mb-3">
+                <CInputGroupText id="inputGroup-sizing-default">Default</CInputGroupText>
+                <CFormInput
+                  aria-label="Sizing example input"
+                  aria-describedby="inputGroup-sizing-default"
+                />
+              </CInputGroup>
+              <CInputGroup size="lg">
+                <CInputGroupText id="inputGroup-sizing-lg">Large</CInputGroupText>
+                <CFormInput
+                  aria-label="Sizing example input"
+                  aria-describedby="inputGroup-sizing-lg"
+                />
+              </CInputGroup>
+            </DocsExample>
+          </CCardBody>
+        </CCard>
+      </CCol>
+      <CCol xs={12}>
+        <CCard className="mb-4">
+          <CCardHeader>
+            <strong>React Input group</strong> <small>Checkboxes and radios</small>
+          </CCardHeader>
+          <CCardBody>
+            <p className="text-body-secondary small">
+              Place any checkbox or radio option within an input group&#39;s addon instead of text.
+            </p>
+            <DocsExample href="forms/input-group#checkboxes-and-radios">
+              <CInputGroup className="mb-3">
+                <CInputGroupText>
+                  <CFormCheck
+                    type="checkbox"
+                    value=""
+                    aria-label="Checkbox for following text input"
+                  />
+                </CInputGroupText>
+                <CFormInput aria-label="Text input with checkbox" />
+              </CInputGroup>
+              <CInputGroup>
+                <CInputGroupText>
+                  <CFormCheck
+                    type="radio"
+                    value=""
+                    aria-label="Radio button for following text input"
+                  />
+                </CInputGroupText>
+                <CFormInput aria-label="Text input with radio button" />
+              </CInputGroup>
+            </DocsExample>
+          </CCardBody>
+        </CCard>
+      </CCol>
+      <CCol xs={12}>
+        <CCard className="mb-4">
+          <CCardHeader>
+            <strong>React Input group</strong> <small>Multiple inputs</small>
+          </CCardHeader>
+          <CCardBody>
+            <p className="text-body-secondary small">
+              While multiple <code>&lt;CFormInput&gt;</code>s are supported visually, validation
+              styles are only available for input groups with a single{' '}
+              <code>&lt;CFormInput&gt;</code>.
+            </p>
+            <DocsExample href="forms/input-group#multiple-inputs">
+              <CInputGroup>
+                <CInputGroupText>First and last name</CInputGroupText>
+                <CFormInput aria-label="First name" />
+                <CFormInput aria-label="Last name" />
+              </CInputGroup>
+            </DocsExample>
+          </CCardBody>
+        </CCard>
+      </CCol>
+      <CCol xs={12}>
+        <CCard className="mb-4">
+          <CCardHeader>
+            <strong>React Input group</strong> <small>Multiple addons</small>
+          </CCardHeader>
+          <CCardBody>
+            <p className="text-body-secondary small">
+              Multiple add-ons are supported and can be mixed with checkbox and radio input
+              versions..
+            </p>
+            <DocsExample href="forms/input-group#multiple-addons">
+              <CInputGroup className="mb-3">
+                <CInputGroupText>$</CInputGroupText>
+                <CInputGroupText>0.00</CInputGroupText>
+                <CFormInput aria-label="Dollar amount (with dot and two decimal places)" />
+              </CInputGroup>
+              <CInputGroup>
+                <CFormInput aria-label="Dollar amount (with dot and two decimal places)" />
+                <CInputGroupText>$</CInputGroupText>
+                <CInputGroupText>0.00</CInputGroupText>
+              </CInputGroup>
+            </DocsExample>
+          </CCardBody>
+        </CCard>
+      </CCol>
+      <CCol xs={12}>
+        <CCard className="mb-4">
+          <CCardHeader>
+            <strong>React Input group</strong> <small>Button addons</small>
+          </CCardHeader>
+          <CCardBody>
+            <p className="text-body-secondary small">
+              Multiple add-ons are supported and can be mixed with checkbox and radio input
+              versions..
+            </p>
+            <DocsExample href="forms/input-group#button-addons">
+              <CInputGroup className="mb-3">
+                <CButton type="button" color="secondary" variant="outline" id="button-addon1">
+                  Button
+                </CButton>
+                <CFormInput
+                  placeholder=""
+                  aria-label="Example text with button addon"
+                  aria-describedby="button-addon1"
+                />
+              </CInputGroup>
+              <CInputGroup className="mb-3">
+                <CFormInput
+                  placeholder="Recipient's username"
+                  aria-label="Recipient's username"
+                  aria-describedby="button-addon2"
+                />
+                <CButton type="button" color="secondary" variant="outline" id="button-addon2">
+                  Button
+                </CButton>
+              </CInputGroup>
+              <CInputGroup className="mb-3">
+                <CButton type="button" color="secondary" variant="outline">
+                  Button
+                </CButton>
+                <CButton type="button" color="secondary" variant="outline">
+                  Button
+                </CButton>
+                <CFormInput placeholder="" aria-label="Example text with two button addons" />
+              </CInputGroup>
+              <CInputGroup>
+                <CFormInput
+                  placeholder="Recipient's username"
+                  aria-label="Recipient's username with two button addons"
+                />
+                <CButton type="button" color="secondary" variant="outline">
+                  Button
+                </CButton>
+                <CButton type="button" color="secondary" variant="outline">
+                  Button
+                </CButton>
+              </CInputGroup>
+            </DocsExample>
+          </CCardBody>
+        </CCard>
+      </CCol>
+      <CCol xs={12}>
+        <CCard className="mb-4">
+          <CCardHeader>
+            <strong>React Input group</strong> <small>Buttons with dropdowns</small>
+          </CCardHeader>
+          <CCardBody>
+            <DocsExample href="forms/input-group#buttons-with-dropdowns">
+              <CInputGroup className="mb-3">
+                <CDropdown variant="input-group">
+                  <CDropdownToggle color="secondary" variant="outline">
+                    Dropdown
+                  </CDropdownToggle>
+                  <CDropdownMenu>
+                    <CDropdownItem href="#">Action</CDropdownItem>
+                    <CDropdownItem href="#">Another action</CDropdownItem>
+                    <CDropdownItem href="#">Something else here</CDropdownItem>
+                    <CDropdownDivider />
+                    <CDropdownItem href="#">Separated link</CDropdownItem>
+                  </CDropdownMenu>
+                </CDropdown>
+                <CFormInput aria-label="Text input with dropdown button" />
+              </CInputGroup>
+              <CInputGroup className="mb-3">
+                <CFormInput aria-label="Text input with dropdown button" />
+                <CDropdown alignment="end" variant="input-group">
+                  <CDropdownToggle color="secondary" variant="outline">
+                    Dropdown
+                  </CDropdownToggle>
+                  <CDropdownMenu>
+                    <CDropdownItem href="#">Action</CDropdownItem>
+                    <CDropdownItem href="#">Another action</CDropdownItem>
+                    <CDropdownItem href="#">Something else here</CDropdownItem>
+                    <CDropdownDivider />
+                    <CDropdownItem href="#">Separated link</CDropdownItem>
+                  </CDropdownMenu>
+                </CDropdown>
+              </CInputGroup>
+              <CInputGroup>
+                <CDropdown variant="input-group">
+                  <CDropdownToggle color="secondary" variant="outline">
+                    Dropdown
+                  </CDropdownToggle>
+                  <CDropdownMenu>
+                    <CDropdownItem href="#">Action</CDropdownItem>
+                    <CDropdownItem href="#">Another action</CDropdownItem>
+                    <CDropdownItem href="#">Something else here</CDropdownItem>
+                    <CDropdownDivider />
+                    <CDropdownItem href="#">Separated link</CDropdownItem>
+                  </CDropdownMenu>
+                </CDropdown>
+                <CFormInput aria-label="Text input with 2 dropdown buttons" />
+                <CDropdown alignment="end" variant="input-group">
+                  <CDropdownToggle color="secondary" variant="outline">
+                    Dropdown
+                  </CDropdownToggle>
+                  <CDropdownMenu>
+                    <CDropdownItem href="#">Action</CDropdownItem>
+                    <CDropdownItem href="#">Another action</CDropdownItem>
+                    <CDropdownItem href="#">Something else here</CDropdownItem>
+                    <CDropdownDivider />
+                    <CDropdownItem href="#">Separated link</CDropdownItem>
+                  </CDropdownMenu>
+                </CDropdown>
+              </CInputGroup>
+            </DocsExample>
+          </CCardBody>
+        </CCard>
+      </CCol>
+      <CCol xs={12}>
+        <CCard className="mb-4">
+          <CCardHeader>
+            <strong>React Input group</strong> <small>Segmented buttons</small>
+          </CCardHeader>
+          <CCardBody>
+            <DocsExample href="forms/input-group#segmented-buttons">
+              <CInputGroup className="mb-3">
+                <CDropdown variant="input-group">
+                  <CButton type="button" color="secondary" variant="outline">
+                    Action
+                  </CButton>
+                  <CDropdownToggle color="secondary" variant="outline" split />
+                  <CDropdownMenu>
+                    <CDropdownItem href="#">Action</CDropdownItem>
+                    <CDropdownItem href="#">Another action</CDropdownItem>
+                    <CDropdownItem href="#">Something else here</CDropdownItem>
+                    <CDropdownDivider />
+                    <CDropdownItem href="#">Separated link</CDropdownItem>
+                  </CDropdownMenu>
+                </CDropdown>
+                <CFormInput aria-label="Text input with segmented dropdown button" />
+              </CInputGroup>
+              <CInputGroup>
+                <CFormInput aria-label="Text input with segmented dropdown button" />
+                <CDropdown alignment="end" variant="input-group">
+                  <CButton type="button" color="secondary" variant="outline">
+                    Action
+                  </CButton>
+                  <CDropdownToggle color="secondary" variant="outline" split />
+                  <CDropdownMenu>
+                    <CDropdownItem href="#">Action</CDropdownItem>
+                    <CDropdownItem href="#">Another action</CDropdownItem>
+                    <CDropdownItem href="#">Something else here</CDropdownItem>
+                    <CDropdownDivider />
+                    <CDropdownItem href="#">Separated link</CDropdownItem>
+                  </CDropdownMenu>
+                </CDropdown>
+              </CInputGroup>
+            </DocsExample>
+          </CCardBody>
+        </CCard>
+      </CCol>
+      <CCol xs={12}>
+        <CCard className="mb-4">
+          <CCardHeader>
+            <strong>React Input group</strong> <small>Custom select</small>
+          </CCardHeader>
+          <CCardBody>
+            <DocsExample href="forms/input-group#custom-select">
+              <CInputGroup className="mb-3">
+                <CInputGroupText as="label" htmlFor="inputGroupSelect01">
+                  Options
+                </CInputGroupText>
+                <CFormSelect id="inputGroupSelect01">
+                  <option>Choose...</option>
+                  <option value="1">One</option>
+                  <option value="2">Two</option>
+                  <option value="3">Three</option>
+                </CFormSelect>
+              </CInputGroup>
+              <CInputGroup className="mb-3">
+                <CFormSelect id="inputGroupSelect02">
+                  <option>Choose...</option>
+                  <option value="1">One</option>
+                  <option value="2">Two</option>
+                  <option value="3">Three</option>
+                </CFormSelect>
+                <CInputGroupText as="label" htmlFor="inputGroupSelect02">
+                  Options
+                </CInputGroupText>
+              </CInputGroup>
+              <CInputGroup className="mb-3">
+                <CButton type="button" color="secondary" variant="outline">
+                  Button
+                </CButton>
+                <CFormSelect id="inputGroupSelect03" aria-label="Example select with button addon">
+                  <option>Choose...</option>
+                  <option value="1">One</option>
+                  <option value="2">Two</option>
+                  <option value="3">Three</option>
+                </CFormSelect>
+              </CInputGroup>
+              <CInputGroup>
+                <CFormSelect id="inputGroupSelect04" aria-label="Example select with button addon">
+                  <option>Choose...</option>
+                  <option value="1">One</option>
+                  <option value="2">Two</option>
+                  <option value="3">Three</option>
+                </CFormSelect>
+                <CButton type="button" color="secondary" variant="outline">
+                  Button
+                </CButton>
+              </CInputGroup>
+            </DocsExample>
+          </CCardBody>
+        </CCard>
+      </CCol>
+      <CCol xs={12}>
+        <CCard className="mb-4">
+          <CCardHeader>
+            <strong>React Input group</strong> <small>Custom file input</small>
+          </CCardHeader>
+          <CCardBody>
+            <DocsExample href="forms/input-group#custom-file-input">
+              <CInputGroup className="mb-3">
+                <CInputGroupText as="label" htmlFor="inputGroupFile01">
+                  Upload
+                </CInputGroupText>
+                <CFormInput type="file" id="inputGroupFile01" />
+              </CInputGroup>
+              <CInputGroup className="mb-3">
+                <CFormInput type="file" id="inputGroupFile02" />
+                <CInputGroupText as="label" htmlFor="inputGroupFile02">
+                  Upload
+                </CInputGroupText>
+              </CInputGroup>
+              <CInputGroup className="mb-3">
+                <CButton
+                  type="button"
+                  color="secondary"
+                  variant="outline"
+                  id="inputGroupFileAddon03"
+                >
+                  Button
+                </CButton>
+                <CFormInput
+                  type="file"
+                  id="inputGroupFile03"
+                  aria-describedby="inputGroupFileAddon03"
+                  aria-label="Upload"
+                />
+              </CInputGroup>
+              <CInputGroup>
+                <CFormInput
+                  type="file"
+                  id="inputGroupFile04"
+                  aria-describedby="inputGroupFileAddon04"
+                  aria-label="Upload"
+                />
+                <CButton
+                  type="button"
+                  color="secondary"
+                  variant="outline"
+                  id="inputGroupFileAddon04"
+                >
+                  Button
+                </CButton>
+              </CInputGroup>
+            </DocsExample>
+          </CCardBody>
+        </CCard>
+      </CCol>
+    </CRow>
+  )
+}
+
+export default InputGroup
Index: PlanningMamagement/frontend/src/views/forms/floating-labels/FloatingLabels.js
===================================================================
diff --git a/PlanningMamagement/frontend/src/views/forms/floating-labels/FloatingLabels.js b/PlanningMamagement/frontend/src/views/forms/floating-labels/FloatingLabels.js
new file mode 100644
--- /dev/null	(date 1728391642150)
+++ b/PlanningMamagement/frontend/src/views/forms/floating-labels/FloatingLabels.js	(date 1728391642150)
@@ -0,0 +1,170 @@
+import React from 'react'
+import {
+  CCard,
+  CCardBody,
+  CCardHeader,
+  CCol,
+  CFormInput,
+  CFormLabel,
+  CFormFloating,
+  CFormSelect,
+  CFormTextarea,
+  CRow,
+} from '@coreui/react'
+import { DocsExample } from 'src/components'
+
+const FloatingLabels = () => {
+  return (
+    <CRow>
+      <CCol xs={12}>
+        <CCard className="mb-4">
+          <CCardHeader>
+            <strong>React Floating labels</strong>
+          </CCardHeader>
+          <CCardBody>
+            <p className="text-body-secondary small">
+              Wrap a pair of <code>&lt;CFormInput&gt;</code> and <code>&lt;CFormLabel&gt;</code>{' '}
+              elements in <code>CFormFloating</code> to enable floating labels with textual form
+              fields. A <code>placeholder</code> is required on each <code>&lt;CFormInput&gt;</code>{' '}
+              as our method of CSS-only floating labels uses the <code>:placeholder-shown</code>{' '}
+              pseudo-element. Also note that the <code>&lt;CFormInput&gt;</code> must come first so
+              we can utilize a sibling selector (e.g., <code>~</code>).
+            </p>
+            <DocsExample href="forms/floating-labels">
+              <CFormFloating className="mb-3">
+                <CFormInput type="email" id="floatingInput" placeholder="name@example.com" />
+                <CFormLabel htmlFor="floatingInput">Email address</CFormLabel>
+              </CFormFloating>
+              <CFormFloating>
+                <CFormInput type="password" id="floatingPassword" placeholder="Password" />
+                <CFormLabel htmlFor="floatingPassword">Password</CFormLabel>
+              </CFormFloating>
+            </DocsExample>
+            <p className="text-body-secondary small">
+              When there&#39;s a <code>value</code> already defined, <code>&lt;CFormLabel&gt;</code>
+              s will automatically adjust to their floated position.
+            </p>
+            <DocsExample href="forms/floating-labels">
+              <CFormFloating>
+                <CFormInput
+                  type="email"
+                  id="floatingInputValue"
+                  placeholder="name@example.com"
+                  defaultValue="test@example.com"
+                />
+                <CFormLabel htmlFor="floatingInputValue">Input with value</CFormLabel>
+              </CFormFloating>
+            </DocsExample>
+          </CCardBody>
+        </CCard>
+      </CCol>
+      <CCol xs={12}>
+        <CCard className="mb-4">
+          <CCardHeader>
+            <strong>React Floating labels</strong> <small>Textareas</small>
+          </CCardHeader>
+          <CCardBody>
+            <p className="text-body-secondary small">
+              By default, <code>&lt;CFormTextarea&gt;</code>s will be the same height as{' '}
+              <code>&lt;CFormInput&gt;</code>s.
+            </p>
+            <DocsExample href="forms/floating-labels#textareas">
+              <CFormFloating>
+                <CFormTextarea
+                  id="floatingTextarea"
+                  placeholder="Leave a comment here"
+                ></CFormTextarea>
+                <CFormLabel htmlFor="floatingTextarea">Comments</CFormLabel>
+              </CFormFloating>
+            </DocsExample>
+            <p className="text-body-secondary small">
+              To set a custom height on your <code>&lt;CFormTextarea;&gt;</code>, do not use the{' '}
+              <code>rows</code> attribute. Instead, set an explicit <code>height</code> (either
+              inline or via custom CSS).
+            </p>
+            <DocsExample href="forms/floating-labels#textareas">
+              <CFormFloating>
+                <CFormTextarea
+                  placeholder="Leave a comment here"
+                  id="floatingTextarea2"
+                  style={{ height: '100px' }}
+                ></CFormTextarea>
+                <CFormLabel htmlFor="floatingTextarea2">Comments</CFormLabel>
+              </CFormFloating>
+            </DocsExample>
+          </CCardBody>
+        </CCard>
+      </CCol>
+      <CCol xs={12}>
+        <CCard className="mb-4">
+          <CCardHeader>
+            <strong>React Floating labels</strong> <small>Selects</small>
+          </CCardHeader>
+          <CCardBody>
+            <p className="text-body-secondary small">
+              Other than <code>&lt;CFormInput&gt;</code>, floating labels are only available on{' '}
+              <code>&lt;CFormSelect&gt;</code>s. They work in the same way, but unlike{' '}
+              <code>&lt;CFormInput&gt;</code>s, they&#39;ll always show the{' '}
+              <code>&lt;CFormLabel&gt;</code> in its floated state.{' '}
+              <strong>
+                Selects with <code>size</code> and <code>multiple</code> are not supported.
+              </strong>
+            </p>
+            <DocsExample href="forms/floating-labels#selects">
+              <CFormFloating>
+                <CFormSelect id="floatingSelect" aria-label="Floating label select example">
+                  <option>Open this select menu</option>
+                  <option value="1">One</option>
+                  <option value="2">Two</option>
+                  <option value="3">Three</option>
+                </CFormSelect>
+                <CFormLabel htmlFor="floatingSelect">Works with selects</CFormLabel>
+              </CFormFloating>
+            </DocsExample>
+          </CCardBody>
+        </CCard>
+      </CCol>
+      <CCol xs={12}>
+        <CCard className="mb-4">
+          <CCardHeader>
+            <strong>React Floating labels</strong> <small>Layout</small>
+          </CCardHeader>
+          <CCardBody>
+            <p className="text-body-secondary small">
+              When working with the CoreUI for Bootstrap grid system, be sure to place form elements
+              within column classes.
+            </p>
+            <DocsExample href="forms/floating-labels#layout">
+              <CRow xs={{ gutter: 2 }}>
+                <CCol md>
+                  <CFormFloating>
+                    <CFormInput
+                      type="email"
+                      id="floatingInputGrid"
+                      placeholder="name@example.com"
+                      defaultValue="email@example.com"
+                    />
+                    <CFormLabel htmlFor="floatingInputGrid">Email address</CFormLabel>
+                  </CFormFloating>
+                </CCol>
+                <CCol md>
+                  <CFormFloating>
+                    <CFormSelect id="floatingSelectGrid" aria-label="Floating label select example">
+                      <option>Open this select menu</option>
+                      <option value="1">One</option>
+                      <option value="2">Two</option>
+                      <option value="3">Three</option>
+                    </CFormSelect>
+                    <CFormLabel htmlFor="floatingSelectGrid">Works with selects</CFormLabel>
+                  </CFormFloating>
+                </CCol>
+              </CRow>
+            </DocsExample>
+          </CCardBody>
+        </CCard>
+      </CCol>
+    </CRow>
+  )
+}
+
+export default FloatingLabels
Index: PlanningMamagement/frontend/src/views/forms/checks-radios/ChecksRadios.js
===================================================================
diff --git a/PlanningMamagement/frontend/src/views/forms/checks-radios/ChecksRadios.js b/PlanningMamagement/frontend/src/views/forms/checks-radios/ChecksRadios.js
new file mode 100644
--- /dev/null	(date 1728391642135)
+++ b/PlanningMamagement/frontend/src/views/forms/checks-radios/ChecksRadios.js	(date 1728391642135)
@@ -0,0 +1,392 @@
+import React from 'react'
+import { CCard, CCardBody, CCardHeader, CCol, CFormCheck, CFormSwitch, CRow } from '@coreui/react'
+import { DocsExample } from 'src/components'
+
+const ChecksRadios = () => {
+  return (
+    <CRow>
+      <CCol xs={12}>
+        <CCard className="mb-4">
+          <CCardHeader>
+            <strong>React Checkbox</strong>
+          </CCardHeader>
+          <CCardBody>
+            <DocsExample href="forms/checks-radios">
+              <CFormCheck id="flexCheckDefault" label="Default checkbox" />
+              <CFormCheck id="flexCheckChecked" label="Checked checkbox" defaultChecked />
+            </DocsExample>
+          </CCardBody>
+        </CCard>
+      </CCol>
+      <CCol xs={12}>
+        <CCard className="mb-4">
+          <CCardHeader>
+            <strong>React Checkbox</strong> <small>Disabled</small>
+          </CCardHeader>
+          <CCardBody>
+            <p className="text-body-secondary small">
+              Add the <code>disabled</code> attribute and the associated <code>&lt;label&gt;</code>s
+              are automatically styled to match with a lighter color to help indicate the
+              input&#39;s state.
+            </p>
+            <DocsExample href="forms/checks-radios#disabled">
+              <CFormCheck label="Disabled checkbox" disabled />
+              <CFormCheck label="Disabled checked checkbox" defaultChecked disabled />
+            </DocsExample>
+          </CCardBody>
+        </CCard>
+      </CCol>
+      <CCol xs={12}>
+        <CCard className="mb-4">
+          <CCardHeader>
+            <strong>React Radio</strong>
+          </CCardHeader>
+          <CCardBody>
+            <p className="text-body-secondary small">
+              Add the <code>disabled</code> attribute and the associated <code>&lt;label&gt;</code>s
+              are automatically styled to match with a lighter color to help indicate the
+              input&#39;s state.
+            </p>
+            <DocsExample href="forms/checks-radios#radios">
+              <CFormCheck
+                type="radio"
+                name="flexRadioDefault"
+                id="flexRadioDefault1"
+                label="Default radio"
+              />
+              <CFormCheck
+                type="radio"
+                name="flexRadioDefault"
+                id="flexRadioDefault2"
+                label="Checked radio"
+                defaultChecked
+              />
+            </DocsExample>
+          </CCardBody>
+        </CCard>
+      </CCol>
+      <CCol xs={12}>
+        <CCard className="mb-4">
+          <CCardHeader>
+            <strong>React Radio</strong> <small>Disabled</small>
+          </CCardHeader>
+          <CCardBody>
+            <DocsExample href="forms/checks-radios#disabled-1">
+              <CFormCheck
+                type="radio"
+                name="flexRadioDisabled"
+                id="flexRadioDisabled"
+                label="Disabled radio"
+                disabled
+              />
+              <CFormCheck
+                type="radio"
+                name="flexRadioDisabled"
+                id="flexRadioCheckedDisabled"
+                label="Disabled checked radio"
+                defaultChecked
+                disabled
+              />
+            </DocsExample>
+          </CCardBody>
+        </CCard>
+      </CCol>
+      <CCol xs={12}>
+        <CCard className="mb-4">
+          <CCardHeader>
+            <strong>React Switches</strong>
+          </CCardHeader>
+          <CCardBody>
+            <p className="text-body-secondary small">
+              A switch has the markup of a custom checkbox but uses the <code>switch</code> boolean
+              properly to render a toggle switch. Switches also support the <code>disabled</code>{' '}
+              attribute.
+            </p>
+            <DocsExample href="forms/checks-radios#switches">
+              <CFormSwitch label="Default switch checkbox input" id="formSwitchCheckDefault" />
+              <CFormSwitch
+                label="Checked switch checkbox input"
+                id="formSwitchCheckChecked"
+                defaultChecked
+              />
+              <CFormSwitch
+                label="Disabled switch checkbox input"
+                id="formSwitchCheckDisabled"
+                disabled
+              />
+              <CFormSwitch
+                label="Disabled checked switch checkbox input"
+                id="formSwitchCheckCheckedDisabled"
+                defaultChecked
+                disabled
+              />
+            </DocsExample>
+          </CCardBody>
+        </CCard>
+      </CCol>
+      <CCol xs={12}>
+        <CCard className="mb-4">
+          <CCardHeader>
+            <strong>React Switches</strong> <small>Sizes</small>
+          </CCardHeader>
+          <CCardBody>
+            <DocsExample href="forms/checks-radios#sizes">
+              <CFormSwitch label="Default switch checkbox input" id="formSwitchCheckDefault" />
+              <CFormSwitch
+                size="lg"
+                label="Large switch checkbox input"
+                id="formSwitchCheckDefaultLg"
+              />
+              <CFormSwitch
+                size="xl"
+                label="Extra large switch checkbox input"
+                id="formSwitchCheckDefaultXL"
+              />
+            </DocsExample>
+          </CCardBody>
+        </CCard>
+      </CCol>
+      <CCol xs={12}>
+        <CCard className="mb-4">
+          <CCardHeader>
+            <strong>React Checks and Radios</strong> <small>Default layout (stacked)</small>
+          </CCardHeader>
+          <CCardBody>
+            <p className="text-body-secondary small">
+              By default, any number of checkboxes and radios that are immediate sibling will be
+              vertically stacked and appropriately spaced.
+            </p>
+            <DocsExample href="forms/checks-radios#default-stacked">
+              <CFormCheck id="defaultCheck1" label="Default checkbox" />
+              <CFormCheck id="defaultCheck2" label="Disabled checkbox" disabled />
+            </DocsExample>
+            <DocsExample href="forms/checks-radios#default-stacked">
+              <CFormCheck
+                type="radio"
+                name="exampleRadios"
+                id="exampleRadios1"
+                value="option1"
+                label="Default radio"
+                defaultChecked
+              />
+              <CFormCheck
+                type="radio"
+                name="exampleRadios"
+                id="exampleRadios2"
+                value="option2"
+                label="Second default radio"
+              />
+              <CFormCheck
+                type="radio"
+                name="exampleRadios"
+                id="exampleRadios3"
+                value="option3"
+                label="Disabled radio"
+                disabled
+              />
+            </DocsExample>
+          </CCardBody>
+        </CCard>
+      </CCol>
+      <CCol xs={12}>
+        <CCard className="mb-4">
+          <CCardHeader>
+            <strong>React Checks and Radios</strong> <small>Inline</small>
+          </CCardHeader>
+          <CCardBody>
+            <p className="text-body-secondary small">
+              Group checkboxes or radios on the same horizontal row by adding <code>inline</code>{' '}
+              boolean property to any <code>&lt;CFormCheck&gt;</code>.
+            </p>
+            <DocsExample href="forms/checks-radios#inline">
+              <CFormCheck inline id="inlineCheckbox1" value="option1" label="1" />
+              <CFormCheck inline id="inlineCheckbox2" value="option2" label="2" />
+              <CFormCheck
+                inline
+                id="inlineCheckbox3"
+                value="option3"
+                label="3 (disabled)"
+                disabled
+              />
+            </DocsExample>
+            <DocsExample href="forms/checks-radios#inline">
+              <CFormCheck
+                inline
+                type="radio"
+                name="inlineRadioOptions"
+                id="inlineCheckbox1"
+                value="option1"
+                label="1"
+              />
+              <CFormCheck
+                inline
+                type="radio"
+                name="inlineRadioOptions"
+                id="inlineCheckbox2"
+                value="option2"
+                label="2"
+              />
+              <CFormCheck
+                inline
+                type="radio"
+                name="inlineRadioOptions"
+                id="inlineCheckbox3"
+                value="option3"
+                label="3 (disabled)"
+                disabled
+              />
+            </DocsExample>
+          </CCardBody>
+        </CCard>
+      </CCol>
+      <CCol xs={12}>
+        <CCard className="mb-4">
+          <CCardHeader>
+            <strong>React Checks and Radios</strong> <small>Without labels</small>
+          </CCardHeader>
+          <CCardBody>
+            <p className="text-body-secondary small">
+              Remember to still provide some form of accessible name for assistive technologies (for
+              instance, using <code>aria-label</code>).
+            </p>
+            <DocsExample href="forms/checks-radios#without-labels">
+              <div>
+                <CFormCheck id="checkboxNoLabel" value="" aria-label="..." />
+              </div>
+              <div>
+                <CFormCheck
+                  type="radio"
+                  name="radioNoLabel"
+                  id="radioNoLabel"
+                  value=""
+                  aria-label="..."
+                />
+              </div>
+            </DocsExample>
+          </CCardBody>
+        </CCard>
+      </CCol>
+      <CCol xs={12}>
+        <CCard className="mb-4">
+          <CCardHeader>
+            <strong>Toggle buttons</strong>
+          </CCardHeader>
+          <CCardBody>
+            <p className="text-body-secondary small">
+              Create button-like checkboxes and radio buttons by using <code>button</code> boolean
+              property on the <code>&lt;CFormCheck&gt;</code> component. These toggle buttons can
+              further be grouped in a button group if needed.
+            </p>
+            <DocsExample href="forms/checks-radios#toggle-buttons">
+              <CFormCheck
+                button={{ color: 'primary ' }}
+                id="btn-check"
+                autoComplete="off"
+                label="Single toggle"
+              />
+            </DocsExample>
+            <DocsExample href="forms/checks-radios#toggle-buttons">
+              <CFormCheck
+                button={{ color: 'primary ' }}
+                id="btn-check-2"
+                autoComplete="off"
+                label="Checked"
+                defaultChecked
+              />
+            </DocsExample>
+            <DocsExample href="forms/checks-radios#toggle-buttons">
+              <CFormCheck
+                button={{ color: 'primary ' }}
+                id="btn-check-3"
+                autoComplete="off"
+                label="Disabled"
+                disabled
+              />
+            </DocsExample>
+            <h3>Radio toggle buttons</h3>
+            <DocsExample href="forms/checks-radios#toggle-buttons">
+              <CFormCheck
+                button={{ color: 'secondary' }}
+                type="radio"
+                name="options"
+                id="option1"
+                autoComplete="off"
+                label="Checked"
+                defaultChecked
+              />
+              <CFormCheck
+                button={{ color: 'secondary' }}
+                type="radio"
+                name="options"
+                id="option2"
+                autoComplete="off"
+                label="Radio"
+              />
+              <CFormCheck
+                button={{ color: 'secondary' }}
+                type="radio"
+                name="options"
+                id="option3"
+                autoComplete="off"
+                label="Radio"
+                disabled
+              />
+              <CFormCheck
+                button={{ color: 'secondary' }}
+                type="radio"
+                name="options"
+                id="option4"
+                autoComplete="off"
+                label="Radio"
+              />
+            </DocsExample>
+            <h3>Outlined styles</h3>
+            <p className="text-body-secondary small">
+              Different variants of button, such at the various outlined styles, are supported.
+            </p>
+            <DocsExample href="forms/checks-radios#toggle-buttons">
+              <div>
+                <CFormCheck
+                  button={{ color: 'primary', variant: 'outline' }}
+                  id="btn-check-outlined"
+                  autoComplete="off"
+                  label="Single toggle"
+                />
+              </div>
+              <div>
+                <CFormCheck
+                  button={{ color: 'secondary', variant: 'outline' }}
+                  id="btn-check-2-outlined"
+                  autoComplete="off"
+                  label="Checked"
+                  defaultChecked
+                />
+              </div>
+              <div>
+                <CFormCheck
+                  button={{ color: 'success', variant: 'outline' }}
+                  type="radio"
+                  name="options-outlined"
+                  id="success-outlined"
+                  autoComplete="off"
+                  label="Radio"
+                  defaultChecked
+                />
+                <CFormCheck
+                  button={{ color: 'danger', variant: 'outline' }}
+                  type="radio"
+                  name="options-outlined"
+                  id="danger-outlined"
+                  autoComplete="off"
+                  label="Radio"
+                />
+              </div>
+            </DocsExample>
+          </CCardBody>
+        </CCard>
+      </CCol>
+    </CRow>
+  )
+}
+
+export default ChecksRadios
Index: PlanningMamagement/frontend/src/views/icons/brands/Brands.js
===================================================================
diff --git a/PlanningMamagement/frontend/src/views/icons/brands/Brands.js b/PlanningMamagement/frontend/src/views/icons/brands/Brands.js
new file mode 100644
--- /dev/null	(date 1728391642275)
+++ b/PlanningMamagement/frontend/src/views/icons/brands/Brands.js	(date 1728391642275)
@@ -0,0 +1,38 @@
+import React from 'react'
+import { CCard, CCardBody, CCardHeader, CCol, CRow } from '@coreui/react'
+import CIcon from '@coreui/icons-react'
+import { brandSet } from '@coreui/icons'
+import { DocsCallout } from 'src/components'
+
+const toKebabCase = (str) => {
+  return str.replace(/([a-z0-9]|(?=[A-Z]))([A-Z])/g, '$1-$2').toLowerCase()
+}
+
+export const getIconsView = (iconset) => {
+  return Object.entries(iconset).map(([name, value]) => (
+    <CCol className="mb-5" xs={6} sm={4} md={3} xl={2} key={name}>
+      <CIcon icon={value} size="xxl" />
+      <div>{toKebabCase(name)}</div>
+    </CCol>
+  ))
+}
+
+const CoreUIIcons = () => {
+  return (
+    <>
+      <DocsCallout
+        name="CoreUI Brand Icons"
+        href="components/chart"
+        content="CoreUI Brand Icons. CoreUI Icons package is delivered with more than 1500 icons in multiple formats SVG, PNG, and Webfonts. CoreUI Icons are beautifully crafted symbols for common actions and items. You can use them in your digital products for web or mobile app."
+      />
+      <CCard className="mb-4">
+        <CCardHeader>Brand Icons</CCardHeader>
+        <CCardBody>
+          <CRow className="text-center">{getIconsView(brandSet)}</CRow>
+        </CCardBody>
+      </CCard>
+    </>
+  )
+}
+
+export default CoreUIIcons
Index: PlanningMamagement/frontend/src/views/icons/flags/Flags.js
===================================================================
diff --git a/PlanningMamagement/frontend/src/views/icons/flags/Flags.js b/PlanningMamagement/frontend/src/views/icons/flags/Flags.js
new file mode 100644
--- /dev/null	(date 1728391642305)
+++ b/PlanningMamagement/frontend/src/views/icons/flags/Flags.js	(date 1728391642305)
@@ -0,0 +1,25 @@
+import React from 'react'
+import { CCard, CCardBody, CCardHeader, CRow } from '@coreui/react'
+import { getIconsView } from '../brands/Brands.js'
+import { flagSet } from '@coreui/icons'
+import { DocsCallout } from 'src/components'
+
+const CoreUIIcons = () => {
+  return (
+    <>
+      <DocsCallout
+        name="CoreUI Flag Icons"
+        href="components/chart"
+        content="CoreUI Flag Icons. CoreUI Icons package is delivered with more than 1500 icons in multiple formats SVG, PNG, and Webfonts. CoreUI Icons are beautifully crafted symbols for common actions and items. You can use them in your digital products for web or mobile app."
+      />
+      <CCard className="mb-4">
+        <CCardHeader>Flag Icons</CCardHeader>
+        <CCardBody>
+          <CRow className="text-center">{getIconsView(flagSet)}</CRow>
+        </CCardBody>
+      </CCard>
+    </>
+  )
+}
+
+export default CoreUIIcons
Index: PlanningMamagement/frontend/src/views/pages/login/Login.js
===================================================================
diff --git a/PlanningMamagement/frontend/src/views/pages/login/Login.js b/PlanningMamagement/frontend/src/views/pages/login/Login.js
new file mode 100644
--- /dev/null	(date 1728393413606)
+++ b/PlanningMamagement/frontend/src/views/pages/login/Login.js	(date 1728393413606)
@@ -0,0 +1,86 @@
+import React from 'react'
+import { Link } from 'react-router-dom'
+import {
+  CButton,
+  CCard,
+  CCardBody,
+  CCardGroup,
+  CCol,
+  CContainer,
+  CForm,
+  CFormInput,
+  CInputGroup,
+  CInputGroupText,
+  CRow,
+} from '@coreui/react'
+import CIcon from '@coreui/icons-react'
+import { cilLockLocked, cilUser } from '@coreui/icons'
+
+const Login = () => {
+  return (
+    <div className="bg-body-tertiary min-vh-100 d-flex flex-row align-items-center">
+      <CContainer>
+        <CRow className="justify-content-center">
+          <CCol md={8}>
+            <CCardGroup>
+              <CCard className="p-4">
+                <CCardBody>
+                  <CForm>
+                    <h1>Inicio de Sesión</h1>
+                    <p className="text-body-secondary">Inicia sesión en tu cuenta</p>
+                    <CInputGroup className="mb-3">
+                      <CInputGroupText>
+                        <CIcon icon={cilUser} />
+                      </CInputGroupText>
+                      <CFormInput placeholder="Usuario" autoComplete="username" />
+                    </CInputGroup>
+                    <CInputGroup className="mb-4">
+                      <CInputGroupText>
+                        <CIcon icon={cilLockLocked} />
+                      </CInputGroupText>
+                      <CFormInput
+                        type="password"
+                        placeholder="Contraseña"
+                        autoComplete="current-password"
+                      />
+                    </CInputGroup>
+                    <CRow>
+                      <CCol xs={6}>
+                        <CButton color="primary" className="px-4">
+                          Ingresar
+                        </CButton>
+                      </CCol>
+                      <CCol xs={6} className="text-right">
+                        <CButton color="link" className="px-0">
+                          Forgot password?
+                        </CButton>
+                      </CCol>
+                    </CRow>
+                  </CForm>
+                </CCardBody>
+              </CCard>
+              <CCard className="text-white bg-primary py-5" style={{ width: '44%' }}>
+                <CCardBody className="text-center">
+                  <div>
+                    <h2>Sign up</h2>
+                    <p>
+                      Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod
+                      tempor incididunt ut labore et dolore magna aliqua.
+                    </p>
+                    <Link to="/register">
+                      <CButton color="primary" className="mt-3" active tabIndex={-1}>
+                        Register Now!
+                      </CButton>
+                    </Link>
+                  </div>
+                </CCardBody>
+              </CCard>
+            </CCardGroup>
+          </CCol>
+        </CRow>
+      </CContainer>
+    </div>
+  )
+}
+
+export default Login
Index: PlanningMamagement/frontend/src/views/icons/coreui-icons/CoreUIIcons.js
===================================================================
diff --git a/PlanningMamagement/frontend/src/views/icons/coreui-icons/CoreUIIcons.js b/PlanningMamagement/frontend/src/views/icons/coreui-icons/CoreUIIcons.js
new file mode 100644
--- /dev/null	(date 1728391642289)
+++ b/PlanningMamagement/frontend/src/views/icons/coreui-icons/CoreUIIcons.js	(date 1728391642289)
@@ -0,0 +1,25 @@
+import React from 'react'
+import { CCard, CCardBody, CCardHeader, CRow } from '@coreui/react'
+import { freeSet } from '@coreui/icons'
+import { getIconsView } from '../brands/Brands.js'
+import { DocsCallout } from 'src/components'
+
+const CoreUIIcons = () => {
+  return (
+    <>
+      <DocsCallout
+        name="CoreUI Icons"
+        href="components/chart"
+        content="CoreUI Icons. CoreUI Icons package is delivered with more than 1500 icons in multiple formats SVG, PNG, and Webfonts. CoreUI Icons are beautifully crafted symbols for common actions and items. You can use them in your digital products for web or mobile app."
+      />
+      <CCard className="mb-4">
+        <CCardHeader>Free Icons</CCardHeader>
+        <CCardBody>
+          <CRow className="text-center">{getIconsView(freeSet)}</CRow>
+        </CCardBody>
+      </CCard>
+    </>
+  )
+}
+
+export default CoreUIIcons
Index: PlanningMamagement/frontend/src/views/pages/page500/Page500.js
===================================================================
diff --git a/PlanningMamagement/frontend/src/views/pages/page500/Page500.js b/PlanningMamagement/frontend/src/views/pages/page500/Page500.js
new file mode 100644
--- /dev/null	(date 1728391642432)
+++ b/PlanningMamagement/frontend/src/views/pages/page500/Page500.js	(date 1728391642432)
@@ -0,0 +1,41 @@
+import React from 'react'
+import {
+  CButton,
+  CCol,
+  CContainer,
+  CFormInput,
+  CInputGroup,
+  CInputGroupText,
+  CRow,
+} from '@coreui/react'
+import CIcon from '@coreui/icons-react'
+import { cilMagnifyingGlass } from '@coreui/icons'
+
+const Page500 = () => {
+  return (
+    <div className="bg-body-tertiary min-vh-100 d-flex flex-row align-items-center">
+      <CContainer>
+        <CRow className="justify-content-center">
+          <CCol md={6}>
+            <span className="clearfix">
+              <h1 className="float-start display-3 me-4">500</h1>
+              <h4 className="pt-3">Houston, we have a problem!</h4>
+              <p className="text-body-secondary float-start">
+                The page you are looking for is temporarily unavailable.
+              </p>
+            </span>
+            <CInputGroup className="input-prepend">
+              <CInputGroupText>
+                <CIcon icon={cilMagnifyingGlass} />
+              </CInputGroupText>
+              <CFormInput type="text" placeholder="What are you looking for?" />
+              <CButton color="info">Search</CButton>
+            </CInputGroup>
+          </CCol>
+        </CRow>
+      </CContainer>
+    </div>
+  )
+}
+
+export default Page500
Index: PlanningMamagement/frontend/src/views/pages/page404/Page404.js
===================================================================
diff --git a/PlanningMamagement/frontend/src/views/pages/page404/Page404.js b/PlanningMamagement/frontend/src/views/pages/page404/Page404.js
new file mode 100644
--- /dev/null	(date 1728391642415)
+++ b/PlanningMamagement/frontend/src/views/pages/page404/Page404.js	(date 1728391642415)
@@ -0,0 +1,41 @@
+import React from 'react'
+import {
+  CButton,
+  CCol,
+  CContainer,
+  CFormInput,
+  CInputGroup,
+  CInputGroupText,
+  CRow,
+} from '@coreui/react'
+import CIcon from '@coreui/icons-react'
+import { cilMagnifyingGlass } from '@coreui/icons'
+
+const Page404 = () => {
+  return (
+    <div className="bg-body-tertiary min-vh-100 d-flex flex-row align-items-center">
+      <CContainer>
+        <CRow className="justify-content-center">
+          <CCol md={6}>
+            <div className="clearfix">
+              <h1 className="float-start display-3 me-4">404</h1>
+              <h4 className="pt-3">Oops! You{"'"}re lost.</h4>
+              <p className="text-body-secondary float-start">
+                The page you are looking for was not found.
+              </p>
+            </div>
+            <CInputGroup className="input-prepend">
+              <CInputGroupText>
+                <CIcon icon={cilMagnifyingGlass} />
+              </CInputGroupText>
+              <CFormInput type="text" placeholder="What are you looking for?" />
+              <CButton color="info">Search</CButton>
+            </CInputGroup>
+          </CCol>
+        </CRow>
+      </CContainer>
+    </div>
+  )
+}
+
+export default Page404
Index: PlanningMamagement/frontend/src/views/theme/colors/Colors.js
===================================================================
diff --git a/PlanningMamagement/frontend/src/views/theme/colors/Colors.js b/PlanningMamagement/frontend/src/views/theme/colors/Colors.js
new file mode 100644
--- /dev/null	(date 1728391642464)
+++ b/PlanningMamagement/frontend/src/views/theme/colors/Colors.js	(date 1728391642464)
@@ -0,0 +1,91 @@
+import React, { useEffect, useState, createRef } from 'react'
+import PropTypes from 'prop-types'
+import classNames from 'classnames'
+import { CRow, CCol, CCard, CCardHeader, CCardBody } from '@coreui/react'
+import { rgbToHex } from '@coreui/utils'
+import { DocsLink } from 'src/components'
+
+const ThemeView = () => {
+  const [color, setColor] = useState('rgb(255, 255, 255)')
+  const ref = createRef()
+
+  useEffect(() => {
+    const el = ref.current.parentNode.firstChild
+    const varColor = window.getComputedStyle(el).getPropertyValue('background-color')
+    setColor(varColor)
+  }, [ref])
+
+  return (
+    <table className="table w-100" ref={ref}>
+      <tbody>
+        <tr>
+          <td className="text-body-secondary">HEX:</td>
+          <td className="font-weight-bold">{rgbToHex(color)}</td>
+        </tr>
+        <tr>
+          <td className="text-body-secondary">RGB:</td>
+          <td className="font-weight-bold">{color}</td>
+        </tr>
+      </tbody>
+    </table>
+  )
+}
+
+const ThemeColor = ({ className, children }) => {
+  const classes = classNames(className, 'theme-color w-75 rounded mb-3')
+  return (
+    <CCol xs={12} sm={6} md={4} xl={2} className="mb-4">
+      <div className={classes} style={{ paddingTop: '75%' }}></div>
+      {children}
+      <ThemeView />
+    </CCol>
+  )
+}
+
+ThemeColor.propTypes = {
+  children: PropTypes.node,
+  className: PropTypes.string,
+}
+
+const Colors = () => {
+  return (
+    <>
+      <CCard className="mb-4">
+        <CCardHeader>
+          Theme colors
+          <DocsLink href="https://coreui.io/docs/utilities/colors/" />
+        </CCardHeader>
+        <CCardBody>
+          <CRow>
+            <ThemeColor className="bg-primary">
+              <h6>Brand Primary Color</h6>
+            </ThemeColor>
+            <ThemeColor className="bg-secondary">
+              <h6>Brand Secondary Color</h6>
+            </ThemeColor>
+            <ThemeColor className="bg-success">
+              <h6>Brand Success Color</h6>
+            </ThemeColor>
+            <ThemeColor className="bg-danger">
+              <h6>Brand Danger Color</h6>
+            </ThemeColor>
+            <ThemeColor className="bg-warning">
+              <h6>Brand Warning Color</h6>
+            </ThemeColor>
+            <ThemeColor className="bg-info">
+              <h6>Brand Info Color</h6>
+            </ThemeColor>
+            <ThemeColor className="bg-light">
+              <h6>Brand Light Color</h6>
+            </ThemeColor>
+            <ThemeColor className="bg-dark">
+              <h6>Brand Dark Color</h6>
+            </ThemeColor>
+          </CRow>
+        </CCardBody>
+      </CCard>
+    </>
+  )
+}
+
+export default Colors
Index: PlanningMamagement/frontend/src/views/pages/register/Register.js
===================================================================
diff --git a/PlanningMamagement/frontend/src/views/pages/register/Register.js b/PlanningMamagement/frontend/src/views/pages/register/Register.js
new file mode 100644
--- /dev/null	(date 1728393551449)
+++ b/PlanningMamagement/frontend/src/views/pages/register/Register.js	(date 1728393551449)
@@ -0,0 +1,71 @@
+import React from 'react'
+import {
+  CButton,
+  CCard,
+  CCardBody,
+  CCol,
+  CContainer,
+  CForm,
+  CFormInput,
+  CInputGroup,
+  CInputGroupText,
+  CRow,
+} from '@coreui/react'
+import CIcon from '@coreui/icons-react'
+import { cilLockLocked, cilUser } from '@coreui/icons'
+
+const Register = () => {
+  return (
+    <div className="bg-body-tertiary min-vh-100 d-flex flex-row align-items-center">
+      <CContainer>
+        <CRow className="justify-content-center">
+          <CCol md={9} lg={7} xl={6}>
+            <CCard className="mx-4">
+              <CCardBody className="p-4">
+                <CForm>
+                  <h1>Registro</h1>
+                  <p className="text-body-secondary">Crea tu cuenta</p>
+                  <CInputGroup className="mb-3">
+                    <CInputGroupText>
+                      <CIcon icon={cilUser} />
+                    </CInputGroupText>
+                    <CFormInput placeholder="Usuario" autoComplete="username" />
+                  </CInputGroup>
+                  <CInputGroup className="mb-3">
+                    <CInputGroupText>@</CInputGroupText>
+                    <CFormInput placeholder="Email" autoComplete="email" />
+                  </CInputGroup>
+                  <CInputGroup className="mb-3">
+                    <CInputGroupText>
+                      <CIcon icon={cilLockLocked} />
+                    </CInputGroupText>
+                    <CFormInput
+                      type="password"
+                      placeholder="Contraseña"
+                      autoComplete="new-password"
+                    />
+                  </CInputGroup>
+                  <CInputGroup className="mb-4">
+                    <CInputGroupText>
+                      <CIcon icon={cilLockLocked} />
+                    </CInputGroupText>
+                    <CFormInput
+                      type="password"
+                      placeholder="Repite la Contraseña"
+                      autoComplete="new-password"
+                    />
+                  </CInputGroup>
+                  <div className="d-grid">
+                    <CButton color="success">Crear cuenta</CButton>
+                  </div>
+                </CForm>
+              </CCardBody>
+            </CCard>
+          </CCol>
+        </CRow>
+      </CContainer>
+    </div>
+  )
+}
+
+export default Register
Index: PlanningMamagement/frontend/src/views/buttons/buttons/Buttons.js
===================================================================
diff --git a/PlanningMamagement/frontend/src/views/buttons/buttons/Buttons.js b/PlanningMamagement/frontend/src/views/buttons/buttons/Buttons.js
new file mode 100644
--- /dev/null	(date 1728391642062)
+++ b/PlanningMamagement/frontend/src/views/buttons/buttons/Buttons.js	(date 1728391642062)
@@ -0,0 +1,401 @@
+import React from 'react'
+import { CButton, CCard, CCardBody, CCardHeader, CCol, CRow } from '@coreui/react'
+import CIcon from '@coreui/icons-react'
+import { cilBell } from '@coreui/icons'
+import { DocsExample } from 'src/components'
+
+const Buttons = () => {
+  return (
+    <CRow>
+      <CCol xs={12}>
+        <CCard className="mb-4">
+          <CCardHeader>
+            <strong>React Button</strong>
+          </CCardHeader>
+          <CCardBody>
+            <p className="text-body-secondary small">
+              CoreUI includes a bunch of predefined buttons components, each serving its own
+              semantic purpose. Buttons show what action will happen when the user clicks or touches
+              it. CoreUI buttons are used to initialize operations, both in the background or
+              foreground of an experience.
+            </p>
+            <DocsExample href="components/buttons">
+              {['normal', 'active', 'disabled'].map((state, index) => (
+                <CRow className="align-items-center mb-3" key={index}>
+                  <CCol xs={12} xl={2} className="mb-3 mb-xl-0">
+                    {state.charAt(0).toUpperCase() + state.slice(1)}
+                  </CCol>
+                  <CCol xs>
+                    {[
+                      'primary',
+                      'secondary',
+                      'success',
+                      'danger',
+                      'warning',
+                      'info',
+                      'light',
+                      'dark',
+                    ].map((color, index) => (
+                      <CButton
+                        color={color}
+                        key={index}
+                        active={state === 'active'}
+                        disabled={state === 'disabled'}
+                      >
+                        {color.charAt(0).toUpperCase() + color.slice(1)}
+                      </CButton>
+                    ))}
+                    <CButton color="link">Link</CButton>
+                  </CCol>
+                </CRow>
+              ))}
+            </DocsExample>
+          </CCardBody>
+        </CCard>
+      </CCol>
+      <CCol xs={12}>
+        <CCard className="mb-4">
+          <CCardHeader>
+            <strong>React Button</strong> <small>with icons</small>
+          </CCardHeader>
+          <CCardBody>
+            <p className="text-body-secondary small">
+              You can combine button with our <a href="https://coreui.io/icons/">CoreUI Icons</a>.
+            </p>
+            <DocsExample href="components/buttons">
+              {['normal', 'active', 'disabled'].map((state, index) => (
+                <CRow className="align-items-center mb-3" key={index}>
+                  <CCol xs={12} xl={2} className="mb-3 mb-xl-0">
+                    {state.charAt(0).toUpperCase() + state.slice(1)}
+                  </CCol>
+                  <CCol xs>
+                    {[
+                      'primary',
+                      'secondary',
+                      'success',
+                      'danger',
+                      'warning',
+                      'info',
+                      'light',
+                      'dark',
+                    ].map((color, index) => (
+                      <CButton
+                        color={color}
+                        key={index}
+                        active={state === 'active'}
+                        disabled={state === 'disabled'}
+                      >
+                        <CIcon icon={cilBell} className="me-2" />
+                        {color.charAt(0).toUpperCase() + color.slice(1)}
+                      </CButton>
+                    ))}
+                    <CButton color="link">
+                      <CIcon icon={cilBell} className="me-2" />
+                      Link
+                    </CButton>
+                  </CCol>
+                </CRow>
+              ))}
+            </DocsExample>
+          </CCardBody>
+        </CCard>
+      </CCol>
+      <CCol xs={12}>
+        <CCard className="mb-4">
+          <CCardHeader>
+            <strong>React Button</strong> <small>Button components</small>
+          </CCardHeader>
+          <CCardBody>
+            <p className="text-body-secondary small">
+              The <code>&lt;CButton&gt;</code> component are designed for{' '}
+              <code>&lt;button&gt;</code> , <code>&lt;a&gt;</code> or <code>&lt;input&gt;</code>{' '}
+              elements (though some browsers may apply a slightly different rendering).
+            </p>
+            <p className="text-body-secondary small">
+              If you&#39;re using <code>&lt;CButton&gt;</code> component as <code>&lt;a&gt;</code>{' '}
+              elements that are used to trigger functionality ex. collapsing content, these links
+              should be given a <code>role=&#34;button&#34;</code> to adequately communicate their
+              meaning to assistive technologies such as screen readers.
+            </p>
+            <DocsExample href="components/buttons#button-components">
+              <CButton as="a" color="primary" href="#" role="button">
+                Link
+              </CButton>
+              <CButton type="submit" color="primary">
+                Button
+              </CButton>
+              <CButton as="input" type="button" color="primary" value="Input" />
+              <CButton as="input" type="submit" color="primary" value="Submit" />
+              <CButton as="input" type="reset" color="primary" value="Reset" />
+            </DocsExample>
+          </CCardBody>
+        </CCard>
+      </CCol>
+      <CCol xs={12}>
+        <CCard className="mb-4">
+          <CCardHeader>
+            <strong>React Button</strong> <small>outline</small>
+          </CCardHeader>
+          <CCardBody>
+            <p className="text-body-secondary small">
+              If you need a button, but without the strong background colors. Set{' '}
+              <code>variant=&#34;outline&#34;</code> prop to remove all background colors.
+            </p>
+            <DocsExample href="components/buttons#outline-buttons">
+              {['normal', 'active', 'disabled'].map((state, index) => (
+                <CRow className="align-items-center mb-3" key={index}>
+                  <CCol xs={12} xl={2} className="mb-3 mb-xl-0">
+                    {state.charAt(0).toUpperCase() + state.slice(1)}
+                  </CCol>
+                  <CCol xs>
+                    {[
+                      'primary',
+                      'secondary',
+                      'success',
+                      'danger',
+                      'warning',
+                      'info',
+                      'light',
+                      'dark',
+                    ].map((color, index) => (
+                      <CButton
+                        color={color}
+                        variant="outline"
+                        key={index}
+                        active={state === 'active'}
+                        disabled={state === 'disabled'}
+                      >
+                        {color.charAt(0).toUpperCase() + color.slice(1)}
+                      </CButton>
+                    ))}
+                  </CCol>
+                </CRow>
+              ))}
+            </DocsExample>
+          </CCardBody>
+        </CCard>
+      </CCol>
+      <CCol xs={12}>
+        <CCard className="mb-4">
+          <CCardHeader>
+            <strong>React Button</strong> <small>ghost</small>
+          </CCardHeader>
+          <CCardBody>
+            <p className="text-body-secondary small">
+              If you need a ghost variant of button, set <code>variant=&#34;ghost&#34;</code> prop
+              to remove all background colors.
+            </p>
+            <DocsExample href="components/buttons#ghost-buttons">
+              {['normal', 'active', 'disabled'].map((state, index) => (
+                <CRow className="align-items-center mb-3" key={index}>
+                  <CCol xs={12} xl={2} className="mb-3 mb-xl-0">
+                    {state.charAt(0).toUpperCase() + state.slice(1)}
+                  </CCol>
+                  <CCol xs>
+                    {[
+                      'primary',
+                      'secondary',
+                      'success',
+                      'danger',
+                      'warning',
+                      'info',
+                      'light',
+                      'dark',
+                    ].map((color, index) => (
+                      <CButton
+                        color={color}
+                        variant="ghost"
+                        key={index}
+                        active={state === 'active'}
+                        disabled={state === 'disabled'}
+                      >
+                        {color.charAt(0).toUpperCase() + color.slice(1)}
+                      </CButton>
+                    ))}
+                  </CCol>
+                </CRow>
+              ))}
+            </DocsExample>
+          </CCardBody>
+        </CCard>
+      </CCol>
+      <CCol xs={12}>
+        <CCard className="mb-4">
+          <CCardHeader>
+            <strong>React Button</strong> <small>Sizes</small>
+          </CCardHeader>
+          <CCardBody>
+            <p className="text-body-secondary small">
+              Larger or smaller buttons? Add <code>size=&#34;lg&#34;</code> or{' '}
+              <code>size=&#34;sm&#34;</code> for additional sizes.
+            </p>
+            <DocsExample href="components/buttons#sizes">
+              <CButton color="primary" size="lg">
+                Large button
+              </CButton>
+              <CButton color="secondary" size="lg">
+                Large button
+              </CButton>
+            </DocsExample>
+            <DocsExample href="components/buttons#sizes">
+              <CButton color="primary" size="sm">
+                Small button
+              </CButton>
+              <CButton color="secondary" size="sm">
+                Small button
+              </CButton>
+            </DocsExample>
+          </CCardBody>
+        </CCard>
+      </CCol>
+      <CCol xs={12}>
+        <CCard className="mb-4">
+          <CCardHeader>
+            <strong>React Button</strong> <small>Pill</small>
+          </CCardHeader>
+          <CCardBody>
+            <DocsExample href="components/buttons#pill-buttons">
+              {[
+                'primary',
+                'secondary',
+                'success',
+                'danger',
+                'warning',
+                'info',
+                'light',
+                'dark',
+              ].map((color, index) => (
+                <CButton color={color} shape="rounded-pill" key={index}>
+                  {color.charAt(0).toUpperCase() + color.slice(1)}
+                </CButton>
+              ))}
+            </DocsExample>
+          </CCardBody>
+        </CCard>
+      </CCol>
+      <CCol xs={12}>
+        <CCard className="mb-4">
+          <CCardHeader>
+            <strong>React Button</strong> <small>Square</small>
+          </CCardHeader>
+          <CCardBody>
+            <DocsExample href="components/buttons#square">
+              {[
+                'primary',
+                'secondary',
+                'success',
+                'danger',
+                'warning',
+                'info',
+                'light',
+                'dark',
+              ].map((color, index) => (
+                <CButton color={color} shape="rounded-0" key={index}>
+                  {color.charAt(0).toUpperCase() + color.slice(1)}
+                </CButton>
+              ))}
+            </DocsExample>
+          </CCardBody>
+        </CCard>
+      </CCol>
+      <CCol xs={12}>
+        <CCard className="mb-4">
+          <CCardHeader>
+            <strong>React Button</strong> <small>Disabled state</small>
+          </CCardHeader>
+          <CCardBody>
+            <p className="text-body-secondary small">
+              Add the <code>disabled</code> boolean prop to any <code>&lt;CButton&gt;</code>{' '}
+              component to make buttons look inactive. Disabled button has{' '}
+              <code>pointer-events: none</code> applied to, disabling hover and active states from
+              triggering.
+            </p>
+            <DocsExample href="components/buttons#disabled-state">
+              <CButton color="primary" size="lg" disabled>
+                Primary button
+              </CButton>
+              <CButton color="secondary" size="lg" disabled>
+                Button
+              </CButton>
+            </DocsExample>
+            <p className="text-body-secondary small">
+              Disabled buttons using the <code>&lt;a&gt;</code> component act a little different:
+            </p>
+            <p className="text-body-secondary small">
+              <code>&lt;a&gt;</code>s don&#39;tsupport the <code>disabled</code> attribute, so
+              CoreUI has to add <code>.disabled</code> className to make buttons look inactive.
+              CoreUI also has to add to the disabled button component{' '}
+              <code>aria-disabled=&#34;true&#34;</code> attribute to show the state of the component
+              to assistive technologies.
+            </p>
+            <DocsExample href="components/buttons#disabled-state">
+              <CButton as="a" href="#" color="primary" size="lg" disabled>
+                Primary link
+              </CButton>
+              <CButton as="a" href="#" color="secondary" size="lg" disabled>
+                Link
+              </CButton>
+            </DocsExample>
+          </CCardBody>
+        </CCard>
+      </CCol>
+      <CCol xs={12}>
+        <CCard className="mb-4">
+          <CCardHeader>
+            <strong>React Button</strong> <small>Block buttons</small>
+          </CCardHeader>
+          <CCardBody>
+            <p className="text-body-secondary small">
+              Create buttons that span the full width of a parent—by using utilities.
+            </p>
+            <DocsExample href="components/buttons#block-buttons">
+              <div className="d-grid gap-2">
+                <CButton color="primary">Button</CButton>
+                <CButton color="primary">Button</CButton>
+              </div>
+            </DocsExample>
+            <p className="text-body-secondary small">
+              Here we create a responsive variation, starting with vertically stacked buttons until
+              the <code>md</code> breakpoint, where <code>.d-md-block</code> replaces the{' '}
+              <code>.d-grid</code> class, thus nullifying the <code>gap-2</code> utility. Resize
+              your browser to see them change.
+            </p>
+            <DocsExample href="components/buttons#block-buttons">
+              <div className="d-grid gap-2 d-md-block">
+                <CButton color="primary">Button</CButton>
+                <CButton color="primary">Button</CButton>
+              </div>
+            </DocsExample>
+            <p className="text-body-secondary small">
+              You can adjust the width of your block buttons with grid column width classes. For
+              example, for a half-width &#34;block button&#34;, use <code>.col-6</code>. Center it
+              horizontally with <code>.mx-auto</code>, too.
+            </p>
+            <DocsExample href="components/buttons#block-buttons">
+              <div className="d-grid gap-2 col-6 mx-auto">
+                <CButton color="primary">Button</CButton>
+                <CButton color="primary">Button</CButton>
+              </div>
+            </DocsExample>
+            <p className="text-body-secondary small">
+              Additional utilities can be used to adjust the alignment of buttons when horizontal.
+              Here we&#39;ve taken our previous responsive example and added some flex utilities and
+              a margin utility on the button to right align the buttons when they&#39;re no longer
+              stacked.
+            </p>
+            <DocsExample href="components/buttons#block-buttons">
+              <div className="d-grid gap-2 d-md-flex justify-content-md-end">
+                <CButton color="primary" className="me-md-2">
+                  Button
+                </CButton>
+                <CButton color="primary">Button</CButton>
+              </div>
+            </DocsExample>
+          </CCardBody>
+        </CCard>
+      </CCol>
+    </CRow>
+  )
+}
+
+export default Buttons
Index: PlanningMamagement/frontend/src/views/theme/typography/Typography.js
===================================================================
diff --git a/PlanningMamagement/frontend/src/views/theme/typography/Typography.js b/PlanningMamagement/frontend/src/views/theme/typography/Typography.js
new file mode 100644
--- /dev/null	(date 1728391642480)
+++ b/PlanningMamagement/frontend/src/views/theme/typography/Typography.js	(date 1728391642480)
@@ -0,0 +1,229 @@
+import React from 'react'
+import { CCard, CCardHeader, CCardBody } from '@coreui/react'
+import { DocsLink } from 'src/components'
+
+const Typography = () => {
+  return (
+    <>
+      <CCard className="mb-4">
+        <CCardHeader>
+          Headings
+          <DocsLink href="https://coreui.io/docs/content/typography/" />
+        </CCardHeader>
+        <CCardBody>
+          <p>
+            Documentation and examples for Bootstrap typography, including global settings,
+            headings, body text, lists, and more.
+          </p>
+          <table className="table">
+            <thead>
+              <tr>
+                <th>Heading</th>
+                <th>Example</th>
+              </tr>
+            </thead>
+            <tbody>
+              <tr>
+                <td>
+                  <p>
+                    <code className="highlighter-rouge">&lt;h1&gt;&lt;/h1&gt;</code>
+                  </p>
+                </td>
+                <td>
+                  <span className="h1">h1. Bootstrap heading</span>
+                </td>
+              </tr>
+              <tr>
+                <td>
+                  <p>
+                    <code className="highlighter-rouge">&lt;h2&gt;&lt;/h2&gt;</code>
+                  </p>
+                </td>
+                <td>
+                  <span className="h2">h2. Bootstrap heading</span>
+                </td>
+              </tr>
+              <tr>
+                <td>
+                  <p>
+                    <code className="highlighter-rouge">&lt;h3&gt;&lt;/h3&gt;</code>
+                  </p>
+                </td>
+                <td>
+                  <span className="h3">h3. Bootstrap heading</span>
+                </td>
+              </tr>
+              <tr>
+                <td>
+                  <p>
+                    <code className="highlighter-rouge">&lt;h4&gt;&lt;/h4&gt;</code>
+                  </p>
+                </td>
+                <td>
+                  <span className="h4">h4. Bootstrap heading</span>
+                </td>
+              </tr>
+              <tr>
+                <td>
+                  <p>
+                    <code className="highlighter-rouge">&lt;h5&gt;&lt;/h5&gt;</code>
+                  </p>
+                </td>
+                <td>
+                  <span className="h5">h5. Bootstrap heading</span>
+                </td>
+              </tr>
+              <tr>
+                <td>
+                  <p>
+                    <code className="highlighter-rouge">&lt;h6&gt;&lt;/h6&gt;</code>
+                  </p>
+                </td>
+                <td>
+                  <span className="h6">h6. Bootstrap heading</span>
+                </td>
+              </tr>
+            </tbody>
+          </table>
+        </CCardBody>
+      </CCard>
+      <CCard className="mb-4">
+        <CCardHeader>Headings</CCardHeader>
+        <CCardBody>
+          <p>
+            <code className="highlighter-rouge">.h1</code> through
+            <code className="highlighter-rouge">.h6</code>
+            classes are also available, for when you want to match the font styling of a heading but
+            cannot use the associated HTML element.
+          </p>
+          <div className="bd-example">
+            <p className="h1">h1. Bootstrap heading</p>
+            <p className="h2">h2. Bootstrap heading</p>
+            <p className="h3">h3. Bootstrap heading</p>
+            <p className="h4">h4. Bootstrap heading</p>
+            <p className="h5">h5. Bootstrap heading</p>
+            <p className="h6">h6. Bootstrap heading</p>
+          </div>
+        </CCardBody>
+      </CCard>
+      <CCard className="mb-4">
+        <div className="card-header">Display headings</div>
+        <div className="card-body">
+          <p>
+            Traditional heading elements are designed to work best in the meat of your page content.
+            When you need a heading to stand out, consider using a <strong>display heading</strong>
+            —a larger, slightly more opinionated heading style.
+          </p>
+          <div className="bd-example bd-example-type">
+            <table className="table">
+              <tbody>
+                <tr>
+                  <td>
+                    <span className="display-1">Display 1</span>
+                  </td>
+                </tr>
+                <tr>
+                  <td>
+                    <span className="display-2">Display 2</span>
+                  </td>
+                </tr>
+                <tr>
+                  <td>
+                    <span className="display-3">Display 3</span>
+                  </td>
+                </tr>
+                <tr>
+                  <td>
+                    <span className="display-4">Display 4</span>
+                  </td>
+                </tr>
+              </tbody>
+            </table>
+          </div>
+        </div>
+      </CCard>
+      <CCard className="mb-4">
+        <CCardHeader>Inline text elements</CCardHeader>
+        <CCardBody>
+          <p>
+            Traditional heading elements are designed to work best in the meat of your page content.
+            When you need a heading to stand out, consider using a <strong>display heading</strong>
+            —a larger, slightly more opinionated heading style.
+          </p>
+          <div className="bd-example">
+            <p>
+              You can use the mark tag to <mark>highlight</mark> text.
+            </p>
+            <p>
+              <del>This line of text is meant to be treated as deleted text.</del>
+            </p>
+            <p>
+              <s>This line of text is meant to be treated as no longer accurate.</s>
+            </p>
+            <p>
+              <ins>This line of text is meant to be treated as an addition to the document.</ins>
+            </p>
+            <p>
+              <u>This line of text will render as underlined</u>
+            </p>
+            <p>
+              <small>This line of text is meant to be treated as fine print.</small>
+            </p>
+            <p>
+              <strong>This line rendered as bold text.</strong>
+            </p>
+            <p>
+              <em>This line rendered as italicized text.</em>
+            </p>
+          </div>
+        </CCardBody>
+      </CCard>
+      <CCard className="mb-4">
+        <CCardHeader>Description list alignment</CCardHeader>
+        <CCardBody>
+          <p>
+            Align terms and descriptions horizontally by using our grid system’s predefined classes
+            (or semantic mixins). For longer terms, you can optionally add a{' '}
+            <code className="highlighter-rouge">.text-truncate</code> class to truncate the text
+            with an ellipsis.
+          </p>
+          <div className="bd-example">
+            <dl className="row">
+              <dt className="col-sm-3">Description lists</dt>
+              <dd className="col-sm-9">A description list is perfect for defining terms.</dd>
+
+              <dt className="col-sm-3">Euismod</dt>
+              <dd className="col-sm-9">
+                <p>
+                  Vestibulum id ligula porta felis euismod semper eget lacinia odio sem nec elit.
+                </p>
+                <p>Donec id elit non mi porta gravida at eget metus.</p>
+              </dd>
+
+              <dt className="col-sm-3">Malesuada porta</dt>
+              <dd className="col-sm-9">Etiam porta sem malesuada magna mollis euismod.</dd>
+
+              <dt className="col-sm-3 text-truncate">Truncated term is truncated</dt>
+              <dd className="col-sm-9">
+                Fusce dapibus, tellus ac cursus commodo, tortor mauris condimentum nibh, ut
+                fermentum massa justo sit amet risus.
+              </dd>
+
+              <dt className="col-sm-3">Nesting</dt>
+              <dd className="col-sm-9">
+                <dl className="row">
+                  <dt className="col-sm-4">Nested definition list</dt>
+                  <dd className="col-sm-8">
+                    Aenean posuere, tortor sed cursus feugiat, nunc augue blandit nunc.
+                  </dd>
+                </dl>
+              </dd>
+            </dl>
+          </div>
+        </CCardBody>
+      </CCard>
+    </>
+  )
+}
+
+export default Typography
Index: PlanningMamagement/frontend/src/views/buttons/button-groups/ButtonGroups.js
===================================================================
diff --git a/PlanningMamagement/frontend/src/views/buttons/button-groups/ButtonGroups.js b/PlanningMamagement/frontend/src/views/buttons/button-groups/ButtonGroups.js
new file mode 100644
--- /dev/null	(date 1728391642046)
+++ b/PlanningMamagement/frontend/src/views/buttons/button-groups/ButtonGroups.js	(date 1728391642046)
@@ -0,0 +1,439 @@
+import React from 'react'
+import {
+  CButton,
+  CDropdown,
+  CDropdownDivider,
+  CDropdownItem,
+  CDropdownMenu,
+  CDropdownToggle,
+  CButtonGroup,
+  CButtonToolbar,
+  CCard,
+  CCardBody,
+  CCardHeader,
+  CCol,
+  CFormCheck,
+  CFormInput,
+  CInputGroup,
+  CInputGroupText,
+  CRow,
+} from '@coreui/react'
+import { DocsExample } from 'src/components'
+
+const ButtonGroups = () => {
+  return (
+    <CRow>
+      <CCol xs={12}>
+        <CCard className="mb-4">
+          <CCardHeader>
+            <strong>React Button Group</strong> <span>Basic example</span>
+          </CCardHeader>
+          <CCardBody>
+            <p>
+              Wrap a series of <code>&lt;CButton&gt;</code> components in{' '}
+              <code>&lt;CButtonGroup&gt;</code>.{' '}
+            </p>
+            <DocsExample href="components/button-group">
+              <CButtonGroup role="group" aria-label="Basic example">
+                <CButton color="primary">Left</CButton>
+                <CButton color="primary">Middle</CButton>
+                <CButton color="primary">Right</CButton>
+              </CButtonGroup>
+            </DocsExample>
+            <p>
+              These classes can also be added to groups of links, as an alternative to the{' '}
+              <code>&lt;CNav&gt;</code> components.
+            </p>
+            <DocsExample href="components/button-group">
+              <CButtonGroup>
+                <CButton href="#" color="primary" active>
+                  Active link
+                </CButton>
+                <CButton href="#" color="primary">
+                  Link
+                </CButton>
+                <CButton href="#" color="primary">
+                  Link
+                </CButton>
+              </CButtonGroup>
+            </DocsExample>
+          </CCardBody>
+        </CCard>
+      </CCol>
+      <CCol xs={12}>
+        <CCard className="mb-4">
+          <CCardHeader>
+            <strong>React Button Group</strong> <span>Mixed styles</span>
+          </CCardHeader>
+          <CCardBody>
+            <DocsExample href="components/button-group#mixed-styles">
+              <CButtonGroup role="group" aria-label="Basic mixed styles example">
+                <CButton color="danger">Left</CButton>
+                <CButton color="warning">Middle</CButton>
+                <CButton color="success">Right</CButton>
+              </CButtonGroup>
+            </DocsExample>
+          </CCardBody>
+        </CCard>
+      </CCol>
+      <CCol xs={12}>
+        <CCard className="mb-4">
+          <CCardHeader>
+            <strong>React Button Group</strong> <span>Outlined styles</span>
+          </CCardHeader>
+          <CCardBody>
+            <DocsExample href="components/button-group#outlined-styles">
+              <CButtonGroup role="group" aria-label="Basic outlined example">
+                <CButton color="primary" variant="outline">
+                  Left
+                </CButton>
+                <CButton color="primary" variant="outline">
+                  Middle
+                </CButton>
+                <CButton color="primary" variant="outline">
+                  Right
+                </CButton>
+              </CButtonGroup>
+            </DocsExample>
+          </CCardBody>
+        </CCard>
+      </CCol>
+      <CCol xs={12}>
+        <CCard className="mb-4">
+          <CCardHeader>
+            <strong>React Button Group</strong> <span>Checkbox and radio button groups</span>
+          </CCardHeader>
+          <CCardBody>
+            <p>
+              Combine button-like checkbox and radio toggle buttons into a seamless looking button
+              group.
+            </p>
+            <DocsExample href="components/button-group#checkbox-and-radio-button-groups">
+              <CButtonGroup role="group" aria-label="Basic checkbox toggle button group">
+                <CFormCheck
+                  button={{ variant: 'outline' }}
+                  id="btncheck1"
+                  autoComplete="off"
+                  label="Checkbox 1"
+                />
+                <CFormCheck
+                  button={{ variant: 'outline' }}
+                  id="btncheck2"
+                  autoComplete="off"
+                  label="Checkbox 2"
+                />
+                <CFormCheck
+                  button={{ variant: 'outline' }}
+                  id="btncheck3"
+                  autoComplete="off"
+                  label="Checkbox 3"
+                />
+              </CButtonGroup>
+            </DocsExample>
+            <DocsExample href="components/button-group#checkbox-and-radio-button-groups">
+              <CButtonGroup role="group" aria-label="Basic checkbox toggle button group">
+                <CFormCheck
+                  type="radio"
+                  button={{ variant: 'outline' }}
+                  name="btnradio"
+                  id="btnradio1"
+                  autoComplete="off"
+                  label="Radio 1"
+                />
+                <CFormCheck
+                  type="radio"
+                  button={{ variant: 'outline' }}
+                  name="btnradio"
+                  id="btnradio2"
+                  autoComplete="off"
+                  label="Radio 2"
+                />
+                <CFormCheck
+                  type="radio"
+                  button={{ variant: 'outline' }}
+                  name="btnradio"
+                  id="btnradio3"
+                  autoComplete="off"
+                  label="Radio 3"
+                />
+              </CButtonGroup>
+            </DocsExample>
+          </CCardBody>
+        </CCard>
+      </CCol>
+      <CCol xs={12}>
+        <CCard className="mb-4">
+          <CCardHeader>
+            <strong>React Button Group</strong> <span>Button toolbar</span>
+          </CCardHeader>
+          <CCardBody>
+            <p>
+              Join sets of button groups into button toolbars for more complicated components. Use
+              utility classes as needed to space out groups, buttons, and more.
+            </p>
+            <DocsExample href="components/button-group#button-toolbar">
+              <CButtonToolbar role="group" aria-label="Toolbar with button groups">
+                <CButtonGroup className="me-2" role="group" aria-label="First group">
+                  <CButton color="primary">1</CButton>
+                  <CButton color="primary">2</CButton>
+                  <CButton color="primary">3</CButton>
+                  <CButton color="primary">4</CButton>
+                </CButtonGroup>
+                <CButtonGroup className="me-2" role="group" aria-label="Second group">
+                  <CButton color="secondary">5</CButton>
+                  <CButton color="secondary">6</CButton>
+                  <CButton color="secondary">7</CButton>
+                </CButtonGroup>
+                <CButtonGroup className="me-2" role="group" aria-label="Third group">
+                  <CButton color="info">8</CButton>
+                </CButtonGroup>
+              </CButtonToolbar>
+            </DocsExample>
+            <p>
+              Feel free to combine input groups with button groups in your toolbars. Similar to the
+              example above, you’ll likely need some utilities through to space items correctly.
+            </p>
+            <DocsExample href="components/button-group#button-toolbar">
+              <CButtonToolbar className="mb-3" role="group" aria-label="Toolbar with button groups">
+                <CButtonGroup className="me-2" role="group" aria-label="First group">
+                  <CButton color="secondary" variant="outline">
+                    1
+                  </CButton>
+                  <CButton color="secondary" variant="outline">
+                    2
+                  </CButton>
+                  <CButton color="secondary" variant="outline">
+                    3
+                  </CButton>
+                  <CButton color="secondary" variant="outline">
+                    4
+                  </CButton>
+                </CButtonGroup>
+                <CInputGroup>
+                  <CInputGroupText>@</CInputGroupText>
+                  <CFormInput
+                    placeholder="Input group example"
+                    aria-label="Input group example"
+                    aria-describedby="btnGroupAddon"
+                  />
+                </CInputGroup>
+              </CButtonToolbar>
+              <CButtonToolbar
+                className="justify-content-between"
+                role="group"
+                aria-label="Toolbar with button groups"
+              >
+                <CButtonGroup className="me-2" role="group" aria-label="First group">
+                  <CButton color="secondary" variant="outline">
+                    1
+                  </CButton>
+                  <CButton color="secondary" variant="outline">
+                    2
+                  </CButton>
+                  <CButton color="secondary" variant="outline">
+                    3
+                  </CButton>
+                  <CButton color="secondary" variant="outline">
+                    4
+                  </CButton>
+                </CButtonGroup>
+                <CInputGroup>
+                  <CInputGroupText>@</CInputGroupText>
+                  <CFormInput
+                    placeholder="Input group example"
+                    aria-label="Input group example"
+                    aria-describedby="btnGroupAddon"
+                  />
+                </CInputGroup>
+              </CButtonToolbar>
+            </DocsExample>
+          </CCardBody>
+        </CCard>
+      </CCol>
+      <CCol xs={12}>
+        <CCard className="mb-4">
+          <CCardHeader>
+            <strong>React Button Group</strong> <span>Sizing</span>
+          </CCardHeader>
+          <CCardBody>
+            <p>
+              Alternatively, of implementing button sizing classes to each button in a group, set{' '}
+              <code>size</code> property to all <code>&lt;CButtonGroup&gt;</code>&#39;s, including
+              each one when nesting multiple groups.
+            </p>
+            <DocsExample href="components/button-group#sizing">
+              <CButtonGroup size="lg" role="group" aria-label="Large button group">
+                <CButton color="dark" variant="outline">
+                  Left
+                </CButton>
+                <CButton color="dark" variant="outline">
+                  Middle
+                </CButton>
+                <CButton color="dark" variant="outline">
+                  Right
+                </CButton>
+              </CButtonGroup>
+              <br />
+              <CButtonGroup role="group" aria-label="Default button group">
+                <CButton color="dark" variant="outline">
+                  Left
+                </CButton>
+                <CButton color="dark" variant="outline">
+                  Middle
+                </CButton>
+                <CButton color="dark" variant="outline">
+                  Right
+                </CButton>
+              </CButtonGroup>
+              <br />
+              <CButtonGroup size="sm" role="group" aria-label="Small button group">
+                <CButton color="dark" variant="outline">
+                  Left
+                </CButton>
+                <CButton color="dark" variant="outline">
+                  Middle
+                </CButton>
+                <CButton color="dark" variant="outline">
+                  Right
+                </CButton>
+              </CButtonGroup>
+            </DocsExample>
+          </CCardBody>
+        </CCard>
+      </CCol>
+      <CCol xs={12}>
+        <CCard className="mb-4">
+          <CCardHeader>
+            <strong>React Button Group</strong> <span>Nesting</span>
+          </CCardHeader>
+          <CCardBody>
+            <p className="text-body-secondary small">
+              Put a <code>&lt;CButtonGroup&gt;</code> inside another{' '}
+              <code>&lt;CButtonGroup&gt;</code> when you need dropdown menus combined with a series
+              of buttons.
+            </p>
+            <DocsExample href="components/button-group#nesting">
+              <CButtonGroup role="group" aria-label="Button group with nested dropdown">
+                <CButton color="primary">1</CButton>
+                <CButton color="primary">2</CButton>
+                <CDropdown variant="btn-group">
+                  <CDropdownToggle color="primary">Dropdown</CDropdownToggle>
+                  <CDropdownMenu>
+                    <CDropdownItem href="#">Action</CDropdownItem>
+                    <CDropdownItem href="#">Another action</CDropdownItem>
+                    <CDropdownItem href="#">Something else here</CDropdownItem>
+                    <CDropdownDivider />
+                    <CDropdownItem href="#">Separated link</CDropdownItem>
+                  </CDropdownMenu>
+                </CDropdown>
+              </CButtonGroup>
+            </DocsExample>
+          </CCardBody>
+        </CCard>
+      </CCol>
+      <CCol xs={12}>
+        <CCard className="mb-4">
+          <CCardHeader>
+            <strong>React Button Group</strong> <span>Vertical variation</span>
+          </CCardHeader>
+          <CCardBody>
+            <p className="text-body-secondary small">
+              Create a set of buttons that appear vertically stacked rather than horizontally.{' '}
+              <strong>Split button dropdowns are not supported here.</strong>
+            </p>
+            <DocsExample href="components/button-group/#vertical-variation">
+              <CButtonGroup vertical role="group" aria-label="Vertical button group">
+                <CButton color="dark">Button</CButton>
+                <CButton color="dark">Button</CButton>
+                <CButton color="dark">Button</CButton>
+                <CButton color="dark">Button</CButton>
+                <CButton color="dark">Button</CButton>
+                <CButton color="dark">Button</CButton>
+                <CButton color="dark">Button</CButton>
+              </CButtonGroup>
+            </DocsExample>
+            <DocsExample href="components/button-group/#vertical-variation">
+              <CButtonGroup vertical role="group" aria-label="Vertical button group">
+                <CButton color="primary">Button</CButton>
+                <CButton color="primary">Button</CButton>
+                <CDropdown variant="btn-group">
+                  <CDropdownToggle color="primary">Dropdown</CDropdownToggle>
+                  <CDropdownMenu>
+                    <CDropdownItem href="#">Action</CDropdownItem>
+                    <CDropdownItem href="#">Another action</CDropdownItem>
+                    <CDropdownItem href="#">Something else here</CDropdownItem>
+                    <CDropdownDivider />
+                    <CDropdownItem href="#">Separated link</CDropdownItem>
+                  </CDropdownMenu>
+                </CDropdown>
+                <CButton color="primary">Button</CButton>
+                <CButton color="primary">Button</CButton>
+                <CDropdown variant="btn-group">
+                  <CDropdownToggle color="primary">Dropdown</CDropdownToggle>
+                  <CDropdownMenu>
+                    <CDropdownItem href="#">Action</CDropdownItem>
+                    <CDropdownItem href="#">Another action</CDropdownItem>
+                    <CDropdownItem href="#">Something else here</CDropdownItem>
+                    <CDropdownDivider />
+                    <CDropdownItem href="#">Separated link</CDropdownItem>
+                  </CDropdownMenu>
+                </CDropdown>
+                <CDropdown variant="btn-group">
+                  <CDropdownToggle color="primary">Dropdown</CDropdownToggle>
+                  <CDropdownMenu>
+                    <CDropdownItem href="#">Action</CDropdownItem>
+                    <CDropdownItem href="#">Another action</CDropdownItem>
+                    <CDropdownItem href="#">Something else here</CDropdownItem>
+                    <CDropdownDivider />
+                    <CDropdownItem href="#">Separated link</CDropdownItem>
+                  </CDropdownMenu>
+                </CDropdown>
+                <CDropdown variant="btn-group">
+                  <CDropdownToggle color="primary">Dropdown</CDropdownToggle>
+                  <CDropdownMenu>
+                    <CDropdownItem href="#">Action</CDropdownItem>
+                    <CDropdownItem href="#">Another action</CDropdownItem>
+                    <CDropdownItem href="#">Something else here</CDropdownItem>
+                    <CDropdownDivider />
+                    <CDropdownItem href="#">Separated link</CDropdownItem>
+                  </CDropdownMenu>
+                </CDropdown>
+              </CButtonGroup>
+            </DocsExample>
+            <DocsExample href="components/button-group/#vertical-variation">
+              <CButtonGroup vertical role="group" aria-label="Vertical button group">
+                <CFormCheck
+                  type="radio"
+                  button={{ color: 'danger', variant: 'outline' }}
+                  name="vbtnradio"
+                  id="vbtnradio1"
+                  autoComplete="off"
+                  label="Radio 1"
+                  defaultChecked
+                />
+                <CFormCheck
+                  type="radio"
+                  button={{ color: 'danger', variant: 'outline' }}
+                  name="vbtnradio"
+                  id="vbtnradio2"
+                  autoComplete="off"
+                  label="Radio 2"
+                />
+                <CFormCheck
+                  type="radio"
+                  button={{ color: 'danger', variant: 'outline' }}
+                  name="vbtnradio"
+                  id="vbtnradio3"
+                  autoComplete="off"
+                  label="Radio 3"
+                />
+              </CButtonGroup>
+            </DocsExample>
+          </CCardBody>
+        </CCard>
+      </CCol>
+    </CRow>
+  )
+}
+
+export default ButtonGroups
Index: PlanningMamagement/frontend/src/views/buttons/dropdowns/Dropdowns.js
===================================================================
diff --git a/PlanningMamagement/frontend/src/views/buttons/dropdowns/Dropdowns.js b/PlanningMamagement/frontend/src/views/buttons/dropdowns/Dropdowns.js
new file mode 100644
--- /dev/null	(date 1728391642077)
+++ b/PlanningMamagement/frontend/src/views/buttons/dropdowns/Dropdowns.js	(date 1728391642077)
@@ -0,0 +1,338 @@
+import React from 'react'
+import {
+  CButton,
+  CButtonGroup,
+  CCard,
+  CCardBody,
+  CCardHeader,
+  CCol,
+  CDropdown,
+  CDropdownDivider,
+  CDropdownItem,
+  CDropdownMenu,
+  CDropdownToggle,
+  CRow,
+} from '@coreui/react'
+import { DocsExample } from 'src/components'
+
+const Dropdowns = () => {
+  return (
+    <CRow>
+      <CCol xs={12}>
+        <CCard className="mb-4">
+          <CCardHeader>
+            <strong>React Dropdown</strong> <small>Single button</small>
+          </CCardHeader>
+          <CCardBody>
+            <p className="text-body-secondary small">
+              Here&#39;s how you can put them to work with either <code>&lt;button&gt;</code>{' '}
+              elements:
+            </p>
+            <DocsExample href="components/dropdown#single-button">
+              <CDropdown>
+                <CDropdownToggle color="secondary">Dropdown button</CDropdownToggle>
+                <CDropdownMenu>
+                  <CDropdownItem href="#">Action</CDropdownItem>
+                  <CDropdownItem href="#">Another action</CDropdownItem>
+                  <CDropdownItem href="#">Something else here</CDropdownItem>
+                </CDropdownMenu>
+              </CDropdown>
+            </DocsExample>
+            <p className="text-body-secondary small">
+              The best part is you can do this with any button variant, too:
+            </p>
+            <DocsExample href="components/dropdown#single-button">
+              <>
+                {['primary', 'secondary', 'success', 'info', 'warning', 'danger'].map(
+                  (color, index) => (
+                    <CDropdown variant="btn-group" key={index}>
+                      <CDropdownToggle color={color}>{color}</CDropdownToggle>
+                      <CDropdownMenu>
+                        <CDropdownItem href="#">Action</CDropdownItem>
+                        <CDropdownItem href="#">Another action</CDropdownItem>
+                        <CDropdownItem href="#">Something else here</CDropdownItem>
+                        <CDropdownDivider />
+                        <CDropdownItem href="#">Separated link</CDropdownItem>
+                      </CDropdownMenu>
+                    </CDropdown>
+                  ),
+                )}
+              </>
+            </DocsExample>
+          </CCardBody>
+        </CCard>
+      </CCol>
+      <CCol xs={12}>
+        <CCard className="mb-4">
+          <CCardHeader>
+            <strong>React Dropdown</strong> <small>Split button</small>
+          </CCardHeader>
+          <CCardBody>
+            <p className="text-body-secondary small">
+              Similarly, create split button dropdowns with virtually the same markup as single
+              button dropdowns, but with the addition of boolean prop <code>split</code> for proper
+              spacing around the dropdown caret.
+            </p>
+            <p className="text-body-secondary small">
+              We use this extra class to reduce the horizontal <code>padding</code> on either side
+              of the caret by 25% and remove the <code>margin-left</code> that&#39;s attached for
+              normal button dropdowns. Those additional changes hold the caret centered in the split
+              button and implement a more properly sized hit area next to the main button.
+            </p>
+            <DocsExample href="components/dropdown#split-button">
+              <>
+                {['primary', 'secondary', 'success', 'info', 'warning', 'danger'].map(
+                  (color, index) => (
+                    <CDropdown variant="btn-group" key={index}>
+                      <CButton color={color}>{color}</CButton>
+                      <CDropdownToggle color={color} split />
+                      <CDropdownMenu>
+                        <CDropdownItem href="#">Action</CDropdownItem>
+                        <CDropdownItem href="#">Another action</CDropdownItem>
+                        <CDropdownItem href="#">Something else here</CDropdownItem>
+                        <CDropdownDivider />
+                        <CDropdownItem href="#">Separated link</CDropdownItem>
+                      </CDropdownMenu>
+                    </CDropdown>
+                  ),
+                )}
+              </>
+            </DocsExample>
+          </CCardBody>
+        </CCard>
+      </CCol>
+      <CCol xs={12}>
+        <CCard className="mb-4">
+          <CCardHeader>
+            <strong>React Dropdown</strong> <small>Sizing</small>
+          </CCardHeader>
+          <CCardBody>
+            <p className="text-body-secondary small">
+              Button dropdowns work with buttons of all sizes, including default and split dropdown
+              buttons.
+            </p>
+            <DocsExample href="components/dropdown#sizing">
+              <CDropdown variant="btn-group">
+                <CDropdownToggle color="secondary" size="lg">
+                  Large button
+                </CDropdownToggle>
+                <CDropdownMenu>
+                  <CDropdownItem href="#">Action</CDropdownItem>
+                  <CDropdownItem href="#">Another action</CDropdownItem>
+                  <CDropdownItem href="#">Something else here</CDropdownItem>
+                  <CDropdownDivider />
+                  <CDropdownItem href="#">Separated link</CDropdownItem>
+                </CDropdownMenu>
+              </CDropdown>
+              <CDropdown variant="btn-group">
+                <CButton color="secondary" size="lg">
+                  Large split button
+                </CButton>
+                <CDropdownToggle color="secondary" size="lg" split />
+                <CDropdownMenu>
+                  <CDropdownItem href="#">Action</CDropdownItem>
+                  <CDropdownItem href="#">Another action</CDropdownItem>
+                  <CDropdownItem href="#">Something else here</CDropdownItem>
+                  <CDropdownDivider />
+                  <CDropdownItem href="#">Separated link</CDropdownItem>
+                </CDropdownMenu>
+              </CDropdown>
+            </DocsExample>
+            <DocsExample href="components/dropdown#sizing">
+              <CDropdown variant="btn-group">
+                <CDropdownToggle color="secondary" size="sm">
+                  Small button
+                </CDropdownToggle>
+                <CDropdownMenu>
+                  <CDropdownItem href="#">Action</CDropdownItem>
+                  <CDropdownItem href="#">Another action</CDropdownItem>
+                  <CDropdownItem href="#">Something else here</CDropdownItem>
+                  <CDropdownDivider />
+                  <CDropdownItem href="#">Separated link</CDropdownItem>
+                </CDropdownMenu>
+              </CDropdown>
+              <CDropdown variant="btn-group">
+                <CButton color="secondary" size="sm">
+                  Small split button
+                </CButton>
+                <CDropdownToggle color="secondary" size="sm" split />
+                <CDropdownMenu>
+                  <CDropdownItem href="#">Action</CDropdownItem>
+                  <CDropdownItem href="#">Another action</CDropdownItem>
+                  <CDropdownItem href="#">Something else here</CDropdownItem>
+                  <CDropdownDivider />
+                  <CDropdownItem href="#">Separated link</CDropdownItem>
+                </CDropdownMenu>
+              </CDropdown>
+            </DocsExample>
+          </CCardBody>
+        </CCard>
+      </CCol>
+      <CCol xs={12}>
+        <CCard className="mb-4">
+          <CCardHeader>
+            <strong>React Dropdown</strong> <small>Single button</small>
+          </CCardHeader>
+          <CCardBody>
+            <p className="text-body-secondary small">
+              Opt into darker dropdowns to match a dark navbar or custom style by set{' '}
+              <code>dark</code> property. No changes are required to the dropdown items.
+            </p>
+            <DocsExample href="components/dropdown#dark-dropdowns">
+              <CDropdown dark>
+                <CDropdownToggle color="secondary">Dropdown button</CDropdownToggle>
+                <CDropdownMenu>
+                  <CDropdownItem href="#">Action</CDropdownItem>
+                  <CDropdownItem href="#">Another action</CDropdownItem>
+                  <CDropdownItem href="#">Something else here</CDropdownItem>
+                  <CDropdownDivider />
+                  <CDropdownItem href="#">Separated link</CDropdownItem>
+                </CDropdownMenu>
+              </CDropdown>
+            </DocsExample>
+            <p className="text-body-secondary small">And putting it to use in a navbar:</p>
+            <DocsExample href="components/dropdown#dark-dropdowns">
+              <nav className="navbar navbar-expand-lg navbar-dark bg-dark">
+                <div className="container-fluid">
+                  <a className="navbar-brand" href="https://coreui.io/react/">
+                    Navbar
+                  </a>
+                  <button
+                    className="navbar-toggler"
+                    type="button"
+                    data-coreui-toggle="collapse"
+                    data-coreui-target="#navbarNavDarkDropdown"
+                    aria-controls="navbarNavDarkDropdown"
+                    aria-expanded="false"
+                    aria-label="Toggle navigation"
+                  >
+                    <span className="navbar-toggler-icon"></span>
+                  </button>
+                  <div className="collapse navbar-collapse" id="navbarNavDarkDropdown">
+                    <ul className="navbar-nav">
+                      <CDropdown dark as="li" variant="nav-item">
+                        <CDropdownToggle>Dropdown</CDropdownToggle>
+                        <CDropdownMenu>
+                          <CDropdownItem href="#">Action</CDropdownItem>
+                          <CDropdownItem href="#">Another action</CDropdownItem>
+                          <CDropdownItem href="#">Something else here</CDropdownItem>
+                          <CDropdownDivider />
+                          <CDropdownItem href="#">Separated link</CDropdownItem>
+                        </CDropdownMenu>
+                      </CDropdown>
+                    </ul>
+                  </div>
+                </div>
+              </nav>
+            </DocsExample>
+          </CCardBody>
+        </CCard>
+      </CCol>
+      <CCol xs={12}>
+        <CCard className="mb-4">
+          <CCardHeader>
+            <strong>React Dropdown</strong> <small>Dropup</small>
+          </CCardHeader>
+          <CCardBody>
+            <p className="text-body-secondary small">
+              Trigger dropdown menus above elements by adding{' '}
+              <code>direction=&#34;dropup&#34;</code> to the <code>&lt;CDropdown&gt;</code>{' '}
+              component.
+            </p>
+            <DocsExample href="components/dropdown#dropup">
+              <CDropdown variant="btn-group" direction="dropup">
+                <CDropdownToggle color="secondary">Dropdown</CDropdownToggle>
+                <CDropdownMenu>
+                  <CDropdownItem href="#">Action</CDropdownItem>
+                  <CDropdownItem href="#">Another action</CDropdownItem>
+                  <CDropdownItem href="#">Something else here</CDropdownItem>
+                  <CDropdownDivider />
+                  <CDropdownItem href="#">Separated link</CDropdownItem>
+                </CDropdownMenu>
+              </CDropdown>
+              <CDropdown variant="btn-group" direction="dropup">
+                <CButton color="secondary">Small split button</CButton>
+                <CDropdownToggle color="secondary" split />
+                <CDropdownMenu>
+                  <CDropdownItem href="#">Action</CDropdownItem>
+                  <CDropdownItem href="#">Another action</CDropdownItem>
+                  <CDropdownItem href="#">Something else here</CDropdownItem>
+                  <CDropdownDivider />
+                  <CDropdownItem href="#">Separated link</CDropdownItem>
+                </CDropdownMenu>
+              </CDropdown>
+            </DocsExample>
+          </CCardBody>
+        </CCard>
+      </CCol>
+      <CCol xs={12}>
+        <CCard className="mb-4">
+          <CCardHeader>
+            <strong>React Dropdown</strong> <small>Dropright</small>
+          </CCardHeader>
+          <CCardBody>
+            <p className="text-body-secondary small">
+              Trigger dropdown menus at the right of the elements by adding{' '}
+              <code>direction=&#34;dropend&#34;</code> to the <code>&lt;CDropdown&gt;</code>{' '}
+              component.
+            </p>
+            <DocsExample href="components/dropdown#dropright">
+              <CDropdown variant="btn-group" direction="dropend">
+                <CDropdownToggle color="secondary">Dropdown</CDropdownToggle>
+                <CDropdownMenu>
+                  <CDropdownItem href="#">Action</CDropdownItem>
+                  <CDropdownItem href="#">Another action</CDropdownItem>
+                  <CDropdownItem href="#">Something else here</CDropdownItem>
+                  <CDropdownDivider />
+                  <CDropdownItem href="#">Separated link</CDropdownItem>
+                </CDropdownMenu>
+              </CDropdown>
+              <CDropdown variant="btn-group" direction="dropend">
+                <CButton color="secondary">Small split button</CButton>
+                <CDropdownToggle color="secondary" split />
+                <CDropdownMenu>
+                  <CDropdownItem href="#">Action</CDropdownItem>
+                  <CDropdownItem href="#">Another action</CDropdownItem>
+                  <CDropdownItem href="#">Something else here</CDropdownItem>
+                  <CDropdownDivider />
+                  <CDropdownItem href="#">Separated link</CDropdownItem>
+                </CDropdownMenu>
+              </CDropdown>
+            </DocsExample>
+          </CCardBody>
+        </CCard>
+      </CCol>
+      <CCol xs={12}>
+        <CCard className="mb-4">
+          <CCardHeader>
+            <strong>React Dropdown</strong> <small>Dropleft</small>
+          </CCardHeader>
+          <CCardBody>
+            <p className="text-body-secondary small">
+              Trigger dropdown menus at the left of the elements by adding{' '}
+              <code>direction=&#34;dropstart&#34;</code> to the <code>&lt;CDropdown&gt;</code>{' '}
+              component.
+            </p>
+            <DocsExample href="components/dropdown#dropleft">
+              <CButtonGroup>
+                <CDropdown variant="btn-group" direction="dropstart">
+                  <CDropdownToggle color="secondary" split />
+                  <CDropdownMenu>
+                    <CDropdownItem href="#">Action</CDropdownItem>
+                    <CDropdownItem href="#">Another action</CDropdownItem>
+                    <CDropdownItem href="#">Something else here</CDropdownItem>
+                    <CDropdownDivider />
+                    <CDropdownItem href="#">Separated link</CDropdownItem>
+                  </CDropdownMenu>
+                </CDropdown>
+                <CButton color="secondary">Small split button</CButton>
+              </CButtonGroup>
+            </DocsExample>
+          </CCardBody>
+        </CCard>
+      </CCol>
+    </CRow>
+  )
+}
+
+export default Dropdowns
Index: PlanningMamagement/frontend/src/views/notifications/badges/Badges.js
===================================================================
diff --git a/PlanningMamagement/frontend/src/views/notifications/badges/Badges.js b/PlanningMamagement/frontend/src/views/notifications/badges/Badges.js
new file mode 100644
--- /dev/null	(date 1728391642350)
+++ b/PlanningMamagement/frontend/src/views/notifications/badges/Badges.js	(date 1728391642350)
@@ -0,0 +1,122 @@
+import React from 'react'
+import { CButton, CCard, CCardBody, CCardHeader, CCol, CBadge, CRow } from '@coreui/react'
+import { DocsExample } from 'src/components'
+
+const Badges = () => {
+  return (
+    <CRow>
+      <CCol lg={6}>
+        <CCard className="mb-4">
+          <CCardHeader>
+            <strong>React Badges</strong> <small>Dismissing</small>
+          </CCardHeader>
+          <CCardBody>
+            <p className="text-body-secondary small">
+              Bootstrap badge scale to suit the size of the parent element by using relative font
+              sizing and <code>em</code> units.
+            </p>
+            <DocsExample href="components/badge">
+              <h1>
+                Example heading <CBadge color="secondary">New</CBadge>
+              </h1>
+              <h2>
+                Example heading <CBadge color="secondary">New</CBadge>
+              </h2>
+              <h3>
+                Example heading <CBadge color="secondary">New</CBadge>
+              </h3>
+              <h4>
+                Example heading <CBadge color="secondary">New</CBadge>
+              </h4>
+              <h5>
+                Example heading <CBadge color="secondary">New</CBadge>
+              </h5>
+              <h6>
+                Example heading <CBadge color="secondary">New</CBadge>
+              </h6>
+            </DocsExample>
+            <p className="text-body-secondary small">
+              Badges can be used as part of links or buttons to provide a counter.
+            </p>
+            <DocsExample href="components/badge">
+              <CButton color="primary">
+                Notifications <CBadge color="secondary">4</CBadge>
+              </CButton>
+            </DocsExample>
+            <p className="text-body-secondary small">
+              Remark that depending on how you use them, badges may be complicated for users of
+              screen readers and related assistive technologies.
+            </p>
+            <p className="text-body-secondary small">
+              Unless the context is clear, consider including additional context with a visually
+              hidden piece of additional text.
+            </p>
+            <DocsExample href="components/badge">
+              <CButton color="primary">
+                Profile <CBadge color="secondary">9</CBadge>
+                <span className="visually-hidden">unread messages</span>
+              </CButton>
+            </DocsExample>
+          </CCardBody>
+        </CCard>
+      </CCol>
+      <CCol lg={6}>
+        <CCard className="mb-4">
+          <CCardHeader>
+            <strong>React Badges</strong> <small>Contextual variations</small>
+          </CCardHeader>
+          <CCardBody>
+            <p className="text-body-secondary small">
+              Add any of the below-mentioned <code>color</code> props to modify the presentation of
+              a badge.
+            </p>
+            <DocsExample href="components/badge#contextual-variations">
+              <CBadge color="primary">primary</CBadge>
+              <CBadge color="success">success</CBadge>
+              <CBadge color="danger">danger</CBadge>
+              <CBadge color="warning">warning</CBadge>
+              <CBadge color="info">info</CBadge>
+              <CBadge color="light">light</CBadge>
+              <CBadge color="dark">dark</CBadge>
+            </DocsExample>
+          </CCardBody>
+        </CCard>
+        <CCard className="mb-4">
+          <CCardHeader>
+            <strong>React Badges</strong> <small>Pill badges</small>
+          </CCardHeader>
+          <CCardBody>
+            <p className="text-body-secondary small">
+              Apply the <code>shape=&#34;rounded-pill&#34;</code> prop to make badges rounded.
+            </p>
+            <DocsExample href="components/badge#pill-badges">
+              <CBadge color="primary" shape="rounded-pill">
+                primary
+              </CBadge>
+              <CBadge color="success" shape="rounded-pill">
+                success
+              </CBadge>
+              <CBadge color="danger" shape="rounded-pill">
+                danger
+              </CBadge>
+              <CBadge color="warning" shape="rounded-pill">
+                warning
+              </CBadge>
+              <CBadge color="info" shape="rounded-pill">
+                info
+              </CBadge>
+              <CBadge color="light" shape="rounded-pill">
+                light
+              </CBadge>
+              <CBadge color="dark" shape="rounded-pill">
+                dark
+              </CBadge>
+            </DocsExample>
+          </CCardBody>
+        </CCard>
+      </CCol>
+    </CRow>
+  )
+}
+
+export default Badges
Index: PlanningMamagement/frontend/src/views/notifications/alerts/Alerts.js
===================================================================
diff --git a/PlanningMamagement/frontend/src/views/notifications/alerts/Alerts.js b/PlanningMamagement/frontend/src/views/notifications/alerts/Alerts.js
new file mode 100644
--- /dev/null	(date 1728391642334)
+++ b/PlanningMamagement/frontend/src/views/notifications/alerts/Alerts.js	(date 1728391642334)
@@ -0,0 +1,145 @@
+import React from 'react'
+import {
+  CAlert,
+  CAlertHeading,
+  CAlertLink,
+  CCard,
+  CCardBody,
+  CCardHeader,
+  CCol,
+  CRow,
+} from '@coreui/react'
+import { DocsExample } from 'src/components'
+
+const Alerts = () => {
+  return (
+    <CRow>
+      <CCol xs={12}>
+        <CCard className="mb-4">
+          <CCardHeader>
+            <strong>React Alert</strong>
+          </CCardHeader>
+          <CCardBody>
+            <p className="text-body-secondary small">
+              React Alert is prepared for any length of text, as well as an optional close button.
+              For a styling, use one of the <strong>required</strong> contextual <code>color</code>{' '}
+              props (e.g., <code>primary</code>). For inline dismissal, use the{' '}
+              <a href="https://coreui.io/react/docs/components/alert#dismissing">dismissing prop</a>
+              .
+            </p>
+            <DocsExample href="components/alert">
+              <CAlert color="primary">A simple primary alert—check it out!</CAlert>
+              <CAlert color="secondary">A simple secondary alert—check it out!</CAlert>
+              <CAlert color="success">A simple success alert—check it out!</CAlert>
+              <CAlert color="danger">A simple danger alert—check it out!</CAlert>
+              <CAlert color="warning">A simple warning alert—check it out!</CAlert>
+              <CAlert color="info">A simple info alert—check it out!</CAlert>
+              <CAlert color="light">A simple light alert—check it out!</CAlert>
+              <CAlert color="dark">A simple dark alert—check it out!</CAlert>
+            </DocsExample>
+          </CCardBody>
+        </CCard>
+      </CCol>
+      <CCol xs={12}>
+        <CCard className="mb-4">
+          <CCardHeader>
+            <strong>React Alert</strong> <small>Link color</small>
+          </CCardHeader>
+          <CCardBody>
+            <p className="text-body-secondary small">
+              Use the <code>&lt;CAlertLink&gt;</code> component to immediately give matching colored
+              links inside any alert.
+            </p>
+            <DocsExample href="components/alert#link-color">
+              <CAlert color="primary">
+                A simple primary alert with <CAlertLink href="#">an example link</CAlertLink>. Give
+                it a click if you like.
+              </CAlert>
+              <CAlert color="secondary">
+                A simple secondary alert with <CAlertLink href="#">an example link</CAlertLink>.
+                Give it a click if you like.
+              </CAlert>
+              <CAlert color="success">
+                A simple success alert with <CAlertLink href="#">an example link</CAlertLink>. Give
+                it a click if you like.
+              </CAlert>
+              <CAlert color="danger">
+                A simple danger alert with <CAlertLink href="#">an example link</CAlertLink>. Give
+                it a click if you like.
+              </CAlert>
+              <CAlert color="warning">
+                A simple warning alert with <CAlertLink href="#">an example link</CAlertLink>. Give
+                it a click if you like.
+              </CAlert>
+              <CAlert color="info">
+                A simple info alert with <CAlertLink href="#">an example link</CAlertLink>. Give it
+                a click if you like.
+              </CAlert>
+              <CAlert color="light">
+                A simple light alert with <CAlertLink href="#">an example link</CAlertLink>. Give it
+                a click if you like.
+              </CAlert>
+              <CAlert color="dark">
+                A simple dark alert with <CAlertLink href="#">an example link</CAlertLink>. Give it
+                a click if you like.
+              </CAlert>
+            </DocsExample>
+          </CCardBody>
+        </CCard>
+      </CCol>
+      <CCol xs={12}>
+        <CCard className="mb-4">
+          <CCardHeader>
+            <strong>React Alert</strong> <small>Additional content</small>
+          </CCardHeader>
+          <CCardBody>
+            <p className="text-body-secondary small">
+              Alert can also incorporate supplementary components &amp; elements like heading,
+              paragraph, and divider.
+            </p>
+            <DocsExample href="components/alert#additional-content">
+              <CAlert color="success">
+                <CAlertHeading as="h4">Well done!</CAlertHeading>
+                <p>
+                  Aww yeah, you successfully read this important alert message. This example text is
+                  going to run a bit longer so that you can see how spacing within an alert works
+                  with this kind of content.
+                </p>
+                <hr />
+                <p className="mb-0">
+                  Whenever you need to, be sure to use margin utilities to keep things nice and
+                  tidy.
+                </p>
+              </CAlert>
+            </DocsExample>
+          </CCardBody>
+        </CCard>
+      </CCol>
+      <CCol xs={12}>
+        <CCard className="mb-4">
+          <CCardHeader>
+            <strong>React Alert</strong> <small>Dismissing</small>
+          </CCardHeader>
+          <CCardBody>
+            <p className="text-body-secondary small">
+              Alerts can also be easily dismissed. Just add the <code>dismissible</code> prop.
+            </p>
+            <DocsExample href="components/alert#dismissing">
+              <CAlert
+                color="warning"
+                dismissible
+                onClose={() => {
+                  alert('👋 Well, hi there! Thanks for dismissing me.')
+                }}
+              >
+                <strong>Go right ahead</strong> and click that dimiss over there on the right.
+              </CAlert>
+            </DocsExample>
+          </CCardBody>
+        </CCard>
+      </CCol>
+    </CRow>
+  )
+}
+
+export default Alerts
Index: PlanningMamagement/frontend/src/views/notifications/toasts/Toasts.js
===================================================================
diff --git a/PlanningMamagement/frontend/src/views/notifications/toasts/Toasts.js b/PlanningMamagement/frontend/src/views/notifications/toasts/Toasts.js
new file mode 100644
--- /dev/null	(date 1728391642382)
+++ b/PlanningMamagement/frontend/src/views/notifications/toasts/Toasts.js	(date 1728391642382)
@@ -0,0 +1,252 @@
+import React, { useRef, useState } from 'react'
+import {
+  CCard,
+  CCardHeader,
+  CCardBody,
+  CButton,
+  CRow,
+  CCol,
+  CToast,
+  CToastBody,
+  CToastClose,
+  CToastHeader,
+  CToaster,
+} from '@coreui/react'
+import { DocsExample } from 'src/components'
+
+const ExampleToast = () => {
+  const [toast, addToast] = useState(0)
+  const toaster = useRef()
+  const exampleToast = (
+    <CToast title="CoreUI for React.js">
+      <CToastHeader closeButton>
+        <svg
+          className="rounded me-2"
+          width="20"
+          height="20"
+          xmlns="http://www.w3.org/2000/svg"
+          preserveAspectRatio="xMidYMid slice"
+          focusable="false"
+          role="img"
+        >
+          <rect width="100%" height="100%" fill="#007aff"></rect>
+        </svg>
+        <strong className="me-auto">CoreUI for React.js</strong>
+        <small>7 min ago</small>
+      </CToastHeader>
+      <CToastBody>Hello, world! This is a toast message.</CToastBody>
+    </CToast>
+  )
+  return (
+    <>
+      <CButton color="primary" onClick={() => addToast(exampleToast)}>
+        Send a toast
+      </CButton>
+      <CToaster ref={toaster} push={toast} placement="top-end" />
+    </>
+  )
+}
+
+const Toasts = () => {
+  return (
+    <CRow>
+      <CCol xs={12}>
+        <CCard className="mb-4">
+          <CCardHeader>
+            <strong>React Toast</strong> <small>Basic</small>
+          </CCardHeader>
+          <CCardBody>
+            <p className="text-body-secondary small">
+              Toasts are as flexible as you need and have very little required markup. At a minimum,
+              we require a single element to contain your “toasted” content and strongly encourage a
+              dismiss button.
+            </p>
+            <DocsExample href="components/toast">
+              <CToast autohide={false} visible={true}>
+                <CToastHeader closeButton>
+                  <svg
+                    className="rounded me-2"
+                    width="20"
+                    height="20"
+                    xmlns="http://www.w3.org/2000/svg"
+                    preserveAspectRatio="xMidYMid slice"
+                    focusable="false"
+                    role="img"
+                  >
+                    <rect width="100%" height="100%" fill="#007aff"></rect>
+                  </svg>
+                  <strong className="me-auto">CoreUI for React.js</strong>
+                  <small>7 min ago</small>
+                </CToastHeader>
+                <CToastBody>Hello, world! This is a toast message.</CToastBody>
+              </CToast>
+            </DocsExample>
+            <DocsExample href="components/toast">{ExampleToast()}</DocsExample>
+          </CCardBody>
+        </CCard>
+      </CCol>
+      <CCol xs={12}>
+        <CCard className="mb-4">
+          <CCardHeader>
+            <strong>React Toast</strong> <small>Translucent</small>
+          </CCardHeader>
+          <CCardBody>
+            <p className="text-body-secondary small">
+              Toasts are slightly translucent to blend in with what&#39;s below them.
+            </p>
+            <DocsExample href="components/toast#translucent" tabContentClassName="bg-dark">
+              <CToast autohide={false} visible={true}>
+                <CToastHeader closeButton>
+                  <svg
+                    className="rounded me-2"
+                    width="20"
+                    height="20"
+                    xmlns="http://www.w3.org/2000/svg"
+                    preserveAspectRatio="xMidYMid slice"
+                    focusable="false"
+                    role="img"
+                  >
+                    <rect width="100%" height="100%" fill="#007aff"></rect>
+                  </svg>
+                  <strong className="me-auto">CoreUI for React.js</strong>
+                  <small>7 min ago</small>
+                </CToastHeader>
+                <CToastBody>Hello, world! This is a toast message.</CToastBody>
+              </CToast>
+            </DocsExample>
+          </CCardBody>
+        </CCard>
+      </CCol>
+      <CCol xs={12}>
+        <CCard className="mb-4">
+          <CCardHeader>
+            <strong>React Toast</strong> <small>Stacking</small>
+          </CCardHeader>
+          <CCardBody>
+            <p className="text-body-secondary small">
+              You can stack toasts by wrapping them in a toast container, which will vertically add
+              some spacing.
+            </p>
+            <DocsExample href="components/toast#stacking">
+              <CToaster className="position-static">
+                <CToast autohide={false} visible={true}>
+                  <CToastHeader closeButton>
+                    <svg
+                      className="rounded me-2"
+                      width="20"
+                      height="20"
+                      xmlns="http://www.w3.org/2000/svg"
+                      preserveAspectRatio="xMidYMid slice"
+                      focusable="false"
+                      role="img"
+                    >
+                      <rect width="100%" height="100%" fill="#007aff"></rect>
+                    </svg>
+                    <strong className="me-auto">CoreUI for React.js</strong>
+                    <small>7 min ago</small>
+                  </CToastHeader>
+                  <CToastBody>Hello, world! This is a toast message.</CToastBody>
+                </CToast>
+                <CToast autohide={false} visible={true}>
+                  <CToastHeader closeButton>
+                    <svg
+                      className="rounded me-2"
+                      width="20"
+                      height="20"
+                      xmlns="http://www.w3.org/2000/svg"
+                      preserveAspectRatio="xMidYMid slice"
+                      focusable="false"
+                      role="img"
+                    >
+                      <rect width="100%" height="100%" fill="#007aff"></rect>
+                    </svg>
+                    <strong className="me-auto">CoreUI for React.js</strong>
+                    <small>7 min ago</small>
+                  </CToastHeader>
+                  <CToastBody>Hello, world! This is a toast message.</CToastBody>
+                </CToast>
+              </CToaster>
+            </DocsExample>
+          </CCardBody>
+        </CCard>
+      </CCol>
+      <CCol xs={12}>
+        <CCard className="mb-4">
+          <CCardHeader>
+            <strong>React Toast</strong> <small>Custom content</small>
+          </CCardHeader>
+          <CCardBody>
+            <p className="text-body-secondary small">
+              Customize your toasts by removing sub-components, tweaking them with{' '}
+              <a href="https://coreui.io/docs/utilities/api">utilities</a>, or by adding your own
+              markup. Here we&#39;ve created a simpler toast by removing the default{' '}
+              <code>&lt;CToastHeader&gt;</code>, adding a custom hide icon from{' '}
+              <a href="https://coreui.io/icons/">CoreUI Icons</a>, and using some{' '}
+              <a href="https://coreui.io/docs/utilities/flex">flexbox utilities</a> to adjust the
+              layout.
+            </p>
+            <DocsExample href="components/toast#custom-content">
+              <CToast autohide={false} className="align-items-center" visible={true}>
+                <div className="d-flex">
+                  <CToastBody>Hello, world! This is a toast message.</CToastBody>
+                  <CToastClose className="me-2 m-auto" />
+                </div>
+              </CToast>
+            </DocsExample>
+            <p className="text-body-secondary small">
+              Alternatively, you can also add additional controls and components to toasts.
+            </p>
+            <DocsExample href="components/toast#custom-content">
+              <CToast autohide={false} visible={true}>
+                <CToastBody>
+                  Hello, world! This is a toast message.
+                  <div className="mt-2 pt-2 border-top">
+                    <CButton type="button" color="primary" size="sm">
+                      Take action
+                    </CButton>
+                    <CToastClose as={CButton} color="secondary" size="sm" className="ms-1">
+                      Close
+                    </CToastClose>
+                  </div>
+                </CToastBody>
+              </CToast>
+            </DocsExample>
+          </CCardBody>
+        </CCard>
+      </CCol>
+      <CCol xs={12}>
+        <CCard className="mb-4">
+          <CCardHeader>
+            <strong>React Toast</strong> <small>Custom content</small>
+          </CCardHeader>
+          <CCardBody>
+            <p className="text-body-secondary small">
+              Building on the above example, you can create different toast color schemes with our{' '}
+              <a href="https://coreui.io/docs/utilities/colors">color</a> and{' '}
+              <a href="https://coreui.io/docs/utilities/background">background</a> utilities. Here
+              we&#39;ve set <code>color=&#34;primary&#34;</code> and added <code>.text-white</code>{' '}
+              class to the <code>&lt;Ctoast&gt;</code>, and then set <code>white</code> property to
+              our close button. For a crisp edge, we remove the default border with{' '}
+              <code>.border-0</code>.
+            </p>
+            <DocsExample href="components/toast#color-schemes">
+              <CToast
+                autohide={false}
+                color="primary"
+                className="text-white align-items-center"
+                visible={true}
+              >
+                <div className="d-flex">
+                  <CToastBody>Hello, world! This is a toast message.</CToastBody>
+                  <CToastClose className="me-2 m-auto" white />
+                </div>
+              </CToast>
+            </DocsExample>
+          </CCardBody>
+        </CCard>
+      </CCol>
+    </CRow>
+  )
+}
+
+export default Toasts
Index: PlanningMamagement/frontend/src/views/notifications/modals/Modals.js
===================================================================
diff --git a/PlanningMamagement/frontend/src/views/notifications/modals/Modals.js b/PlanningMamagement/frontend/src/views/notifications/modals/Modals.js
new file mode 100644
--- /dev/null	(date 1728391642366)
+++ b/PlanningMamagement/frontend/src/views/notifications/modals/Modals.js	(date 1728391642366)
@@ -0,0 +1,752 @@
+import React, { useState } from 'react'
+import {
+  CButton,
+  CCard,
+  CCardBody,
+  CCardHeader,
+  CCol,
+  CLink,
+  CModal,
+  CModalBody,
+  CModalFooter,
+  CModalHeader,
+  CModalTitle,
+  CPopover,
+  CRow,
+  CTooltip,
+} from '@coreui/react'
+import { DocsExample } from 'src/components'
+
+const LiveDemo = () => {
+  const [visible, setVisible] = useState(false)
+  return (
+    <>
+      <CButton color="primary" onClick={() => setVisible(!visible)}>
+        Launch demo modal
+      </CButton>
+      <CModal visible={visible} onClose={() => setVisible(false)}>
+        <CModalHeader>
+          <CModalTitle>Modal title</CModalTitle>
+        </CModalHeader>
+        <CModalBody>Woohoo, you&#39;re reading this text in a modal!</CModalBody>
+        <CModalFooter>
+          <CButton color="secondary" onClick={() => setVisible(false)}>
+            Close
+          </CButton>
+          <CButton color="primary">Save changes</CButton>
+        </CModalFooter>
+      </CModal>
+    </>
+  )
+}
+
+const StaticBackdrop = () => {
+  const [visible, setVisible] = useState(false)
+  return (
+    <>
+      <CButton color="primary" onClick={() => setVisible(!visible)}>
+        Launch static backdrop modal
+      </CButton>
+      <CModal backdrop="static" visible={visible} onClose={() => setVisible(false)}>
+        <CModalHeader>
+          <CModalTitle>Modal title</CModalTitle>
+        </CModalHeader>
+        <CModalBody>
+          I will not close if you click outside me. Don&#39;teven try to press escape key.
+        </CModalBody>
+        <CModalFooter>
+          <CButton color="secondary" onClick={() => setVisible(false)}>
+            Close
+          </CButton>
+          <CButton color="primary">Save changes</CButton>
+        </CModalFooter>
+      </CModal>
+    </>
+  )
+}
+
+const ScrollingLongContent = () => {
+  const [visible, setVisible] = useState(false)
+  return (
+    <>
+      <CButton color="primary" onClick={() => setVisible(!visible)}>
+        Launch demo modal
+      </CButton>
+      <CModal visible={visible} onClose={() => setVisible(false)}>
+        <CModalHeader>
+          <CModalTitle>Modal title</CModalTitle>
+        </CModalHeader>
+        <CModalBody>
+          <p>
+            Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac facilisis
+            in, egestas eget quam. Morbi leo risus, porta ac consectetur ac, vestibulum at eros.
+          </p>
+          <p>
+            Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Vivamus sagittis
+            lacus vel augue laoreet rutrum faucibus dolor auctor.
+          </p>
+          <p>
+            Aenean lacinia bibendum nulla sed consectetur. Praesent commodo cursus magna, vel
+            scelerisque nisl consectetur et. Donec sed odio dui. Donec ullamcorper nulla non metus
+            auctor fringilla.
+          </p>
+          <p>
+            Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac facilisis
+            in, egestas eget quam. Morbi leo risus, porta ac consectetur ac, vestibulum at eros.
+          </p>
+          <p>
+            Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Vivamus sagittis
+            lacus vel augue laoreet rutrum faucibus dolor auctor.
+          </p>
+          <p>
+            Aenean lacinia bibendum nulla sed consectetur. Praesent commodo cursus magna, vel
+            scelerisque nisl consectetur et. Donec sed odio dui. Donec ullamcorper nulla non metus
+            auctor fringilla.
+          </p>
+          <p>
+            Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac facilisis
+            in, egestas eget quam. Morbi leo risus, porta ac consectetur ac, vestibulum at eros.
+          </p>
+          <p>
+            Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Vivamus sagittis
+            lacus vel augue laoreet rutrum faucibus dolor auctor.
+          </p>
+          <p>
+            Aenean lacinia bibendum nulla sed consectetur. Praesent commodo cursus magna, vel
+            scelerisque nisl consectetur et. Donec sed odio dui. Donec ullamcorper nulla non metus
+            auctor fringilla.
+          </p>
+          <p>
+            Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac facilisis
+            in, egestas eget quam. Morbi leo risus, porta ac consectetur ac, vestibulum at eros.
+          </p>
+          <p>
+            Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Vivamus sagittis
+            lacus vel augue laoreet rutrum faucibus dolor auctor.
+          </p>
+          <p>
+            Aenean lacinia bibendum nulla sed consectetur. Praesent commodo cursus magna, vel
+            scelerisque nisl consectetur et. Donec sed odio dui. Donec ullamcorper nulla non metus
+            auctor fringilla.
+          </p>
+          <p>
+            Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac facilisis
+            in, egestas eget quam. Morbi leo risus, porta ac consectetur ac, vestibulum at eros.
+          </p>
+          <p>
+            Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Vivamus sagittis
+            lacus vel augue laoreet rutrum faucibus dolor auctor.
+          </p>
+          <p>
+            Aenean lacinia bibendum nulla sed consectetur. Praesent commodo cursus magna, vel
+            scelerisque nisl consectetur et. Donec sed odio dui. Donec ullamcorper nulla non metus
+            auctor fringilla.
+          </p>
+          <p>
+            Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac facilisis
+            in, egestas eget quam. Morbi leo risus, porta ac consectetur ac, vestibulum at eros.
+          </p>
+          <p>
+            Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Vivamus sagittis
+            lacus vel augue laoreet rutrum faucibus dolor auctor.
+          </p>
+          <p>
+            Aenean lacinia bibendum nulla sed consectetur. Praesent commodo cursus magna, vel
+            scelerisque nisl consectetur et. Donec sed odio dui. Donec ullamcorper nulla non metus
+            auctor fringilla.
+          </p>
+        </CModalBody>
+        <CModalFooter>
+          <CButton color="secondary" onClick={() => setVisible(false)}>
+            Close
+          </CButton>
+          <CButton color="primary">Save changes</CButton>
+        </CModalFooter>
+      </CModal>
+    </>
+  )
+}
+
+const ScrollingLongContent2 = () => {
+  const [visible, setVisible] = useState(false)
+  return (
+    <>
+      <CButton color="primary" onClick={() => setVisible(!visible)}>
+        Launch demo modal
+      </CButton>
+      <CModal scrollable visible={visible} onClose={() => setVisible(false)}>
+        <CModalHeader>
+          <CModalTitle>Modal title</CModalTitle>
+        </CModalHeader>
+        <CModalBody>
+          <p>
+            Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac facilisis
+            in, egestas eget quam. Morbi leo risus, porta ac consectetur ac, vestibulum at eros.
+          </p>
+          <p>
+            Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Vivamus sagittis
+            lacus vel augue laoreet rutrum faucibus dolor auctor.
+          </p>
+          <p>
+            Aenean lacinia bibendum nulla sed consectetur. Praesent commodo cursus magna, vel
+            scelerisque nisl consectetur et. Donec sed odio dui. Donec ullamcorper nulla non metus
+            auctor fringilla.
+          </p>
+          <p>
+            Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac facilisis
+            in, egestas eget quam. Morbi leo risus, porta ac consectetur ac, vestibulum at eros.
+          </p>
+          <p>
+            Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Vivamus sagittis
+            lacus vel augue laoreet rutrum faucibus dolor auctor.
+          </p>
+          <p>
+            Aenean lacinia bibendum nulla sed consectetur. Praesent commodo cursus magna, vel
+            scelerisque nisl consectetur et. Donec sed odio dui. Donec ullamcorper nulla non metus
+            auctor fringilla.
+          </p>
+          <p>
+            Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac facilisis
+            in, egestas eget quam. Morbi leo risus, porta ac consectetur ac, vestibulum at eros.
+          </p>
+          <p>
+            Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Vivamus sagittis
+            lacus vel augue laoreet rutrum faucibus dolor auctor.
+          </p>
+          <p>
+            Aenean lacinia bibendum nulla sed consectetur. Praesent commodo cursus magna, vel
+            scelerisque nisl consectetur et. Donec sed odio dui. Donec ullamcorper nulla non metus
+            auctor fringilla.
+          </p>
+          <p>
+            Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac facilisis
+            in, egestas eget quam. Morbi leo risus, porta ac consectetur ac, vestibulum at eros.
+          </p>
+          <p>
+            Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Vivamus sagittis
+            lacus vel augue laoreet rutrum faucibus dolor auctor.
+          </p>
+          <p>
+            Aenean lacinia bibendum nulla sed consectetur. Praesent commodo cursus magna, vel
+            scelerisque nisl consectetur et. Donec sed odio dui. Donec ullamcorper nulla non metus
+            auctor fringilla.
+          </p>
+          <p>
+            Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac facilisis
+            in, egestas eget quam. Morbi leo risus, porta ac consectetur ac, vestibulum at eros.
+          </p>
+          <p>
+            Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Vivamus sagittis
+            lacus vel augue laoreet rutrum faucibus dolor auctor.
+          </p>
+          <p>
+            Aenean lacinia bibendum nulla sed consectetur. Praesent commodo cursus magna, vel
+            scelerisque nisl consectetur et. Donec sed odio dui. Donec ullamcorper nulla non metus
+            auctor fringilla.
+          </p>
+          <p>
+            Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac facilisis
+            in, egestas eget quam. Morbi leo risus, porta ac consectetur ac, vestibulum at eros.
+          </p>
+          <p>
+            Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Vivamus sagittis
+            lacus vel augue laoreet rutrum faucibus dolor auctor.
+          </p>
+          <p>
+            Aenean lacinia bibendum nulla sed consectetur. Praesent commodo cursus magna, vel
+            scelerisque nisl consectetur et. Donec sed odio dui. Donec ullamcorper nulla non metus
+            auctor fringilla.
+          </p>
+        </CModalBody>
+        <CModalFooter>
+          <CButton color="secondary" onClick={() => setVisible(false)}>
+            Close
+          </CButton>
+          <CButton color="primary">Save changes</CButton>
+        </CModalFooter>
+      </CModal>
+    </>
+  )
+}
+
+const VerticallyCentered = () => {
+  const [visible, setVisible] = useState(false)
+  return (
+    <>
+      <CButton color="primary" onClick={() => setVisible(!visible)}>
+        Vertically centered modal
+      </CButton>
+      <CModal alignment="center" visible={visible} onClose={() => setVisible(false)}>
+        <CModalHeader>
+          <CModalTitle>Modal title</CModalTitle>
+        </CModalHeader>
+        <CModalBody>
+          Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac facilisis
+          in, egestas eget quam. Morbi leo risus, porta ac consectetur ac, vestibulum at eros.
+        </CModalBody>
+        <CModalFooter>
+          <CButton color="secondary" onClick={() => setVisible(false)}>
+            Close
+          </CButton>
+          <CButton color="primary">Save changes</CButton>
+        </CModalFooter>
+      </CModal>
+    </>
+  )
+}
+
+const VerticallyCentered2 = () => {
+  const [visible, setVisible] = useState(false)
+  return (
+    <>
+      <CButton color="primary" onClick={() => setVisible(!visible)}>
+        Vertically centered scrollable modal
+      </CButton>
+      <CModal alignment="center" scrollable visible={visible} onClose={() => setVisible(false)}>
+        <CModalHeader>
+          <CModalTitle>Modal title</CModalTitle>
+        </CModalHeader>
+        <CModalBody>
+          <p>
+            Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac facilisis
+            in, egestas eget quam. Morbi leo risus, porta ac consectetur ac, vestibulum at eros.
+          </p>
+          <p>
+            Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Vivamus sagittis
+            lacus vel augue laoreet rutrum faucibus dolor auctor.
+          </p>
+          <p>
+            Aenean lacinia bibendum nulla sed consectetur. Praesent commodo cursus magna, vel
+            scelerisque nisl consectetur et. Donec sed odio dui. Donec ullamcorper nulla non metus
+            auctor fringilla.
+          </p>
+          <p>
+            Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac facilisis
+            in, egestas eget quam. Morbi leo risus, porta ac consectetur ac, vestibulum at eros.
+          </p>
+          <p>
+            Praesent commodo cursus magna, vel scelerisque nisl consectetur et. Vivamus sagittis
+            lacus vel augue laoreet rutrum faucibus dolor auctor.
+          </p>
+        </CModalBody>
+        <CModalFooter>
+          <CButton color="secondary" onClick={() => setVisible(false)}>
+            Close
+          </CButton>
+          <CButton color="primary">Save changes</CButton>
+        </CModalFooter>
+      </CModal>
+    </>
+  )
+}
+
+const TooltipsPopovers = () => {
+  const [visible, setVisible] = useState(false)
+  return (
+    <>
+      <CButton color="primary" onClick={() => setVisible(!visible)}>
+        Launch demo modal
+      </CButton>
+      <CModal alignment="center" visible={visible} onClose={() => setVisible(false)}>
+        <CModalHeader>
+          <CModalTitle>Modal title</CModalTitle>
+        </CModalHeader>
+        <CModalBody>
+          <h5>Popover in a modal</h5>
+          <p>
+            This
+            <CPopover title="Popover title" content="Popover body content is set in this property.">
+              <CButton color="primary">button</CButton>
+            </CPopover>{' '}
+            triggers a popover on click.
+          </p>
+          <hr />
+          <h5>Tooltips in a modal</h5>
+          <p>
+            <CTooltip content="Tooltip">
+              <CLink>This link</CLink>
+            </CTooltip>{' '}
+            and
+            <CTooltip content="Tooltip">
+              <CLink>that link</CLink>
+            </CTooltip>{' '}
+            have tooltips on hover.
+          </p>
+        </CModalBody>
+        <CModalFooter>
+          <CButton color="secondary" onClick={() => setVisible(false)}>
+            Close
+          </CButton>
+          <CButton color="primary">Save changes</CButton>
+        </CModalFooter>
+      </CModal>
+    </>
+  )
+}
+
+const OptionalSizes = () => {
+  const [visibleXL, setVisibleXL] = useState(false)
+  const [visibleLg, setVisibleLg] = useState(false)
+  const [visibleSm, setVisibleSm] = useState(false)
+  return (
+    <>
+      <CButton color="primary" onClick={() => setVisibleXL(!visibleXL)}>
+        Extra large modal
+      </CButton>
+      <CButton color="primary" onClick={() => setVisibleLg(!visibleLg)}>
+        Large modal
+      </CButton>
+      <CButton color="primary" onClick={() => setVisibleSm(!visibleSm)}>
+        Small large modal
+      </CButton>
+      <CModal size="xl" visible={visibleXL} onClose={() => setVisibleXL(false)}>
+        <CModalHeader>
+          <CModalTitle>Extra large modal</CModalTitle>
+        </CModalHeader>
+        <CModalBody>...</CModalBody>
+      </CModal>
+      <CModal size="lg" visible={visibleLg} onClose={() => setVisibleLg(false)}>
+        <CModalHeader>
+          <CModalTitle>Large modal</CModalTitle>
+        </CModalHeader>
+        <CModalBody>...</CModalBody>
+      </CModal>
+      <CModal size="sm" visible={visibleSm} onClose={() => setVisibleSm(false)}>
+        <CModalHeader>
+          <CModalTitle>Small modal</CModalTitle>
+        </CModalHeader>
+        <CModalBody>...</CModalBody>
+      </CModal>
+    </>
+  )
+}
+
+const FullscreenModal = () => {
+  const [visible, setVisible] = useState(false)
+  const [visibleSm, setVisibleSm] = useState(false)
+  const [visibleMd, setVisibleMd] = useState(false)
+  const [visibleLg, setVisibleLg] = useState(false)
+  const [visibleXL, setVisibleXL] = useState(false)
+  const [visibleXXL, setVisibleXXL] = useState(false)
+
+  return (
+    <>
+      <CButton color="primary" onClick={() => setVisible(!visible)}>
+        Full screen
+      </CButton>
+      <CButton color="primary" onClick={() => setVisibleSm(!visibleSm)}>
+        Full screen below sm
+      </CButton>
+      <CButton color="primary" onClick={() => setVisibleMd(!visibleMd)}>
+        Full screen below md
+      </CButton>
+      <CButton color="primary" onClick={() => setVisibleLg(!visibleLg)}>
+        Full screen below lg
+      </CButton>
+      <CButton color="primary" onClick={() => setVisibleXL(!visibleXL)}>
+        Full screen below xl
+      </CButton>
+      <CButton color="primary" onClick={() => setVisibleXXL(!visibleXXL)}>
+        Full screen below xxl
+      </CButton>
+      <CModal fullscreen visible={visible} onClose={() => setVisible(false)}>
+        <CModalHeader>
+          <CModalTitle>Full screen</CModalTitle>
+        </CModalHeader>
+        <CModalBody>...</CModalBody>
+      </CModal>
+      <CModal fullscreen="sm" visible={visibleSm} onClose={() => setVisibleSm(false)}>
+        <CModalHeader>
+          <CModalTitle>Full screen below sm</CModalTitle>
+        </CModalHeader>
+        <CModalBody>...</CModalBody>
+      </CModal>
+      <CModal fullscreen="md" visible={visibleMd} onClose={() => setVisibleMd(false)}>
+        <CModalHeader>
+          <CModalTitle>Full screen below md</CModalTitle>
+        </CModalHeader>
+        <CModalBody>...</CModalBody>
+      </CModal>
+      <CModal fullscreen="lg" visible={visibleLg} onClose={() => setVisibleLg(false)}>
+        <CModalHeader>
+          <CModalTitle>Full screen below lg</CModalTitle>
+        </CModalHeader>
+        <CModalBody>...</CModalBody>
+      </CModal>
+      <CModal fullscreen="xl" visible={visibleXL} onClose={() => setVisibleXL(false)}>
+        <CModalHeader>
+          <CModalTitle>Full screen below xl</CModalTitle>
+        </CModalHeader>
+        <CModalBody>...</CModalBody>
+      </CModal>
+      <CModal fullscreen="xxl" visible={visibleXXL} onClose={() => setVisibleXXL(false)}>
+        <CModalHeader>
+          <CModalTitle>Full screen below xxl</CModalTitle>
+        </CModalHeader>
+        <CModalBody>...</CModalBody>
+      </CModal>
+    </>
+  )
+}
+
+const Modals = () => {
+  return (
+    <CRow>
+      <CCol xs={12}>
+        <CCard className="mb-4">
+          <CCardHeader>
+            <strong>React Modal</strong>
+          </CCardHeader>
+          <CCardBody>
+            <p className="text-body-secondary small">
+              Below is a static modal example (meaning its <code>position</code> and{' '}
+              <code>display</code> have been overridden). Included are the modal header, modal body
+              (required for <code>padding</code>), and modal footer (optional). We ask that you
+              include modal headers with dismiss actions whenever possible, or provide another
+              explicit dismiss action.
+            </p>
+            <DocsExample href="components/modal">
+              <CModal
+                className="show d-block position-static"
+                backdrop={false}
+                keyboard={false}
+                portal={false}
+                visible
+              >
+                <CModalHeader>
+                  <CModalTitle>Modal title</CModalTitle>
+                </CModalHeader>
+                <CModalBody>Modal body text goes here.</CModalBody>
+                <CModalFooter>
+                  <CButton color="secondary">Close</CButton>
+                  <CButton color="primary">Save changes</CButton>
+                </CModalFooter>
+              </CModal>
+            </DocsExample>
+          </CCardBody>
+        </CCard>
+      </CCol>
+      <CCol xs={12}>
+        <CCard className="mb-4">
+          <CCardHeader>
+            <strong>React Modal</strong> <small>Live demo</small>
+          </CCardHeader>
+          <CCardBody>
+            <p className="text-body-secondary small">
+              Toggle a working modal demo by clicking the button below. It will slide down and fade
+              in from the top of the page.
+            </p>
+            <DocsExample href="components/modal#live-demo">{LiveDemo()}</DocsExample>
+          </CCardBody>
+        </CCard>
+      </CCol>
+      <CCol xs={12}>
+        <CCard className="mb-4">
+          <CCardHeader>
+            <strong>React Modal</strong> <small>Static backdrop</small>
+          </CCardHeader>
+          <CCardBody>
+            <p className="text-body-secondary small">
+              If you don’t provide an <code>onDimsiss</code> handler to the Modal component, your
+              modal will behave as though the backdrop is static, meaning it will not close when
+              clicking outside it. Click the button below to try it.
+            </p>
+            <DocsExample href="components/modal#static-backdrop">{StaticBackdrop()}</DocsExample>
+          </CCardBody>
+        </CCard>
+      </CCol>
+      <CCol xs={12}>
+        <CCard className="mb-4">
+          <CCardHeader>
+            <strong>React Modal</strong> <small>Scrolling long content</small>
+          </CCardHeader>
+          <CCardBody>
+            <p className="text-body-secondary small">
+              If you don’t provide an <code>onDimsiss</code> handler to the Modal component, your
+              modal will behave as though the backdrop is static, meaning it will not close when
+              clicking outside it. Click the button below to try it.
+            </p>
+            <DocsExample href="components/modal#scrolling-long-content">
+              {ScrollingLongContent()}
+            </DocsExample>
+            <p className="text-body-secondary small">
+              You can also create a scrollable modal that allows scroll the modal body by adding{' '}
+              <code>scrollable</code> prop.
+            </p>
+            <DocsExample href="components/modal#scrolling-long-content">
+              {ScrollingLongContent2()}
+            </DocsExample>
+          </CCardBody>
+        </CCard>
+      </CCol>
+      <CCol xs={12}>
+        <CCard className="mb-4">
+          <CCardHeader>
+            <strong>React Modal</strong> <small>Vertically centered</small>
+          </CCardHeader>
+          <CCardBody>
+            <p className="text-body-secondary small">
+              Add <code>alignment=&#34;center&#34;</code> to <code>&lt;CModal&gt;</code> to
+              vertically center the modal.
+            </p>
+            <DocsExample href="components/modal#vertically-centered">
+              {VerticallyCentered()}
+            </DocsExample>
+            <DocsExample href="components/modal#vertically-centered">
+              {VerticallyCentered2()}
+            </DocsExample>
+          </CCardBody>
+        </CCard>
+      </CCol>
+      <CCol xs={12}>
+        <CCard className="mb-4">
+          <CCardHeader>
+            <strong>React Modal</strong> <small>Tooltips and popovers</small>
+          </CCardHeader>
+          <CCardBody>
+            <p className="text-body-secondary small">
+              <code>&lt;CTooltips&gt;</code> and <code>&lt;CPopovers&gt;</code> can be placed within
+              modals as needed. When modals are closed, any tooltips and popovers within are also
+              automatically dismissed.
+            </p>
+            <DocsExample href="components/modal#tooltips-and-popovers">
+              {TooltipsPopovers()}
+            </DocsExample>
+          </CCardBody>
+        </CCard>
+      </CCol>
+      <CCol xs={12}>
+        <CCard className="mb-4">
+          <CCardHeader>
+            <strong>React Modal</strong> <small>Optional sizes</small>
+          </CCardHeader>
+          <CCardBody>
+            <p className="text-body-secondary small">
+              Modals have three optional sizes, available via modifier classes to be placed on a{' '}
+              <code>&lt;CModal&gt;</code>. These sizes kick in at certain breakpoints to avoid
+              horizontal scrollbars on narrower viewports.
+            </p>
+            <table className="table">
+              <thead>
+                <tr>
+                  <th>Size</th>
+                  <th>Property size</th>
+                  <th>Modal max-width</th>
+                </tr>
+              </thead>
+              <tbody>
+                <tr>
+                  <td>Small</td>
+                  <td>
+                    <code>&#39;sm&#39;</code>
+                  </td>
+                  <td>
+                    <code>300px</code>
+                  </td>
+                </tr>
+                <tr>
+                  <td>Default</td>
+                  <td className="text-body-secondary">None</td>
+                  <td>
+                    <code>500px</code>
+                  </td>
+                </tr>
+                <tr>
+                  <td>Large</td>
+                  <td>
+                    <code>&#39;lg&#39;</code>
+                  </td>
+                  <td>
+                    <code>800px</code>
+                  </td>
+                </tr>
+                <tr>
+                  <td>Extra large</td>
+                  <td>
+                    <code>&#39;xl&#39;</code>
+                  </td>
+                  <td>
+                    <code>1140px</code>
+                  </td>
+                </tr>
+              </tbody>
+            </table>
+            <DocsExample href="components/modal#optional-sizes">{OptionalSizes()}</DocsExample>
+          </CCardBody>
+        </CCard>
+      </CCol>
+      <CCol xs={12}>
+        <CCard className="mb-4">
+          <CCardHeader>
+            <strong>React Modal</strong> <small>Fullscreen Modal</small>
+          </CCardHeader>
+          <CCardBody>
+            <p className="text-body-secondary small">
+              Another override is the option to pop up a modal that covers the user viewport,
+              available via property <code>fullscrean</code>.
+            </p>
+            <table className="table">
+              <thead>
+                <tr>
+                  <th>Property fullscrean</th>
+                  <th>Availability</th>
+                </tr>
+              </thead>
+              <tbody>
+                <tr>
+                  <td>
+                    <code>true</code>
+                  </td>
+                  <td>Always</td>
+                </tr>
+                <tr>
+                  <td>
+                    <code>&#39;sm&#39;</code>
+                  </td>
+                  <td>
+                    Below <code>576px</code>
+                  </td>
+                </tr>
+                <tr>
+                  <td>
+                    <code>&#39;md&#39;</code>
+                  </td>
+                  <td>
+                    Below <code>768px</code>
+                  </td>
+                </tr>
+                <tr>
+                  <td>
+                    <code>&#39;lg&#39;</code>
+                  </td>
+                  <td>
+                    Below <code>992px</code>
+                  </td>
+                </tr>
+                <tr>
+                  <td>
+                    <code>&#39;xl&#39;</code>
+                  </td>
+                  <td>
+                    Below <code>1200px</code>
+                  </td>
+                </tr>
+                <tr>
+                  <td>
+                    <code>&#39;xxl&#39;</code>
+                  </td>
+                  <td>
+                    Below <code>1400px</code>
+                  </td>
+                </tr>
+              </tbody>
+            </table>
+            <DocsExample href="components/modal#fullscreen-modal">{FullscreenModal()}</DocsExample>
+          </CCardBody>
+        </CCard>
+      </CCol>
+    </CRow>
+  )
+}
+
+export default Modals
Index: PlanningMamagement/frontend/.gitattributes
===================================================================
diff --git a/PlanningMamagement/frontend/.gitattributes b/PlanningMamagement/frontend/.gitattributes
new file mode 100644
--- /dev/null	(date 1728391641084)
+++ b/PlanningMamagement/frontend/.gitattributes	(date 1728391641084)
@@ -0,0 +1,2 @@
+# Enforce Unix newlines
+* text=auto eol=lf
Index: PlanningMamagement/frontend/.prettierignore
===================================================================
diff --git a/PlanningMamagement/frontend/.prettierignore b/PlanningMamagement/frontend/.prettierignore
new file mode 100644
--- /dev/null	(date 1728391641111)
+++ b/PlanningMamagement/frontend/.prettierignore	(date 1728391641111)
@@ -0,0 +1,1 @@
+build/
Index: PlanningMamagement/frontend/.eslintrc.js
===================================================================
diff --git a/PlanningMamagement/frontend/.eslintrc.js b/PlanningMamagement/frontend/.eslintrc.js
new file mode 100644
--- /dev/null	(date 1728391641070)
+++ b/PlanningMamagement/frontend/.eslintrc.js	(date 1728391641070)
@@ -0,0 +1,24 @@
+module.exports = {
+  // parser: '@typescript-eslint/parser', // Specifies the ESLint parser
+  parserOptions: {
+    ecmaVersion: 2020, // Allows for the parsing of modern ECMAScript features
+    sourceType: 'module', // Allows for the use of imports
+    ecmaFeatures: {
+      jsx: true, // Allows for the parsing of JSX
+    },
+  },
+  settings: {
+    react: {
+      version: 'detect', // Tells eslint-plugin-react to automatically detect the version of React to use
+    },
+  },
+  extends: [
+    'plugin:react/recommended', // Uses the recommended rules from @eslint-plugin-react
+    'plugin:prettier/recommended', // Enables eslint-plugin-prettier and eslint-config-prettier. This will display prettier errors as ESLint errors. Make sure this is always the last configuration in the extends array.
+  ],
+  plugins: ['react', 'react-hooks'],
+  rules: {
+    // Place to specify ESLint rules. Can be used to overwrite rules specified from the extended configs
+    // e.g. "@typescript-eslint/explicit-function-return-type": "off",
+  },
+}
Index: PlanningMamagement/frontend/vite.config.mjs
===================================================================
diff --git a/PlanningMamagement/frontend/vite.config.mjs b/PlanningMamagement/frontend/vite.config.mjs
new file mode 100644
--- /dev/null	(date 1728391641176)
+++ b/PlanningMamagement/frontend/vite.config.mjs	(date 1728391641176)
@@ -0,0 +1,54 @@
+import { defineConfig } from 'vite'
+import react from '@vitejs/plugin-react'
+import path from 'node:path'
+import autoprefixer from 'autoprefixer'
+
+export default defineConfig(() => {
+  return {
+    base: './',
+    build: {
+      outDir: 'build',
+    },
+    css: {
+      postcss: {
+        plugins: [
+          autoprefixer({}), // add options if needed
+        ],
+      },
+      preprocessorOptions: {
+        scss: {
+          quietDeps: true,
+        },
+      },
+    },
+    esbuild: {
+      loader: 'jsx',
+      include: /src\/.*\.jsx?$/,
+      exclude: [],
+    },
+    optimizeDeps: {
+      force: true,
+      esbuildOptions: {
+        loader: {
+          '.js': 'jsx',
+        },
+      },
+    },
+    plugins: [react()],
+    resolve: {
+      alias: [
+        {
+          find: 'src/',
+          replacement: `${path.resolve(__dirname, 'src')}/`,
+        },
+      ],
+      extensions: ['.mjs', '.js', '.ts', '.jsx', '.tsx', '.json', '.scss'],
+    },
+    server: {
+      port: 3000,
+      proxy: {
+        // https://vitejs.dev/config/server-options.html
+      },
+    },
+  }
+})
Index: PlanningMamagement/frontend/.browserslistrc
===================================================================
diff --git a/PlanningMamagement/frontend/.browserslistrc b/PlanningMamagement/frontend/.browserslistrc
new file mode 100644
--- /dev/null	(date 1728391641044)
+++ b/PlanningMamagement/frontend/.browserslistrc	(date 1728391641044)
@@ -0,0 +1,11 @@
+# https://github.com/browserslist/browserslist#readme
+
+[production]
+>0.2%
+not dead
+not op_mini all
+
+[development]
+last 1 chrome version
+last 1 firefox version
+last 1 safari version
Index: PlanningMamagement/frontend/LICENSE
===================================================================
diff --git a/PlanningMamagement/frontend/LICENSE b/PlanningMamagement/frontend/LICENSE
new file mode 100644
--- /dev/null	(date 1728391641131)
+++ b/PlanningMamagement/frontend/LICENSE	(date 1728391641131)
@@ -0,0 +1,21 @@
+The MIT License (MIT)
+
+Copyright (c) 2024 creativeLabs Łukasz Holeczek.
+
+Permission is hereby granted, free of charge, to any person obtaining a copy
+of this software and associated documentation files (the "Software"), to deal
+in the Software without restriction, including without limitation the rights
+to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
+copies of the Software, and to permit persons to whom the Software is
+furnished to do so, subject to the following conditions:
+
+The above copyright notice and this permission notice shall be included in
+all copies or substantial portions of the Software.
+
+THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
+IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
+FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
+AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
+LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
+OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
+THE SOFTWARE.
Index: PlanningMamagement/frontend/.prettierrc.js
===================================================================
diff --git a/PlanningMamagement/frontend/.prettierrc.js b/PlanningMamagement/frontend/.prettierrc.js
new file mode 100644
--- /dev/null	(date 1728391641122)
+++ b/PlanningMamagement/frontend/.prettierrc.js	(date 1728391641122)
@@ -0,0 +1,7 @@
+module.exports = {
+  semi: false,
+  trailingComma: 'all',
+  singleQuote: true,
+  printWidth: 100,
+  tabWidth: 2,
+}
Index: PlanningMamagement/frontend/index.html
===================================================================
diff --git a/PlanningMamagement/frontend/index.html b/PlanningMamagement/frontend/index.html
new file mode 100644
--- /dev/null	(date 1728391641155)
+++ b/PlanningMamagement/frontend/index.html	(date 1728391641155)
@@ -0,0 +1,29 @@
+<!DOCTYPE html>
+<!--
+* CoreUI Free React.js Admin Template
+* @version v5.2.0
+* @link https://coreui.io/product/free-react-admin-template/
+* Copyright (c) 2024 creativeLabs Łukasz Holeczek
+* Licensed under MIT (https://github.com/coreui/coreui-free-react-admin-template/blob/main/LICENSE)
+-->
+<html lang="en">
+  <head>
+    <meta charset="utf-8">
+    <meta http-equiv="X-UA-Compatible" content="IE=edge">
+    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
+    <meta name="description" content="CoreUI for React - Open Source Bootstrap Admin Template">
+    <meta name="author" content="Łukasz Holeczek">
+    <meta name="keyword" content="Bootstrap,Admin,Template,Open,Source,CSS,SCSS,HTML,RWD,Dashboard,React">
+    <title>CoreUI Free React.js Admin Template</title>
+    <link rel="manifest" href="/manifest.json">
+    <link rel="shortcut icon" href="/favicon.ico">
+  </head>
+  <body>
+    <noscript>
+      You need to enable JavaScript to run this app
+    </noscript>
+    <div id="root"></div>
+    <script type="module" src="/src/index.js"></script>
+    <!-- built files will be auto injected -->
+  </body>
+</html>
Index: PlanningMamagement/frontend/.editorconfig
===================================================================
diff --git a/PlanningMamagement/frontend/.editorconfig b/PlanningMamagement/frontend/.editorconfig
new file mode 100644
--- /dev/null	(date 1728391641056)
+++ b/PlanningMamagement/frontend/.editorconfig	(date 1728391641056)
@@ -0,0 +1,14 @@
+# Editor configuration, see http://editorconfig.org
+root = true
+
+[*]
+charset = utf-8
+end_of_line = lf
+indent_size = 2
+indent_style = space
+insert_final_newline = true
+trim_trailing_whitespace = true
+
+[*.md]
+max_line_length = off
+trim_trailing_whitespace = false
Index: PlanningMamagement/frontend/package-lock.json
===================================================================
diff --git a/PlanningMamagement/frontend/package-lock.json b/PlanningMamagement/frontend/package-lock.json
new file mode 100644
--- /dev/null	(date 1728392069947)
+++ b/PlanningMamagement/frontend/package-lock.json	(date 1728392069947)
@@ -0,0 +1,5228 @@
+{
+  "name": "frontend",
+  "version": "0.1.0",
+  "lockfileVersion": 3,
+  "requires": true,
+  "packages": {
+    "": {
+      "name": "frontend",
+      "version": "0.1.0",
+      "dependencies": {
+        "@coreui/chartjs": "^4.0.0",
+        "@coreui/coreui": "^5.1.2",
+        "@coreui/icons": "^3.0.1",
+        "@coreui/icons-react": "^2.3.0",
+        "@coreui/react": "^5.4.0",
+        "@coreui/react-chartjs": "^3.0.0",
+        "@coreui/utils": "^2.0.2",
+        "@popperjs/core": "^2.11.8",
+        "chart.js": "^4.4.4",
+        "classnames": "^2.5.1",
+        "core-js": "^3.38.1",
+        "prop-types": "^15.8.1",
+        "react": "^18.3.1",
+        "react-dom": "^18.3.1",
+        "react-redux": "^9.1.2",
+        "react-router-dom": "^6.26.2",
+        "redux": "5.0.1",
+        "simplebar-react": "^3.2.6"
+      },
+      "devDependencies": {
+        "@vitejs/plugin-react": "^4.3.1",
+        "autoprefixer": "^10.4.20",
+        "eslint": "^8.57.0",
+        "eslint-config-prettier": "^9.1.0",
+        "eslint-plugin-prettier": "^5.2.1",
+        "eslint-plugin-react": "^7.36.1",
+        "eslint-plugin-react-hooks": "^4.6.2",
+        "postcss": "^8.4.47",
+        "prettier": "3.3.3",
+        "sass": "^1.79.3",
+        "vite": "^5.4.8"
+      }
+    },
+    "node_modules/@ampproject/remapping": {
+      "version": "2.3.0",
+      "resolved": "https://registry.npmjs.org/@ampproject/remapping/-/remapping-2.3.0.tgz",
+      "integrity": "sha512-30iZtAPgz+LTIYoeivqYo853f02jBYSd5uGnGpkFV0M3xOt9aN73erkgYAmZU43x4VfqcnLxW9Kpg3R5LC4YYw==",
+      "dev": true,
+      "license": "Apache-2.0",
+      "dependencies": {
+        "@jridgewell/gen-mapping": "^0.3.5",
+        "@jridgewell/trace-mapping": "^0.3.24"
+      },
+      "engines": {
+        "node": ">=6.0.0"
+      }
+    },
+    "node_modules/@babel/code-frame": {
+      "version": "7.25.7",
+      "resolved": "https://registry.npmjs.org/@babel/code-frame/-/code-frame-7.25.7.tgz",
+      "integrity": "sha512-0xZJFNE5XMpENsgfHYTw8FbX4kv53mFLn2i3XPoq69LyhYSCBJtitaHx9QnsVTrsogI4Z3+HtEfZ2/GFPOtf5g==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "@babel/highlight": "^7.25.7",
+        "picocolors": "^1.0.0"
+      },
+      "engines": {
+        "node": ">=6.9.0"
+      }
+    },
+    "node_modules/@babel/compat-data": {
+      "version": "7.25.7",
+      "resolved": "https://registry.npmjs.org/@babel/compat-data/-/compat-data-7.25.7.tgz",
+      "integrity": "sha512-9ickoLz+hcXCeh7jrcin+/SLWm+GkxE2kTvoYyp38p4WkdFXfQJxDFGWp/YHjiKLPx06z2A7W8XKuqbReXDzsw==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": ">=6.9.0"
+      }
+    },
+    "node_modules/@babel/core": {
+      "version": "7.25.7",
+      "resolved": "https://registry.npmjs.org/@babel/core/-/core-7.25.7.tgz",
+      "integrity": "sha512-yJ474Zv3cwiSOO9nXJuqzvwEeM+chDuQ8GJirw+pZ91sCGCyOZ3dJkVE09fTV0VEVzXyLWhh3G/AolYTPX7Mow==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "@ampproject/remapping": "^2.2.0",
+        "@babel/code-frame": "^7.25.7",
+        "@babel/generator": "^7.25.7",
+        "@babel/helper-compilation-targets": "^7.25.7",
+        "@babel/helper-module-transforms": "^7.25.7",
+        "@babel/helpers": "^7.25.7",
+        "@babel/parser": "^7.25.7",
+        "@babel/template": "^7.25.7",
+        "@babel/traverse": "^7.25.7",
+        "@babel/types": "^7.25.7",
+        "convert-source-map": "^2.0.0",
+        "debug": "^4.1.0",
+        "gensync": "^1.0.0-beta.2",
+        "json5": "^2.2.3",
+        "semver": "^6.3.1"
+      },
+      "engines": {
+        "node": ">=6.9.0"
+      },
+      "funding": {
+        "type": "opencollective",
+        "url": "https://opencollective.com/babel"
+      }
+    },
+    "node_modules/@babel/core/node_modules/semver": {
+      "version": "6.3.1",
+      "resolved": "https://registry.npmjs.org/semver/-/semver-6.3.1.tgz",
+      "integrity": "sha512-BR7VvDCVHO+q2xBEWskxS6DJE1qRnb7DxzUrogb71CWoSficBxYsiAGd+Kl0mmq/MprG9yArRkyrQxTO6XjMzA==",
+      "dev": true,
+      "license": "ISC",
+      "bin": {
+        "semver": "bin/semver.js"
+      }
+    },
+    "node_modules/@babel/generator": {
+      "version": "7.25.7",
+      "resolved": "https://registry.npmjs.org/@babel/generator/-/generator-7.25.7.tgz",
+      "integrity": "sha512-5Dqpl5fyV9pIAD62yK9P7fcA768uVPUyrQmqpqstHWgMma4feF1x/oFysBCVZLY5wJ2GkMUCdsNDnGZrPoR6rA==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "@babel/types": "^7.25.7",
+        "@jridgewell/gen-mapping": "^0.3.5",
+        "@jridgewell/trace-mapping": "^0.3.25",
+        "jsesc": "^3.0.2"
+      },
+      "engines": {
+        "node": ">=6.9.0"
+      }
+    },
+    "node_modules/@babel/helper-compilation-targets": {
+      "version": "7.25.7",
+      "resolved": "https://registry.npmjs.org/@babel/helper-compilation-targets/-/helper-compilation-targets-7.25.7.tgz",
+      "integrity": "sha512-DniTEax0sv6isaw6qSQSfV4gVRNtw2rte8HHM45t9ZR0xILaufBRNkpMifCRiAPyvL4ACD6v0gfCwCmtOQaV4A==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "@babel/compat-data": "^7.25.7",
+        "@babel/helper-validator-option": "^7.25.7",
+        "browserslist": "^4.24.0",
+        "lru-cache": "^5.1.1",
+        "semver": "^6.3.1"
+      },
+      "engines": {
+        "node": ">=6.9.0"
+      }
+    },
+    "node_modules/@babel/helper-compilation-targets/node_modules/semver": {
+      "version": "6.3.1",
+      "resolved": "https://registry.npmjs.org/semver/-/semver-6.3.1.tgz",
+      "integrity": "sha512-BR7VvDCVHO+q2xBEWskxS6DJE1qRnb7DxzUrogb71CWoSficBxYsiAGd+Kl0mmq/MprG9yArRkyrQxTO6XjMzA==",
+      "dev": true,
+      "license": "ISC",
+      "bin": {
+        "semver": "bin/semver.js"
+      }
+    },
+    "node_modules/@babel/helper-module-imports": {
+      "version": "7.25.7",
+      "resolved": "https://registry.npmjs.org/@babel/helper-module-imports/-/helper-module-imports-7.25.7.tgz",
+      "integrity": "sha512-o0xCgpNmRohmnoWKQ0Ij8IdddjyBFE4T2kagL/x6M3+4zUgc+4qTOUBoNe4XxDskt1HPKO007ZPiMgLDq2s7Kw==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "@babel/traverse": "^7.25.7",
+        "@babel/types": "^7.25.7"
+      },
+      "engines": {
+        "node": ">=6.9.0"
+      }
+    },
+    "node_modules/@babel/helper-module-transforms": {
+      "version": "7.25.7",
+      "resolved": "https://registry.npmjs.org/@babel/helper-module-transforms/-/helper-module-transforms-7.25.7.tgz",
+      "integrity": "sha512-k/6f8dKG3yDz/qCwSM+RKovjMix563SLxQFo0UhRNo239SP6n9u5/eLtKD6EAjwta2JHJ49CsD8pms2HdNiMMQ==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "@babel/helper-module-imports": "^7.25.7",
+        "@babel/helper-simple-access": "^7.25.7",
+        "@babel/helper-validator-identifier": "^7.25.7",
+        "@babel/traverse": "^7.25.7"
+      },
+      "engines": {
+        "node": ">=6.9.0"
+      },
+      "peerDependencies": {
+        "@babel/core": "^7.0.0"
+      }
+    },
+    "node_modules/@babel/helper-plugin-utils": {
+      "version": "7.25.7",
+      "resolved": "https://registry.npmjs.org/@babel/helper-plugin-utils/-/helper-plugin-utils-7.25.7.tgz",
+      "integrity": "sha512-eaPZai0PiqCi09pPs3pAFfl/zYgGaE6IdXtYvmf0qlcDTd3WCtO7JWCcRd64e0EQrcYgiHibEZnOGsSY4QSgaw==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": ">=6.9.0"
+      }
+    },
+    "node_modules/@babel/helper-simple-access": {
+      "version": "7.25.7",
+      "resolved": "https://registry.npmjs.org/@babel/helper-simple-access/-/helper-simple-access-7.25.7.tgz",
+      "integrity": "sha512-FPGAkJmyoChQeM+ruBGIDyrT2tKfZJO8NcxdC+CWNJi7N8/rZpSxK7yvBJ5O/nF1gfu5KzN7VKG3YVSLFfRSxQ==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "@babel/traverse": "^7.25.7",
+        "@babel/types": "^7.25.7"
+      },
+      "engines": {
+        "node": ">=6.9.0"
+      }
+    },
+    "node_modules/@babel/helper-string-parser": {
+      "version": "7.25.7",
+      "resolved": "https://registry.npmjs.org/@babel/helper-string-parser/-/helper-string-parser-7.25.7.tgz",
+      "integrity": "sha512-CbkjYdsJNHFk8uqpEkpCvRs3YRp9tY6FmFY7wLMSYuGYkrdUi7r2lc4/wqsvlHoMznX3WJ9IP8giGPq68T/Y6g==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": ">=6.9.0"
+      }
+    },
+    "node_modules/@babel/helper-validator-identifier": {
+      "version": "7.25.7",
+      "resolved": "https://registry.npmjs.org/@babel/helper-validator-identifier/-/helper-validator-identifier-7.25.7.tgz",
+      "integrity": "sha512-AM6TzwYqGChO45oiuPqwL2t20/HdMC1rTPAesnBCgPCSF1x3oN9MVUwQV2iyz4xqWrctwK5RNC8LV22kaQCNYg==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": ">=6.9.0"
+      }
+    },
+    "node_modules/@babel/helper-validator-option": {
+      "version": "7.25.7",
+      "resolved": "https://registry.npmjs.org/@babel/helper-validator-option/-/helper-validator-option-7.25.7.tgz",
+      "integrity": "sha512-ytbPLsm+GjArDYXJ8Ydr1c/KJuutjF2besPNbIZnZ6MKUxi/uTA22t2ymmA4WFjZFpjiAMO0xuuJPqK2nvDVfQ==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": ">=6.9.0"
+      }
+    },
+    "node_modules/@babel/helpers": {
+      "version": "7.25.7",
+      "resolved": "https://registry.npmjs.org/@babel/helpers/-/helpers-7.25.7.tgz",
+      "integrity": "sha512-Sv6pASx7Esm38KQpF/U/OXLwPPrdGHNKoeblRxgZRLXnAtnkEe4ptJPDtAZM7fBLadbc1Q07kQpSiGQ0Jg6tRA==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "@babel/template": "^7.25.7",
+        "@babel/types": "^7.25.7"
+      },
+      "engines": {
+        "node": ">=6.9.0"
+      }
+    },
+    "node_modules/@babel/highlight": {
+      "version": "7.25.7",
+      "resolved": "https://registry.npmjs.org/@babel/highlight/-/highlight-7.25.7.tgz",
+      "integrity": "sha512-iYyACpW3iW8Fw+ZybQK+drQre+ns/tKpXbNESfrhNnPLIklLbXr7MYJ6gPEd0iETGLOK+SxMjVvKb/ffmk+FEw==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "@babel/helper-validator-identifier": "^7.25.7",
+        "chalk": "^2.4.2",
+        "js-tokens": "^4.0.0",
+        "picocolors": "^1.0.0"
+      },
+      "engines": {
+        "node": ">=6.9.0"
+      }
+    },
+    "node_modules/@babel/parser": {
+      "version": "7.25.7",
+      "resolved": "https://registry.npmjs.org/@babel/parser/-/parser-7.25.7.tgz",
+      "integrity": "sha512-aZn7ETtQsjjGG5HruveUK06cU3Hljuhd9Iojm4M8WWv3wLE6OkE5PWbDUkItmMgegmccaITudyuW5RPYrYlgWw==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "@babel/types": "^7.25.7"
+      },
+      "bin": {
+        "parser": "bin/babel-parser.js"
+      },
+      "engines": {
+        "node": ">=6.0.0"
+      }
+    },
+    "node_modules/@babel/plugin-transform-react-jsx-self": {
+      "version": "7.25.7",
+      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-react-jsx-self/-/plugin-transform-react-jsx-self-7.25.7.tgz",
+      "integrity": "sha512-JD9MUnLbPL0WdVK8AWC7F7tTG2OS6u/AKKnsK+NdRhUiVdnzyR1S3kKQCaRLOiaULvUiqK6Z4JQE635VgtCFeg==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "@babel/helper-plugin-utils": "^7.25.7"
+      },
+      "engines": {
+        "node": ">=6.9.0"
+      },
+      "peerDependencies": {
+        "@babel/core": "^7.0.0-0"
+      }
+    },
+    "node_modules/@babel/plugin-transform-react-jsx-source": {
+      "version": "7.25.7",
+      "resolved": "https://registry.npmjs.org/@babel/plugin-transform-react-jsx-source/-/plugin-transform-react-jsx-source-7.25.7.tgz",
+      "integrity": "sha512-S/JXG/KrbIY06iyJPKfxr0qRxnhNOdkNXYBl/rmwgDd72cQLH9tEGkDm/yJPGvcSIUoikzfjMios9i+xT/uv9w==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "@babel/helper-plugin-utils": "^7.25.7"
+      },
+      "engines": {
+        "node": ">=6.9.0"
+      },
+      "peerDependencies": {
+        "@babel/core": "^7.0.0-0"
+      }
+    },
+    "node_modules/@babel/template": {
+      "version": "7.25.7",
+      "resolved": "https://registry.npmjs.org/@babel/template/-/template-7.25.7.tgz",
+      "integrity": "sha512-wRwtAgI3bAS+JGU2upWNL9lSlDcRCqD05BZ1n3X2ONLH1WilFP6O1otQjeMK/1g0pvYcXC7b/qVUB1keofjtZA==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "@babel/code-frame": "^7.25.7",
+        "@babel/parser": "^7.25.7",
+        "@babel/types": "^7.25.7"
+      },
+      "engines": {
+        "node": ">=6.9.0"
+      }
+    },
+    "node_modules/@babel/traverse": {
+      "version": "7.25.7",
+      "resolved": "https://registry.npmjs.org/@babel/traverse/-/traverse-7.25.7.tgz",
+      "integrity": "sha512-jatJPT1Zjqvh/1FyJs6qAHL+Dzb7sTb+xr7Q+gM1b+1oBsMsQQ4FkVKb6dFlJvLlVssqkRzV05Jzervt9yhnzg==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "@babel/code-frame": "^7.25.7",
+        "@babel/generator": "^7.25.7",
+        "@babel/parser": "^7.25.7",
+        "@babel/template": "^7.25.7",
+        "@babel/types": "^7.25.7",
+        "debug": "^4.3.1",
+        "globals": "^11.1.0"
+      },
+      "engines": {
+        "node": ">=6.9.0"
+      }
+    },
+    "node_modules/@babel/types": {
+      "version": "7.25.7",
+      "resolved": "https://registry.npmjs.org/@babel/types/-/types-7.25.7.tgz",
+      "integrity": "sha512-vwIVdXG+j+FOpkwqHRcBgHLYNL7XMkufrlaFvL9o6Ai9sJn9+PdyIL5qa0XzTZw084c+u9LOls53eoZWP/W5WQ==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "@babel/helper-string-parser": "^7.25.7",
+        "@babel/helper-validator-identifier": "^7.25.7",
+        "to-fast-properties": "^2.0.0"
+      },
+      "engines": {
+        "node": ">=6.9.0"
+      }
+    },
+    "node_modules/@coreui/chartjs": {
+      "version": "4.0.0",
+      "resolved": "https://registry.npmjs.org/@coreui/chartjs/-/chartjs-4.0.0.tgz",
+      "integrity": "sha512-gPxmqj6hpC/erZBfyKQ+axWKr1gY4yhj8Dm3WkBp8SG2lUs0lEAQy3XGmmM/42TBTylbq5V4P6jfqim3N0mKmw==",
+      "license": "MIT",
+      "dependencies": {
+        "@coreui/coreui": "^5.0.0",
+        "chart.js": "^4.4.2"
+      }
+    },
+    "node_modules/@coreui/coreui": {
+      "version": "5.1.2",
+      "resolved": "https://registry.npmjs.org/@coreui/coreui/-/coreui-5.1.2.tgz",
+      "integrity": "sha512-ub7KfpLo5OomUQ2Ah6rvSgmX+JzJmJ7XfU951BYpcpveCdAy1GWaKhH83JGVqcKQyHVBe+z8Y5Z5s19WmWzilw==",
+      "funding": [
+        {
+          "type": "opencollective",
+          "url": "https://opencollective.com/coreui"
+        }
+      ],
+      "license": "MIT",
+      "peerDependencies": {
+        "@popperjs/core": "^2.11.8"
+      }
+    },
+    "node_modules/@coreui/icons": {
+      "version": "3.0.1",
+      "resolved": "https://registry.npmjs.org/@coreui/icons/-/icons-3.0.1.tgz",
+      "integrity": "sha512-u9UKEcRMyY9pa4jUoLij8pAR03g5g6TLWV33/Mx2ix8sffyi0eO4fLV8DSTQljDCw938zt7KYog5cVKEAJUxxg==",
+      "license": "MIT"
+    },
+    "node_modules/@coreui/icons-react": {
+      "version": "2.3.0",
+      "resolved": "https://registry.npmjs.org/@coreui/icons-react/-/icons-react-2.3.0.tgz",
+      "integrity": "sha512-s4jjCrtHnqnu30GLcfDbtWxEaB7imBQ5E6w89JzP5Jd6EV6o38tR0RNix4nXRubayJKAvIjlwZWOKEFNG0NM7Q==",
+      "license": "MIT",
+      "peerDependencies": {
+        "react": ">=17",
+        "react-dom": ">=17"
+      }
+    },
+    "node_modules/@coreui/react": {
+      "version": "5.4.0",
+      "resolved": "https://registry.npmjs.org/@coreui/react/-/react-5.4.0.tgz",
+      "integrity": "sha512-weofK1UkOC66llFV444FLEb5GX0+UEY9rrcqotLdftdUYSzWA4aQYCbIgoGbcHLwuvSNtBUqK6vZqQ9lxEZnsA==",
+      "license": "MIT",
+      "dependencies": {
+        "@coreui/coreui": "^5.1.2",
+        "@popperjs/core": "^2.11.8",
+        "prop-types": "^15.8.1"
+      },
+      "peerDependencies": {
+        "react": ">=17",
+        "react-dom": ">=17"
+      }
+    },
+    "node_modules/@coreui/react-chartjs": {
+      "version": "3.0.0",
+      "resolved": "https://registry.npmjs.org/@coreui/react-chartjs/-/react-chartjs-3.0.0.tgz",
+      "integrity": "sha512-65FAxHHwfMp3HY2yej7a0sLgkQJ49v9oPisuwvShrHOo0cuFVaUGKSa1V+M13W/oKsS6AWEFUooAZdsz/WZrAg==",
+      "license": "MIT",
+      "dependencies": {
+        "@coreui/chartjs": "^4.0.0",
+        "chart.js": "^4.4.2"
+      },
+      "peerDependencies": {
+        "react": ">=17",
+        "react-dom": ">=17"
+      }
+    },
+    "node_modules/@coreui/utils": {
+      "version": "2.0.2",
+      "resolved": "https://registry.npmjs.org/@coreui/utils/-/utils-2.0.2.tgz",
+      "integrity": "sha512-tIFmyKzR96vSD3vqtw4H/4rH/Pctghj+Rp9kWncx1ec2vstC+yphcEUmMk/r+Mm86/Tradi0SIcuCaqvhkyqJA==",
+      "license": "MIT"
+    },
+    "node_modules/@esbuild/aix-ppc64": {
+      "version": "0.21.5",
+      "resolved": "https://registry.npmjs.org/@esbuild/aix-ppc64/-/aix-ppc64-0.21.5.tgz",
+      "integrity": "sha512-1SDgH6ZSPTlggy1yI6+Dbkiz8xzpHJEVAlF/AM1tHPLsf5STom9rwtjE4hKAF20FfXXNTFqEYXyJNWh1GiZedQ==",
+      "cpu": [
+        "ppc64"
+      ],
+      "dev": true,
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "aix"
+      ],
+      "engines": {
+        "node": ">=12"
+      }
+    },
+    "node_modules/@esbuild/android-arm": {
+      "version": "0.21.5",
+      "resolved": "https://registry.npmjs.org/@esbuild/android-arm/-/android-arm-0.21.5.tgz",
+      "integrity": "sha512-vCPvzSjpPHEi1siZdlvAlsPxXl7WbOVUBBAowWug4rJHb68Ox8KualB+1ocNvT5fjv6wpkX6o/iEpbDrf68zcg==",
+      "cpu": [
+        "arm"
+      ],
+      "dev": true,
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "android"
+      ],
+      "engines": {
+        "node": ">=12"
+      }
+    },
+    "node_modules/@esbuild/android-arm64": {
+      "version": "0.21.5",
+      "resolved": "https://registry.npmjs.org/@esbuild/android-arm64/-/android-arm64-0.21.5.tgz",
+      "integrity": "sha512-c0uX9VAUBQ7dTDCjq+wdyGLowMdtR/GoC2U5IYk/7D1H1JYC0qseD7+11iMP2mRLN9RcCMRcjC4YMclCzGwS/A==",
+      "cpu": [
+        "arm64"
+      ],
+      "dev": true,
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "android"
+      ],
+      "engines": {
+        "node": ">=12"
+      }
+    },
+    "node_modules/@esbuild/android-x64": {
+      "version": "0.21.5",
+      "resolved": "https://registry.npmjs.org/@esbuild/android-x64/-/android-x64-0.21.5.tgz",
+      "integrity": "sha512-D7aPRUUNHRBwHxzxRvp856rjUHRFW1SdQATKXH2hqA0kAZb1hKmi02OpYRacl0TxIGz/ZmXWlbZgjwWYaCakTA==",
+      "cpu": [
+        "x64"
+      ],
+      "dev": true,
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "android"
+      ],
+      "engines": {
+        "node": ">=12"
+      }
+    },
+    "node_modules/@esbuild/darwin-arm64": {
+      "version": "0.21.5",
+      "resolved": "https://registry.npmjs.org/@esbuild/darwin-arm64/-/darwin-arm64-0.21.5.tgz",
+      "integrity": "sha512-DwqXqZyuk5AiWWf3UfLiRDJ5EDd49zg6O9wclZ7kUMv2WRFr4HKjXp/5t8JZ11QbQfUS6/cRCKGwYhtNAY88kQ==",
+      "cpu": [
+        "arm64"
+      ],
+      "dev": true,
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "darwin"
+      ],
+      "engines": {
+        "node": ">=12"
+      }
+    },
+    "node_modules/@esbuild/darwin-x64": {
+      "version": "0.21.5",
+      "resolved": "https://registry.npmjs.org/@esbuild/darwin-x64/-/darwin-x64-0.21.5.tgz",
+      "integrity": "sha512-se/JjF8NlmKVG4kNIuyWMV/22ZaerB+qaSi5MdrXtd6R08kvs2qCN4C09miupktDitvh8jRFflwGFBQcxZRjbw==",
+      "cpu": [
+        "x64"
+      ],
+      "dev": true,
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "darwin"
+      ],
+      "engines": {
+        "node": ">=12"
+      }
+    },
+    "node_modules/@esbuild/freebsd-arm64": {
+      "version": "0.21.5",
+      "resolved": "https://registry.npmjs.org/@esbuild/freebsd-arm64/-/freebsd-arm64-0.21.5.tgz",
+      "integrity": "sha512-5JcRxxRDUJLX8JXp/wcBCy3pENnCgBR9bN6JsY4OmhfUtIHe3ZW0mawA7+RDAcMLrMIZaf03NlQiX9DGyB8h4g==",
+      "cpu": [
+        "arm64"
+      ],
+      "dev": true,
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "freebsd"
+      ],
+      "engines": {
+        "node": ">=12"
+      }
+    },
+    "node_modules/@esbuild/freebsd-x64": {
+      "version": "0.21.5",
+      "resolved": "https://registry.npmjs.org/@esbuild/freebsd-x64/-/freebsd-x64-0.21.5.tgz",
+      "integrity": "sha512-J95kNBj1zkbMXtHVH29bBriQygMXqoVQOQYA+ISs0/2l3T9/kj42ow2mpqerRBxDJnmkUDCaQT/dfNXWX/ZZCQ==",
+      "cpu": [
+        "x64"
+      ],
+      "dev": true,
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "freebsd"
+      ],
+      "engines": {
+        "node": ">=12"
+      }
+    },
+    "node_modules/@esbuild/linux-arm": {
+      "version": "0.21.5",
+      "resolved": "https://registry.npmjs.org/@esbuild/linux-arm/-/linux-arm-0.21.5.tgz",
+      "integrity": "sha512-bPb5AHZtbeNGjCKVZ9UGqGwo8EUu4cLq68E95A53KlxAPRmUyYv2D6F0uUI65XisGOL1hBP5mTronbgo+0bFcA==",
+      "cpu": [
+        "arm"
+      ],
+      "dev": true,
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "linux"
+      ],
+      "engines": {
+        "node": ">=12"
+      }
+    },
+    "node_modules/@esbuild/linux-arm64": {
+      "version": "0.21.5",
+      "resolved": "https://registry.npmjs.org/@esbuild/linux-arm64/-/linux-arm64-0.21.5.tgz",
+      "integrity": "sha512-ibKvmyYzKsBeX8d8I7MH/TMfWDXBF3db4qM6sy+7re0YXya+K1cem3on9XgdT2EQGMu4hQyZhan7TeQ8XkGp4Q==",
+      "cpu": [
+        "arm64"
+      ],
+      "dev": true,
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "linux"
+      ],
+      "engines": {
+        "node": ">=12"
+      }
+    },
+    "node_modules/@esbuild/linux-ia32": {
+      "version": "0.21.5",
+      "resolved": "https://registry.npmjs.org/@esbuild/linux-ia32/-/linux-ia32-0.21.5.tgz",
+      "integrity": "sha512-YvjXDqLRqPDl2dvRODYmmhz4rPeVKYvppfGYKSNGdyZkA01046pLWyRKKI3ax8fbJoK5QbxblURkwK/MWY18Tg==",
+      "cpu": [
+        "ia32"
+      ],
+      "dev": true,
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "linux"
+      ],
+      "engines": {
+        "node": ">=12"
+      }
+    },
+    "node_modules/@esbuild/linux-loong64": {
+      "version": "0.21.5",
+      "resolved": "https://registry.npmjs.org/@esbuild/linux-loong64/-/linux-loong64-0.21.5.tgz",
+      "integrity": "sha512-uHf1BmMG8qEvzdrzAqg2SIG/02+4/DHB6a9Kbya0XDvwDEKCoC8ZRWI5JJvNdUjtciBGFQ5PuBlpEOXQj+JQSg==",
+      "cpu": [
+        "loong64"
+      ],
+      "dev": true,
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "linux"
+      ],
+      "engines": {
+        "node": ">=12"
+      }
+    },
+    "node_modules/@esbuild/linux-mips64el": {
+      "version": "0.21.5",
+      "resolved": "https://registry.npmjs.org/@esbuild/linux-mips64el/-/linux-mips64el-0.21.5.tgz",
+      "integrity": "sha512-IajOmO+KJK23bj52dFSNCMsz1QP1DqM6cwLUv3W1QwyxkyIWecfafnI555fvSGqEKwjMXVLokcV5ygHW5b3Jbg==",
+      "cpu": [
+        "mips64el"
+      ],
+      "dev": true,
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "linux"
+      ],
+      "engines": {
+        "node": ">=12"
+      }
+    },
+    "node_modules/@esbuild/linux-ppc64": {
+      "version": "0.21.5",
+      "resolved": "https://registry.npmjs.org/@esbuild/linux-ppc64/-/linux-ppc64-0.21.5.tgz",
+      "integrity": "sha512-1hHV/Z4OEfMwpLO8rp7CvlhBDnjsC3CttJXIhBi+5Aj5r+MBvy4egg7wCbe//hSsT+RvDAG7s81tAvpL2XAE4w==",
+      "cpu": [
+        "ppc64"
+      ],
+      "dev": true,
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "linux"
+      ],
+      "engines": {
+        "node": ">=12"
+      }
+    },
+    "node_modules/@esbuild/linux-riscv64": {
+      "version": "0.21.5",
+      "resolved": "https://registry.npmjs.org/@esbuild/linux-riscv64/-/linux-riscv64-0.21.5.tgz",
+      "integrity": "sha512-2HdXDMd9GMgTGrPWnJzP2ALSokE/0O5HhTUvWIbD3YdjME8JwvSCnNGBnTThKGEB91OZhzrJ4qIIxk/SBmyDDA==",
+      "cpu": [
+        "riscv64"
+      ],
+      "dev": true,
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "linux"
+      ],
+      "engines": {
+        "node": ">=12"
+      }
+    },
+    "node_modules/@esbuild/linux-s390x": {
+      "version": "0.21.5",
+      "resolved": "https://registry.npmjs.org/@esbuild/linux-s390x/-/linux-s390x-0.21.5.tgz",
+      "integrity": "sha512-zus5sxzqBJD3eXxwvjN1yQkRepANgxE9lgOW2qLnmr8ikMTphkjgXu1HR01K4FJg8h1kEEDAqDcZQtbrRnB41A==",
+      "cpu": [
+        "s390x"
+      ],
+      "dev": true,
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "linux"
+      ],
+      "engines": {
+        "node": ">=12"
+      }
+    },
+    "node_modules/@esbuild/linux-x64": {
+      "version": "0.21.5",
+      "resolved": "https://registry.npmjs.org/@esbuild/linux-x64/-/linux-x64-0.21.5.tgz",
+      "integrity": "sha512-1rYdTpyv03iycF1+BhzrzQJCdOuAOtaqHTWJZCWvijKD2N5Xu0TtVC8/+1faWqcP9iBCWOmjmhoH94dH82BxPQ==",
+      "cpu": [
+        "x64"
+      ],
+      "dev": true,
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "linux"
+      ],
+      "engines": {
+        "node": ">=12"
+      }
+    },
+    "node_modules/@esbuild/netbsd-x64": {
+      "version": "0.21.5",
+      "resolved": "https://registry.npmjs.org/@esbuild/netbsd-x64/-/netbsd-x64-0.21.5.tgz",
+      "integrity": "sha512-Woi2MXzXjMULccIwMnLciyZH4nCIMpWQAs049KEeMvOcNADVxo0UBIQPfSmxB3CWKedngg7sWZdLvLczpe0tLg==",
+      "cpu": [
+        "x64"
+      ],
+      "dev": true,
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "netbsd"
+      ],
+      "engines": {
+        "node": ">=12"
+      }
+    },
+    "node_modules/@esbuild/openbsd-x64": {
+      "version": "0.21.5",
+      "resolved": "https://registry.npmjs.org/@esbuild/openbsd-x64/-/openbsd-x64-0.21.5.tgz",
+      "integrity": "sha512-HLNNw99xsvx12lFBUwoT8EVCsSvRNDVxNpjZ7bPn947b8gJPzeHWyNVhFsaerc0n3TsbOINvRP2byTZ5LKezow==",
+      "cpu": [
+        "x64"
+      ],
+      "dev": true,
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "openbsd"
+      ],
+      "engines": {
+        "node": ">=12"
+      }
+    },
+    "node_modules/@esbuild/sunos-x64": {
+      "version": "0.21.5",
+      "resolved": "https://registry.npmjs.org/@esbuild/sunos-x64/-/sunos-x64-0.21.5.tgz",
+      "integrity": "sha512-6+gjmFpfy0BHU5Tpptkuh8+uw3mnrvgs+dSPQXQOv3ekbordwnzTVEb4qnIvQcYXq6gzkyTnoZ9dZG+D4garKg==",
+      "cpu": [
+        "x64"
+      ],
+      "dev": true,
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "sunos"
+      ],
+      "engines": {
+        "node": ">=12"
+      }
+    },
+    "node_modules/@esbuild/win32-arm64": {
+      "version": "0.21.5",
+      "resolved": "https://registry.npmjs.org/@esbuild/win32-arm64/-/win32-arm64-0.21.5.tgz",
+      "integrity": "sha512-Z0gOTd75VvXqyq7nsl93zwahcTROgqvuAcYDUr+vOv8uHhNSKROyU961kgtCD1e95IqPKSQKH7tBTslnS3tA8A==",
+      "cpu": [
+        "arm64"
+      ],
+      "dev": true,
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "win32"
+      ],
+      "engines": {
+        "node": ">=12"
+      }
+    },
+    "node_modules/@esbuild/win32-ia32": {
+      "version": "0.21.5",
+      "resolved": "https://registry.npmjs.org/@esbuild/win32-ia32/-/win32-ia32-0.21.5.tgz",
+      "integrity": "sha512-SWXFF1CL2RVNMaVs+BBClwtfZSvDgtL//G/smwAc5oVK/UPu2Gu9tIaRgFmYFFKrmg3SyAjSrElf0TiJ1v8fYA==",
+      "cpu": [
+        "ia32"
+      ],
+      "dev": true,
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "win32"
+      ],
+      "engines": {
+        "node": ">=12"
+      }
+    },
+    "node_modules/@esbuild/win32-x64": {
+      "version": "0.21.5",
+      "resolved": "https://registry.npmjs.org/@esbuild/win32-x64/-/win32-x64-0.21.5.tgz",
+      "integrity": "sha512-tQd/1efJuzPC6rCFwEvLtci/xNFcTZknmXs98FYDfGE4wP9ClFV98nyKrzJKVPMhdDnjzLhdUyMX4PsQAPjwIw==",
+      "cpu": [
+        "x64"
+      ],
+      "dev": true,
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "win32"
+      ],
+      "engines": {
+        "node": ">=12"
+      }
+    },
+    "node_modules/@eslint-community/eslint-utils": {
+      "version": "4.4.0",
+      "resolved": "https://registry.npmjs.org/@eslint-community/eslint-utils/-/eslint-utils-4.4.0.tgz",
+      "integrity": "sha512-1/sA4dwrzBAyeUoQ6oxahHKmrZvsnLCg4RfxW3ZFGGmQkSNQPFNLV9CUEFQP1x9EYXHTo5p6xdhZM1Ne9p/AfA==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "eslint-visitor-keys": "^3.3.0"
+      },
+      "engines": {
+        "node": "^12.22.0 || ^14.17.0 || >=16.0.0"
+      },
+      "peerDependencies": {
+        "eslint": "^6.0.0 || ^7.0.0 || >=8.0.0"
+      }
+    },
+    "node_modules/@eslint-community/regexpp": {
+      "version": "4.11.1",
+      "resolved": "https://registry.npmjs.org/@eslint-community/regexpp/-/regexpp-4.11.1.tgz",
+      "integrity": "sha512-m4DVN9ZqskZoLU5GlWZadwDnYo3vAEydiUayB9widCl9ffWx2IvPnp6n3on5rJmziJSw9Bv+Z3ChDVdMwXCY8Q==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": "^12.0.0 || ^14.0.0 || >=16.0.0"
+      }
+    },
+    "node_modules/@eslint/eslintrc": {
+      "version": "2.1.4",
+      "resolved": "https://registry.npmjs.org/@eslint/eslintrc/-/eslintrc-2.1.4.tgz",
+      "integrity": "sha512-269Z39MS6wVJtsoUl10L60WdkhJVdPG24Q4eZTH3nnF6lpvSShEK3wQjDX9JRWAUPvPh7COouPpU9IrqaZFvtQ==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "ajv": "^6.12.4",
+        "debug": "^4.3.2",
+        "espree": "^9.6.0",
+        "globals": "^13.19.0",
+        "ignore": "^5.2.0",
+        "import-fresh": "^3.2.1",
+        "js-yaml": "^4.1.0",
+        "minimatch": "^3.1.2",
+        "strip-json-comments": "^3.1.1"
+      },
+      "engines": {
+        "node": "^12.22.0 || ^14.17.0 || >=16.0.0"
+      },
+      "funding": {
+        "url": "https://opencollective.com/eslint"
+      }
+    },
+    "node_modules/@eslint/eslintrc/node_modules/argparse": {
+      "version": "2.0.1",
+      "resolved": "https://registry.npmjs.org/argparse/-/argparse-2.0.1.tgz",
+      "integrity": "sha512-8+9WqebbFzpX9OR+Wa6O29asIogeRMzcGtAINdpMHHyAg10f05aSFVBbcEqGf/PXw1EjAZ+q2/bEBg3DvurK3Q==",
+      "dev": true,
+      "license": "Python-2.0"
+    },
+    "node_modules/@eslint/eslintrc/node_modules/globals": {
+      "version": "13.24.0",
+      "resolved": "https://registry.npmjs.org/globals/-/globals-13.24.0.tgz",
+      "integrity": "sha512-AhO5QUcj8llrbG09iWhPU2B204J1xnPeL8kQmVorSsy+Sjj1sk8gIyh6cUocGmH4L0UuhAJy+hJMRA4mgA4mFQ==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "type-fest": "^0.20.2"
+      },
+      "engines": {
+        "node": ">=8"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/sindresorhus"
+      }
+    },
+    "node_modules/@eslint/eslintrc/node_modules/js-yaml": {
+      "version": "4.1.0",
+      "resolved": "https://registry.npmjs.org/js-yaml/-/js-yaml-4.1.0.tgz",
+      "integrity": "sha512-wpxZs9NoxZaJESJGIZTyDEaYpl0FKSA+FB9aJiyemKhMwkxQg63h4T1KJgUGHpTqPDNRcmmYLugrRjJlBtWvRA==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "argparse": "^2.0.1"
+      },
+      "bin": {
+        "js-yaml": "bin/js-yaml.js"
+      }
+    },
+    "node_modules/@eslint/eslintrc/node_modules/type-fest": {
+      "version": "0.20.2",
+      "resolved": "https://registry.npmjs.org/type-fest/-/type-fest-0.20.2.tgz",
+      "integrity": "sha512-Ne+eE4r0/iWnpAxD852z3A+N0Bt5RN//NjJwRd2VFHEmrywxf5vsZlh4R6lixl6B+wz/8d+maTSAkN1FIkI3LQ==",
+      "dev": true,
+      "license": "(MIT OR CC0-1.0)",
+      "engines": {
+        "node": ">=10"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/sindresorhus"
+      }
+    },
+    "node_modules/@eslint/js": {
+      "version": "8.57.1",
+      "resolved": "https://registry.npmjs.org/@eslint/js/-/js-8.57.1.tgz",
+      "integrity": "sha512-d9zaMRSTIKDLhctzH12MtXvJKSSUhaHcjV+2Z+GK+EEY7XKpP5yR4x+N3TAcHTcu963nIr+TMcCb4DBCYX1z6Q==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": "^12.22.0 || ^14.17.0 || >=16.0.0"
+      }
+    },
+    "node_modules/@humanwhocodes/config-array": {
+      "version": "0.13.0",
+      "resolved": "https://registry.npmjs.org/@humanwhocodes/config-array/-/config-array-0.13.0.tgz",
+      "integrity": "sha512-DZLEEqFWQFiyK6h5YIeynKx7JlvCYWL0cImfSRXZ9l4Sg2efkFGTuFf6vzXjK1cq6IYkU+Eg/JizXw+TD2vRNw==",
+      "deprecated": "Use @eslint/config-array instead",
+      "dev": true,
+      "license": "Apache-2.0",
+      "dependencies": {
+        "@humanwhocodes/object-schema": "^2.0.3",
+        "debug": "^4.3.1",
+        "minimatch": "^3.0.5"
+      },
+      "engines": {
+        "node": ">=10.10.0"
+      }
+    },
+    "node_modules/@humanwhocodes/module-importer": {
+      "version": "1.0.1",
+      "resolved": "https://registry.npmjs.org/@humanwhocodes/module-importer/-/module-importer-1.0.1.tgz",
+      "integrity": "sha512-bxveV4V8v5Yb4ncFTT3rPSgZBOpCkjfK0y4oVVVJwIuDVBRMDXrPyXRL988i5ap9m9bnyEEjWfm5WkBmtffLfA==",
+      "dev": true,
+      "license": "Apache-2.0",
+      "engines": {
+        "node": ">=12.22"
+      },
+      "funding": {
+        "type": "github",
+        "url": "https://github.com/sponsors/nzakas"
+      }
+    },
+    "node_modules/@humanwhocodes/object-schema": {
+      "version": "2.0.3",
+      "resolved": "https://registry.npmjs.org/@humanwhocodes/object-schema/-/object-schema-2.0.3.tgz",
+      "integrity": "sha512-93zYdMES/c1D69yZiKDBj0V24vqNzB/koF26KPaagAfd3P/4gUlh3Dys5ogAK+Exi9QyzlD8x/08Zt7wIKcDcA==",
+      "deprecated": "Use @eslint/object-schema instead",
+      "dev": true,
+      "license": "BSD-3-Clause"
+    },
+    "node_modules/@jridgewell/gen-mapping": {
+      "version": "0.3.5",
+      "resolved": "https://registry.npmjs.org/@jridgewell/gen-mapping/-/gen-mapping-0.3.5.tgz",
+      "integrity": "sha512-IzL8ZoEDIBRWEzlCcRhOaCupYyN5gdIK+Q6fbFdPDg6HqX6jpkItn7DFIpW9LQzXG6Df9sA7+OKnq0qlz/GaQg==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "@jridgewell/set-array": "^1.2.1",
+        "@jridgewell/sourcemap-codec": "^1.4.10",
+        "@jridgewell/trace-mapping": "^0.3.24"
+      },
+      "engines": {
+        "node": ">=6.0.0"
+      }
+    },
+    "node_modules/@jridgewell/resolve-uri": {
+      "version": "3.1.2",
+      "resolved": "https://registry.npmjs.org/@jridgewell/resolve-uri/-/resolve-uri-3.1.2.tgz",
+      "integrity": "sha512-bRISgCIjP20/tbWSPWMEi54QVPRZExkuD9lJL+UIxUKtwVJA8wW1Trb1jMs1RFXo1CBTNZ/5hpC9QvmKWdopKw==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": ">=6.0.0"
+      }
+    },
+    "node_modules/@jridgewell/set-array": {
+      "version": "1.2.1",
+      "resolved": "https://registry.npmjs.org/@jridgewell/set-array/-/set-array-1.2.1.tgz",
+      "integrity": "sha512-R8gLRTZeyp03ymzP/6Lil/28tGeGEzhx1q2k703KGWRAI1VdvPIXdG70VJc2pAMw3NA6JKL5hhFu1sJX0Mnn/A==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": ">=6.0.0"
+      }
+    },
+    "node_modules/@jridgewell/source-map": {
+      "version": "0.3.6",
+      "resolved": "https://registry.npmjs.org/@jridgewell/source-map/-/source-map-0.3.6.tgz",
+      "integrity": "sha512-1ZJTZebgqllO79ue2bm3rIGud/bOe0pP5BjSRCRxxYkEZS8STV7zN84UBbiYu7jy+eCKSnVIUgoWWE/tt+shMQ==",
+      "dev": true,
+      "license": "MIT",
+      "optional": true,
+      "peer": true,
+      "dependencies": {
+        "@jridgewell/gen-mapping": "^0.3.5",
+        "@jridgewell/trace-mapping": "^0.3.25"
+      }
+    },
+    "node_modules/@jridgewell/sourcemap-codec": {
+      "version": "1.5.0",
+      "resolved": "https://registry.npmjs.org/@jridgewell/sourcemap-codec/-/sourcemap-codec-1.5.0.tgz",
+      "integrity": "sha512-gv3ZRaISU3fjPAgNsriBRqGWQL6quFx04YMPW/zD8XMLsU32mhCCbfbO6KZFLjvYpCZ8zyDEgqsgf+PwPaM7GQ==",
+      "dev": true,
+      "license": "MIT"
+    },
+    "node_modules/@jridgewell/trace-mapping": {
+      "version": "0.3.25",
+      "resolved": "https://registry.npmjs.org/@jridgewell/trace-mapping/-/trace-mapping-0.3.25.tgz",
+      "integrity": "sha512-vNk6aEwybGtawWmy/PzwnGDOjCkLWSD2wqvjGGAgOAwCGWySYXfYoxt00IJkTF+8Lb57DwOb3Aa0o9CApepiYQ==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "@jridgewell/resolve-uri": "^3.1.0",
+        "@jridgewell/sourcemap-codec": "^1.4.14"
+      }
+    },
+    "node_modules/@kurkle/color": {
+      "version": "0.3.2",
+      "resolved": "https://registry.npmjs.org/@kurkle/color/-/color-0.3.2.tgz",
+      "integrity": "sha512-fuscdXJ9G1qb7W8VdHi+IwRqij3lBkosAm4ydQtEmbY58OzHXqQhvlxqEkoz0yssNVn38bcpRWgA9PP+OGoisw==",
+      "license": "MIT"
+    },
+    "node_modules/@nodelib/fs.scandir": {
+      "version": "2.1.5",
+      "resolved": "https://registry.npmjs.org/@nodelib/fs.scandir/-/fs.scandir-2.1.5.tgz",
+      "integrity": "sha512-vq24Bq3ym5HEQm2NKCr3yXDwjc7vTsEThRDnkp2DK9p1uqLR+DHurm/NOTo0KG7HYHU7eppKZj3MyqYuMBf62g==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "@nodelib/fs.stat": "2.0.5",
+        "run-parallel": "^1.1.9"
+      },
+      "engines": {
+        "node": ">= 8"
+      }
+    },
+    "node_modules/@nodelib/fs.stat": {
+      "version": "2.0.5",
+      "resolved": "https://registry.npmjs.org/@nodelib/fs.stat/-/fs.stat-2.0.5.tgz",
+      "integrity": "sha512-RkhPPp2zrqDAQA/2jNhnztcPAlv64XdhIp7a7454A5ovI7Bukxgt7MX7udwAu3zg1DcpPU0rz3VV1SeaqvY4+A==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": ">= 8"
+      }
+    },
+    "node_modules/@nodelib/fs.walk": {
+      "version": "1.2.8",
+      "resolved": "https://registry.npmjs.org/@nodelib/fs.walk/-/fs.walk-1.2.8.tgz",
+      "integrity": "sha512-oGB+UxlgWcgQkgwo8GcEGwemoTFt3FIO9ababBmaGwXIoBKZ+GTy0pP185beGg7Llih/NSHSV2XAs1lnznocSg==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "@nodelib/fs.scandir": "2.1.5",
+        "fastq": "^1.6.0"
+      },
+      "engines": {
+        "node": ">= 8"
+      }
+    },
+    "node_modules/@pkgr/core": {
+      "version": "0.1.1",
+      "resolved": "https://registry.npmjs.org/@pkgr/core/-/core-0.1.1.tgz",
+      "integrity": "sha512-cq8o4cWH0ibXh9VGi5P20Tu9XF/0fFXl9EUinr9QfTM7a7p0oTA4iJRCQWppXR1Pg8dSM0UCItCkPwsk9qWWYA==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": "^12.20.0 || ^14.18.0 || >=16.0.0"
+      },
+      "funding": {
+        "url": "https://opencollective.com/unts"
+      }
+    },
+    "node_modules/@popperjs/core": {
+      "version": "2.11.8",
+      "resolved": "https://registry.npmjs.org/@popperjs/core/-/core-2.11.8.tgz",
+      "integrity": "sha512-P1st0aksCrn9sGZhp8GMYwBnQsbvAWsZAX44oXNNvLHGqAOcoVxmjZiohstwQ7SqKnbR47akdNi+uleWD8+g6A==",
+      "license": "MIT",
+      "funding": {
+        "type": "opencollective",
+        "url": "https://opencollective.com/popperjs"
+      }
+    },
+    "node_modules/@remix-run/router": {
+      "version": "1.19.2",
+      "resolved": "https://registry.npmjs.org/@remix-run/router/-/router-1.19.2.tgz",
+      "integrity": "sha512-baiMx18+IMuD1yyvOGaHM9QrVUPGGG0jC+z+IPHnRJWUAUvaKuWKyE8gjDj2rzv3sz9zOGoRSPgeBVHRhZnBlA==",
+      "license": "MIT",
+      "engines": {
+        "node": ">=14.0.0"
+      }
+    },
+    "node_modules/@rollup/rollup-android-arm-eabi": {
+      "version": "4.24.0",
+      "resolved": "https://registry.npmjs.org/@rollup/rollup-android-arm-eabi/-/rollup-android-arm-eabi-4.24.0.tgz",
+      "integrity": "sha512-Q6HJd7Y6xdB48x8ZNVDOqsbh2uByBhgK8PiQgPhwkIw/HC/YX5Ghq2mQY5sRMZWHb3VsFkWooUVOZHKr7DmDIA==",
+      "cpu": [
+        "arm"
+      ],
+      "dev": true,
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "android"
+      ]
+    },
+    "node_modules/@rollup/rollup-android-arm64": {
+      "version": "4.24.0",
+      "resolved": "https://registry.npmjs.org/@rollup/rollup-android-arm64/-/rollup-android-arm64-4.24.0.tgz",
+      "integrity": "sha512-ijLnS1qFId8xhKjT81uBHuuJp2lU4x2yxa4ctFPtG+MqEE6+C5f/+X/bStmxapgmwLwiL3ih122xv8kVARNAZA==",
+      "cpu": [
+        "arm64"
+      ],
+      "dev": true,
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "android"
+      ]
+    },
+    "node_modules/@rollup/rollup-darwin-arm64": {
+      "version": "4.24.0",
+      "resolved": "https://registry.npmjs.org/@rollup/rollup-darwin-arm64/-/rollup-darwin-arm64-4.24.0.tgz",
+      "integrity": "sha512-bIv+X9xeSs1XCk6DVvkO+S/z8/2AMt/2lMqdQbMrmVpgFvXlmde9mLcbQpztXm1tajC3raFDqegsH18HQPMYtA==",
+      "cpu": [
+        "arm64"
+      ],
+      "dev": true,
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "darwin"
+      ]
+    },
+    "node_modules/@rollup/rollup-darwin-x64": {
+      "version": "4.24.0",
+      "resolved": "https://registry.npmjs.org/@rollup/rollup-darwin-x64/-/rollup-darwin-x64-4.24.0.tgz",
+      "integrity": "sha512-X6/nOwoFN7RT2svEQWUsW/5C/fYMBe4fnLK9DQk4SX4mgVBiTA9h64kjUYPvGQ0F/9xwJ5U5UfTbl6BEjaQdBQ==",
+      "cpu": [
+        "x64"
+      ],
+      "dev": true,
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "darwin"
+      ]
+    },
+    "node_modules/@rollup/rollup-linux-arm-gnueabihf": {
+      "version": "4.24.0",
+      "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-arm-gnueabihf/-/rollup-linux-arm-gnueabihf-4.24.0.tgz",
+      "integrity": "sha512-0KXvIJQMOImLCVCz9uvvdPgfyWo93aHHp8ui3FrtOP57svqrF/roSSR5pjqL2hcMp0ljeGlU4q9o/rQaAQ3AYA==",
+      "cpu": [
+        "arm"
+      ],
+      "dev": true,
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "linux"
+      ]
+    },
+    "node_modules/@rollup/rollup-linux-arm-musleabihf": {
+      "version": "4.24.0",
+      "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-arm-musleabihf/-/rollup-linux-arm-musleabihf-4.24.0.tgz",
+      "integrity": "sha512-it2BW6kKFVh8xk/BnHfakEeoLPv8STIISekpoF+nBgWM4d55CZKc7T4Dx1pEbTnYm/xEKMgy1MNtYuoA8RFIWw==",
+      "cpu": [
+        "arm"
+      ],
+      "dev": true,
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "linux"
+      ]
+    },
+    "node_modules/@rollup/rollup-linux-arm64-gnu": {
+      "version": "4.24.0",
+      "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-arm64-gnu/-/rollup-linux-arm64-gnu-4.24.0.tgz",
+      "integrity": "sha512-i0xTLXjqap2eRfulFVlSnM5dEbTVque/3Pi4g2y7cxrs7+a9De42z4XxKLYJ7+OhE3IgxvfQM7vQc43bwTgPwA==",
+      "cpu": [
+        "arm64"
+      ],
+      "dev": true,
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "linux"
+      ]
+    },
+    "node_modules/@rollup/rollup-linux-arm64-musl": {
+      "version": "4.24.0",
+      "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-arm64-musl/-/rollup-linux-arm64-musl-4.24.0.tgz",
+      "integrity": "sha512-9E6MKUJhDuDh604Qco5yP/3qn3y7SLXYuiC0Rpr89aMScS2UAmK1wHP2b7KAa1nSjWJc/f/Lc0Wl1L47qjiyQw==",
+      "cpu": [
+        "arm64"
+      ],
+      "dev": true,
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "linux"
+      ]
+    },
+    "node_modules/@rollup/rollup-linux-powerpc64le-gnu": {
+      "version": "4.24.0",
+      "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-powerpc64le-gnu/-/rollup-linux-powerpc64le-gnu-4.24.0.tgz",
+      "integrity": "sha512-2XFFPJ2XMEiF5Zi2EBf4h73oR1V/lycirxZxHZNc93SqDN/IWhYYSYj8I9381ikUFXZrz2v7r2tOVk2NBwxrWw==",
+      "cpu": [
+        "ppc64"
+      ],
+      "dev": true,
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "linux"
+      ]
+    },
+    "node_modules/@rollup/rollup-linux-riscv64-gnu": {
+      "version": "4.24.0",
+      "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-riscv64-gnu/-/rollup-linux-riscv64-gnu-4.24.0.tgz",
+      "integrity": "sha512-M3Dg4hlwuntUCdzU7KjYqbbd+BLq3JMAOhCKdBE3TcMGMZbKkDdJ5ivNdehOssMCIokNHFOsv7DO4rlEOfyKpg==",
+      "cpu": [
+        "riscv64"
+      ],
+      "dev": true,
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "linux"
+      ]
+    },
+    "node_modules/@rollup/rollup-linux-s390x-gnu": {
+      "version": "4.24.0",
+      "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-s390x-gnu/-/rollup-linux-s390x-gnu-4.24.0.tgz",
+      "integrity": "sha512-mjBaoo4ocxJppTorZVKWFpy1bfFj9FeCMJqzlMQGjpNPY9JwQi7OuS1axzNIk0nMX6jSgy6ZURDZ2w0QW6D56g==",
+      "cpu": [
+        "s390x"
+      ],
+      "dev": true,
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "linux"
+      ]
+    },
+    "node_modules/@rollup/rollup-linux-x64-gnu": {
+      "version": "4.24.0",
+      "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-x64-gnu/-/rollup-linux-x64-gnu-4.24.0.tgz",
+      "integrity": "sha512-ZXFk7M72R0YYFN5q13niV0B7G8/5dcQ9JDp8keJSfr3GoZeXEoMHP/HlvqROA3OMbMdfr19IjCeNAnPUG93b6A==",
+      "cpu": [
+        "x64"
+      ],
+      "dev": true,
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "linux"
+      ]
+    },
+    "node_modules/@rollup/rollup-linux-x64-musl": {
+      "version": "4.24.0",
+      "resolved": "https://registry.npmjs.org/@rollup/rollup-linux-x64-musl/-/rollup-linux-x64-musl-4.24.0.tgz",
+      "integrity": "sha512-w1i+L7kAXZNdYl+vFvzSZy8Y1arS7vMgIy8wusXJzRrPyof5LAb02KGr1PD2EkRcl73kHulIID0M501lN+vobQ==",
+      "cpu": [
+        "x64"
+      ],
+      "dev": true,
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "linux"
+      ]
+    },
+    "node_modules/@rollup/rollup-win32-arm64-msvc": {
+      "version": "4.24.0",
+      "resolved": "https://registry.npmjs.org/@rollup/rollup-win32-arm64-msvc/-/rollup-win32-arm64-msvc-4.24.0.tgz",
+      "integrity": "sha512-VXBrnPWgBpVDCVY6XF3LEW0pOU51KbaHhccHw6AS6vBWIC60eqsH19DAeeObl+g8nKAz04QFdl/Cefta0xQtUQ==",
+      "cpu": [
+        "arm64"
+      ],
+      "dev": true,
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "win32"
+      ]
+    },
+    "node_modules/@rollup/rollup-win32-ia32-msvc": {
+      "version": "4.24.0",
+      "resolved": "https://registry.npmjs.org/@rollup/rollup-win32-ia32-msvc/-/rollup-win32-ia32-msvc-4.24.0.tgz",
+      "integrity": "sha512-xrNcGDU0OxVcPTH/8n/ShH4UevZxKIO6HJFK0e15XItZP2UcaiLFd5kiX7hJnqCbSztUF8Qot+JWBC/QXRPYWQ==",
+      "cpu": [
+        "ia32"
+      ],
+      "dev": true,
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "win32"
+      ]
+    },
+    "node_modules/@rollup/rollup-win32-x64-msvc": {
+      "version": "4.24.0",
+      "resolved": "https://registry.npmjs.org/@rollup/rollup-win32-x64-msvc/-/rollup-win32-x64-msvc-4.24.0.tgz",
+      "integrity": "sha512-fbMkAF7fufku0N2dE5TBXcNlg0pt0cJue4xBRE2Qc5Vqikxr4VCgKj/ht6SMdFcOacVA9rqF70APJ8RN/4vMJw==",
+      "cpu": [
+        "x64"
+      ],
+      "dev": true,
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "win32"
+      ]
+    },
+    "node_modules/@types/babel__core": {
+      "version": "7.20.5",
+      "resolved": "https://registry.npmjs.org/@types/babel__core/-/babel__core-7.20.5.tgz",
+      "integrity": "sha512-qoQprZvz5wQFJwMDqeseRXWv3rqMvhgpbXFfVyWhbx9X47POIA6i/+dXefEmZKoAgOaTdaIgNSMqMIU61yRyzA==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "@babel/parser": "^7.20.7",
+        "@babel/types": "^7.20.7",
+        "@types/babel__generator": "*",
+        "@types/babel__template": "*",
+        "@types/babel__traverse": "*"
+      }
+    },
+    "node_modules/@types/babel__generator": {
+      "version": "7.6.8",
+      "resolved": "https://registry.npmjs.org/@types/babel__generator/-/babel__generator-7.6.8.tgz",
+      "integrity": "sha512-ASsj+tpEDsEiFr1arWrlN6V3mdfjRMZt6LtK/Vp/kreFLnr5QH5+DhvD5nINYZXzwJvXeGq+05iUXcAzVrqWtw==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "@babel/types": "^7.0.0"
+      }
+    },
+    "node_modules/@types/babel__template": {
+      "version": "7.4.4",
+      "resolved": "https://registry.npmjs.org/@types/babel__template/-/babel__template-7.4.4.tgz",
+      "integrity": "sha512-h/NUaSyG5EyxBIp8YRxo4RMe2/qQgvyowRwVMzhYhBCONbW8PUsg4lkFMrhgZhUe5z3L3MiLDuvyJ/CaPa2A8A==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "@babel/parser": "^7.1.0",
+        "@babel/types": "^7.0.0"
+      }
+    },
+    "node_modules/@types/babel__traverse": {
+      "version": "7.20.6",
+      "resolved": "https://registry.npmjs.org/@types/babel__traverse/-/babel__traverse-7.20.6.tgz",
+      "integrity": "sha512-r1bzfrm0tomOI8g1SzvCaQHo6Lcv6zu0EA+W2kHrt8dyrHQxGzBBL4kdkzIS+jBMV+EYcMAEAqXqYaLJq5rOZg==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "@babel/types": "^7.20.7"
+      }
+    },
+    "node_modules/@types/eslint": {
+      "version": "8.56.12",
+      "resolved": "https://registry.npmjs.org/@types/eslint/-/eslint-8.56.12.tgz",
+      "integrity": "sha512-03ruubjWyOHlmljCVoxSuNDdmfZDzsrrz0P2LeJsOXr+ZwFQ+0yQIwNCwt/GYhV7Z31fgtXJTAEs+FYlEL851g==",
+      "dev": true,
+      "license": "MIT",
+      "optional": true,
+      "peer": true,
+      "dependencies": {
+        "@types/estree": "*",
+        "@types/json-schema": "*"
+      }
+    },
+    "node_modules/@types/estree": {
+      "version": "1.0.6",
+      "resolved": "https://registry.npmjs.org/@types/estree/-/estree-1.0.6.tgz",
+      "integrity": "sha512-AYnb1nQyY49te+VRAVgmzfcgjYS91mY5P0TKUDCLEM+gNnA+3T6rWITXRLYCpahpqSQbN5cE+gHpnPyXjHWxcw==",
+      "dev": true,
+      "license": "MIT"
+    },
+    "node_modules/@types/json-schema": {
+      "version": "7.0.15",
+      "resolved": "https://registry.npmjs.org/@types/json-schema/-/json-schema-7.0.15.tgz",
+      "integrity": "sha512-5+fP8P8MFNC+AyZCDxrB2pkZFPGzqQWUzpSeuuVLvm8VMcorNYavBqoFcxK8bQz4Qsbn4oUEEem4wDLfcysGHA==",
+      "dev": true,
+      "license": "MIT",
+      "optional": true,
+      "peer": true
+    },
+    "node_modules/@types/lodash": {
+      "version": "4.17.10",
+      "resolved": "https://registry.npmjs.org/@types/lodash/-/lodash-4.17.10.tgz",
+      "integrity": "sha512-YpS0zzoduEhuOWjAotS6A5AVCva7X4lVlYLF0FYHAY9sdraBfnatttHItlWeZdGhuEkf+OzMNg2ZYAx8t+52uQ==",
+      "license": "MIT"
+    },
+    "node_modules/@types/lodash-es": {
+      "version": "4.17.12",
+      "resolved": "https://registry.npmjs.org/@types/lodash-es/-/lodash-es-4.17.12.tgz",
+      "integrity": "sha512-0NgftHUcV4v34VhXm8QBSftKVXtbkBG3ViCjs6+eJ5a6y6Mi/jiFGPc1sC7QK+9BFhWrURE3EOggmWaSxL9OzQ==",
+      "license": "MIT",
+      "dependencies": {
+        "@types/lodash": "*"
+      }
+    },
+    "node_modules/@types/node": {
+      "version": "22.7.5",
+      "resolved": "https://registry.npmjs.org/@types/node/-/node-22.7.5.tgz",
+      "integrity": "sha512-jML7s2NAzMWc//QSJ1a3prpk78cOPchGvXJsC3C6R6PSMoooztvRVQEz89gmBTBY1SPMaqo5teB4uNHPdetShQ==",
+      "dev": true,
+      "license": "MIT",
+      "optional": true,
+      "peer": true,
+      "dependencies": {
+        "undici-types": "~6.19.2"
+      }
+    },
+    "node_modules/@types/prop-types": {
+      "version": "15.7.13",
+      "resolved": "https://registry.npmjs.org/@types/prop-types/-/prop-types-15.7.13.tgz",
+      "integrity": "sha512-hCZTSvwbzWGvhqxp/RqVqwU999pBf2vp7hzIjiYOsl8wqOmUxkQ6ddw1cV3l8811+kdUFus/q4d1Y3E3SyEifA==",
+      "license": "MIT",
+      "optional": true,
+      "peer": true
+    },
+    "node_modules/@types/react": {
+      "version": "18.3.11",
+      "resolved": "https://registry.npmjs.org/@types/react/-/react-18.3.11.tgz",
+      "integrity": "sha512-r6QZ069rFTjrEYgFdOck1gK7FLVsgJE7tTz0pQBczlBNUhBNk0MQH4UbnFSwjpQLMkLzgqvBBa+qGpLje16eTQ==",
+      "license": "MIT",
+      "optional": true,
+      "peer": true,
+      "dependencies": {
+        "@types/prop-types": "*",
+        "csstype": "^3.0.2"
+      }
+    },
+    "node_modules/@types/use-sync-external-store": {
+      "version": "0.0.3",
+      "resolved": "https://registry.npmjs.org/@types/use-sync-external-store/-/use-sync-external-store-0.0.3.tgz",
+      "integrity": "sha512-EwmlvuaxPNej9+T4v5AuBPJa2x2UOJVdjCtDHgcDqitUeOtjnJKJ+apYjVcAoBEMjKW1VVFGZLUb5+qqa09XFA==",
+      "license": "MIT"
+    },
+    "node_modules/@ungap/structured-clone": {
+      "version": "1.2.0",
+      "resolved": "https://registry.npmjs.org/@ungap/structured-clone/-/structured-clone-1.2.0.tgz",
+      "integrity": "sha512-zuVdFrMJiuCDQUMCzQaD6KL28MjnqqN8XnAqiEq9PNm/hCPTSGfrXCOfwj1ow4LFb/tNymJPwsNbVePc1xFqrQ==",
+      "dev": true,
+      "license": "ISC"
+    },
+    "node_modules/@vitejs/plugin-react": {
+      "version": "4.3.2",
+      "resolved": "https://registry.npmjs.org/@vitejs/plugin-react/-/plugin-react-4.3.2.tgz",
+      "integrity": "sha512-hieu+o05v4glEBucTcKMK3dlES0OeJlD9YVOAPraVMOInBCwzumaIFiUjr4bHK7NPgnAHgiskUoceKercrN8vg==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "@babel/core": "^7.25.2",
+        "@babel/plugin-transform-react-jsx-self": "^7.24.7",
+        "@babel/plugin-transform-react-jsx-source": "^7.24.7",
+        "@types/babel__core": "^7.20.5",
+        "react-refresh": "^0.14.2"
+      },
+      "engines": {
+        "node": "^14.18.0 || >=16.0.0"
+      },
+      "peerDependencies": {
+        "vite": "^4.2.0 || ^5.0.0"
+      }
+    },
+    "node_modules/@vitejs/plugin-react/node_modules/react-refresh": {
+      "version": "0.14.2",
+      "resolved": "https://registry.npmjs.org/react-refresh/-/react-refresh-0.14.2.tgz",
+      "integrity": "sha512-jCvmsr+1IUSMUyzOkRcvnVbX3ZYC6g9TDrDbFuFmRDq7PD4yaGbLKNQL6k2jnArV8hjYxh7hVhAZB6s9HDGpZA==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": ">=0.10.0"
+      }
+    },
+    "node_modules/acorn": {
+      "version": "8.12.1",
+      "resolved": "https://registry.npmjs.org/acorn/-/acorn-8.12.1.tgz",
+      "integrity": "sha512-tcpGyI9zbizT9JbV6oYE477V6mTlXvvi0T0G3SNIYE2apm/G5huBa1+K89VGeovbg+jycCrfhl3ADxErOuO6Jg==",
+      "dev": true,
+      "license": "MIT",
+      "bin": {
+        "acorn": "bin/acorn"
+      },
+      "engines": {
+        "node": ">=0.4.0"
+      }
+    },
+    "node_modules/acorn-jsx": {
+      "version": "5.3.2",
+      "resolved": "https://registry.npmjs.org/acorn-jsx/-/acorn-jsx-5.3.2.tgz",
+      "integrity": "sha512-rq9s+JNhf0IChjtDXxllJ7g41oZk5SlXtp0LHwyA5cejwn7vKmKp4pPri6YEePv2PU65sAsegbXtIinmDFDXgQ==",
+      "dev": true,
+      "license": "MIT",
+      "peerDependencies": {
+        "acorn": "^6.0.0 || ^7.0.0 || ^8.0.0"
+      }
+    },
+    "node_modules/ajv": {
+      "version": "6.12.6",
+      "resolved": "https://registry.npmjs.org/ajv/-/ajv-6.12.6.tgz",
+      "integrity": "sha512-j3fVLgvTo527anyYyJOGTYJbG+vnnQYvE0m5mmkc1TK+nxAppkCLMIL0aZ4dblVCNoGShhm+kzE4ZUykBoMg4g==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "fast-deep-equal": "^3.1.1",
+        "fast-json-stable-stringify": "^2.0.0",
+        "json-schema-traverse": "^0.4.1",
+        "uri-js": "^4.2.2"
+      },
+      "funding": {
+        "type": "github",
+        "url": "https://github.com/sponsors/epoberezkin"
+      }
+    },
+    "node_modules/ansi-regex": {
+      "version": "5.0.1",
+      "resolved": "https://registry.npmjs.org/ansi-regex/-/ansi-regex-5.0.1.tgz",
+      "integrity": "sha512-quJQXlTSUGL2LH9SUXo8VwsY4soanhgo6LNSm84E1LBcE8s3O0wpdiRzyR9z/ZZJMlMWv37qOOb9pdJlMUEKFQ==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": ">=8"
+      }
+    },
+    "node_modules/ansi-styles": {
+      "version": "3.2.1",
+      "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-3.2.1.tgz",
+      "integrity": "sha512-VT0ZI6kZRdTh8YyJw3SMbYm/u+NqfsAxEpWO0Pf9sq8/e94WxxOpPKx9FR1FlyCtOVDNOQ+8ntlqFxiRc+r5qA==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "color-convert": "^1.9.0"
+      },
+      "engines": {
+        "node": ">=4"
+      }
+    },
+    "node_modules/array-buffer-byte-length": {
+      "version": "1.0.1",
+      "resolved": "https://registry.npmjs.org/array-buffer-byte-length/-/array-buffer-byte-length-1.0.1.tgz",
+      "integrity": "sha512-ahC5W1xgou+KTXix4sAO8Ki12Q+jf4i0+tmk3sC+zgcynshkHxzpXdImBehiUYKKKDwvfFiJl1tZt6ewscS1Mg==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "call-bind": "^1.0.5",
+        "is-array-buffer": "^3.0.4"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/array-includes": {
+      "version": "3.1.8",
+      "resolved": "https://registry.npmjs.org/array-includes/-/array-includes-3.1.8.tgz",
+      "integrity": "sha512-itaWrbYbqpGXkGhZPGUulwnhVf5Hpy1xiCFsGqyIGglbBxmG5vSjxQen3/WGOjPpNEv1RtBLKxbmVXm8HpJStQ==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "call-bind": "^1.0.7",
+        "define-properties": "^1.2.1",
+        "es-abstract": "^1.23.2",
+        "es-object-atoms": "^1.0.0",
+        "get-intrinsic": "^1.2.4",
+        "is-string": "^1.0.7"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/array.prototype.findlast": {
+      "version": "1.2.5",
+      "resolved": "https://registry.npmjs.org/array.prototype.findlast/-/array.prototype.findlast-1.2.5.tgz",
+      "integrity": "sha512-CVvd6FHg1Z3POpBLxO6E6zr+rSKEQ9L6rZHAaY7lLfhKsWYUBBOuMs0e9o24oopj6H+geRCX0YJ+TJLBK2eHyQ==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "call-bind": "^1.0.7",
+        "define-properties": "^1.2.1",
+        "es-abstract": "^1.23.2",
+        "es-errors": "^1.3.0",
+        "es-object-atoms": "^1.0.0",
+        "es-shim-unscopables": "^1.0.2"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/array.prototype.flat": {
+      "version": "1.3.2",
+      "resolved": "https://registry.npmjs.org/array.prototype.flat/-/array.prototype.flat-1.3.2.tgz",
+      "integrity": "sha512-djYB+Zx2vLewY8RWlNCUdHjDXs2XOgm602S9E7P/UpHgfeHL00cRiIF+IN/G/aUJ7kGPb6yO/ErDI5V2s8iycA==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "call-bind": "^1.0.2",
+        "define-properties": "^1.2.0",
+        "es-abstract": "^1.22.1",
+        "es-shim-unscopables": "^1.0.0"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/array.prototype.flatmap": {
+      "version": "1.3.2",
+      "resolved": "https://registry.npmjs.org/array.prototype.flatmap/-/array.prototype.flatmap-1.3.2.tgz",
+      "integrity": "sha512-Ewyx0c9PmpcsByhSW4r+9zDU7sGjFc86qf/kKtuSCRdhfbk0SNLLkaT5qvcHnRGgc5NP/ly/y+qkXkqONX54CQ==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "call-bind": "^1.0.2",
+        "define-properties": "^1.2.0",
+        "es-abstract": "^1.22.1",
+        "es-shim-unscopables": "^1.0.0"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/array.prototype.tosorted": {
+      "version": "1.1.4",
+      "resolved": "https://registry.npmjs.org/array.prototype.tosorted/-/array.prototype.tosorted-1.1.4.tgz",
+      "integrity": "sha512-p6Fx8B7b7ZhL/gmUsAy0D15WhvDccw3mnGNbZpi3pmeJdxtWsj2jEaI4Y6oo3XiHfzuSgPwKc04MYt6KgvC/wA==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "call-bind": "^1.0.7",
+        "define-properties": "^1.2.1",
+        "es-abstract": "^1.23.3",
+        "es-errors": "^1.3.0",
+        "es-shim-unscopables": "^1.0.2"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      }
+    },
+    "node_modules/arraybuffer.prototype.slice": {
+      "version": "1.0.3",
+      "resolved": "https://registry.npmjs.org/arraybuffer.prototype.slice/-/arraybuffer.prototype.slice-1.0.3.tgz",
+      "integrity": "sha512-bMxMKAjg13EBSVscxTaYA4mRc5t1UAXa2kXiGTNfZ079HIWXEkKmkgFrh/nJqamaLSrXO5H4WFFkPEaLJWbs3A==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "array-buffer-byte-length": "^1.0.1",
+        "call-bind": "^1.0.5",
+        "define-properties": "^1.2.1",
+        "es-abstract": "^1.22.3",
+        "es-errors": "^1.2.1",
+        "get-intrinsic": "^1.2.3",
+        "is-array-buffer": "^3.0.4",
+        "is-shared-array-buffer": "^1.0.2"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/autoprefixer": {
+      "version": "10.4.20",
+      "resolved": "https://registry.npmjs.org/autoprefixer/-/autoprefixer-10.4.20.tgz",
+      "integrity": "sha512-XY25y5xSv/wEoqzDyXXME4AFfkZI0P23z6Fs3YgymDnKJkCGOnkL0iTxCa85UTqaSgfcqyf3UA6+c7wUvx/16g==",
+      "dev": true,
+      "funding": [
+        {
+          "type": "opencollective",
+          "url": "https://opencollective.com/postcss/"
+        },
+        {
+          "type": "tidelift",
+          "url": "https://tidelift.com/funding/github/npm/autoprefixer"
+        },
+        {
+          "type": "github",
+          "url": "https://github.com/sponsors/ai"
+        }
+      ],
+      "license": "MIT",
+      "dependencies": {
+        "browserslist": "^4.23.3",
+        "caniuse-lite": "^1.0.30001646",
+        "fraction.js": "^4.3.7",
+        "normalize-range": "^0.1.2",
+        "picocolors": "^1.0.1",
+        "postcss-value-parser": "^4.2.0"
+      },
+      "bin": {
+        "autoprefixer": "bin/autoprefixer"
+      },
+      "engines": {
+        "node": "^10 || ^12 || >=14"
+      },
+      "peerDependencies": {
+        "postcss": "^8.1.0"
+      }
+    },
+    "node_modules/available-typed-arrays": {
+      "version": "1.0.7",
+      "resolved": "https://registry.npmjs.org/available-typed-arrays/-/available-typed-arrays-1.0.7.tgz",
+      "integrity": "sha512-wvUjBtSGN7+7SjNpq/9M2Tg350UZD3q62IFZLbRAR1bSMlCo1ZaeW+BJ+D090e4hIIZLBcTDWe4Mh4jvUDajzQ==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "possible-typed-array-names": "^1.0.0"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/balanced-match": {
+      "version": "1.0.2",
+      "resolved": "https://registry.npmjs.org/balanced-match/-/balanced-match-1.0.2.tgz",
+      "integrity": "sha512-3oSeUO0TMV67hN1AmbXsK4yaqU7tjiHlbxRDZOpH0KW9+CeX4bRAaX0Anxt0tx2MrpRpWwQaPwIlISEJhYU5Pw==",
+      "dev": true,
+      "license": "MIT"
+    },
+    "node_modules/brace-expansion": {
+      "version": "1.1.11",
+      "resolved": "https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.11.tgz",
+      "integrity": "sha512-iCuPHDFgrHX7H2vEI/5xpz07zSHB00TpugqhmYtVmMO6518mCuRMoOYFldEBl0g187ufozdaHgWKcYFb61qGiA==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "balanced-match": "^1.0.0",
+        "concat-map": "0.0.1"
+      }
+    },
+    "node_modules/browserslist": {
+      "version": "4.24.0",
+      "resolved": "https://registry.npmjs.org/browserslist/-/browserslist-4.24.0.tgz",
+      "integrity": "sha512-Rmb62sR1Zpjql25eSanFGEhAxcFwfA1K0GuQcLoaJBAcENegrQut3hYdhXFF1obQfiDyqIW/cLM5HSJ/9k884A==",
+      "dev": true,
+      "funding": [
+        {
+          "type": "opencollective",
+          "url": "https://opencollective.com/browserslist"
+        },
+        {
+          "type": "tidelift",
+          "url": "https://tidelift.com/funding/github/npm/browserslist"
+        },
+        {
+          "type": "github",
+          "url": "https://github.com/sponsors/ai"
+        }
+      ],
+      "license": "MIT",
+      "dependencies": {
+        "caniuse-lite": "^1.0.30001663",
+        "electron-to-chromium": "^1.5.28",
+        "node-releases": "^2.0.18",
+        "update-browserslist-db": "^1.1.0"
+      },
+      "bin": {
+        "browserslist": "cli.js"
+      },
+      "engines": {
+        "node": "^6 || ^7 || ^8 || ^9 || ^10 || ^11 || ^12 || >=13.7"
+      }
+    },
+    "node_modules/buffer-from": {
+      "version": "1.1.2",
+      "resolved": "https://registry.npmjs.org/buffer-from/-/buffer-from-1.1.2.tgz",
+      "integrity": "sha512-E+XQCRwSbaaiChtv6k6Dwgc+bx+Bs6vuKJHHl5kox/BaKbhiXzqQOwK4cO22yElGp2OCmjwVhT3HmxgyPGnJfQ==",
+      "dev": true,
+      "license": "MIT",
+      "optional": true,
+      "peer": true
+    },
+    "node_modules/call-bind": {
+      "version": "1.0.7",
+      "resolved": "https://registry.npmjs.org/call-bind/-/call-bind-1.0.7.tgz",
+      "integrity": "sha512-GHTSNSYICQ7scH7sZ+M2rFopRoLh8t2bLSW6BbgrtLsahOIB5iyAVJf9GjWK3cYTDaMj4XdBpM1cA6pIS0Kv2w==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "es-define-property": "^1.0.0",
+        "es-errors": "^1.3.0",
+        "function-bind": "^1.1.2",
+        "get-intrinsic": "^1.2.4",
+        "set-function-length": "^1.2.1"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/callsites": {
+      "version": "3.1.0",
+      "resolved": "https://registry.npmjs.org/callsites/-/callsites-3.1.0.tgz",
+      "integrity": "sha512-P8BjAsXvZS+VIDUI11hHCQEv74YT67YUi5JJFNWIqL235sBmjX4+qx9Muvls5ivyNENctx46xQLQ3aTuE7ssaQ==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": ">=6"
+      }
+    },
+    "node_modules/caniuse-lite": {
+      "version": "1.0.30001667",
+      "resolved": "https://registry.npmjs.org/caniuse-lite/-/caniuse-lite-1.0.30001667.tgz",
+      "integrity": "sha512-7LTwJjcRkzKFmtqGsibMeuXmvFDfZq/nzIjnmgCGzKKRVzjD72selLDK1oPF/Oxzmt4fNcPvTDvGqSDG4tCALw==",
+      "dev": true,
+      "funding": [
+        {
+          "type": "opencollective",
+          "url": "https://opencollective.com/browserslist"
+        },
+        {
+          "type": "tidelift",
+          "url": "https://tidelift.com/funding/github/npm/caniuse-lite"
+        },
+        {
+          "type": "github",
+          "url": "https://github.com/sponsors/ai"
+        }
+      ],
+      "license": "CC-BY-4.0"
+    },
+    "node_modules/chalk": {
+      "version": "2.4.2",
+      "resolved": "https://registry.npmjs.org/chalk/-/chalk-2.4.2.tgz",
+      "integrity": "sha512-Mti+f9lpJNcwF4tWV8/OrTTtF1gZi+f8FqlyAdouralcFWFQWF2+NgCHShjkCb+IFBLq9buZwE1xckQU4peSuQ==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "ansi-styles": "^3.2.1",
+        "escape-string-regexp": "^1.0.5",
+        "supports-color": "^5.3.0"
+      },
+      "engines": {
+        "node": ">=4"
+      }
+    },
+    "node_modules/chart.js": {
+      "version": "4.4.4",
+      "resolved": "https://registry.npmjs.org/chart.js/-/chart.js-4.4.4.tgz",
+      "integrity": "sha512-emICKGBABnxhMjUjlYRR12PmOXhJ2eJjEHL2/dZlWjxRAZT1D8xplLFq5M0tMQK8ja+wBS/tuVEJB5C6r7VxJA==",
+      "license": "MIT",
+      "dependencies": {
+        "@kurkle/color": "^0.3.0"
+      },
+      "engines": {
+        "pnpm": ">=8"
+      }
+    },
+    "node_modules/classnames": {
+      "version": "2.5.1",
+      "resolved": "https://registry.npmjs.org/classnames/-/classnames-2.5.1.tgz",
+      "integrity": "sha512-saHYOzhIQs6wy2sVxTM6bUDsQO4F50V9RQ22qBpEdCW+I+/Wmke2HOl6lS6dTpdxVhb88/I6+Hs+438c3lfUow==",
+      "license": "MIT"
+    },
+    "node_modules/color-convert": {
+      "version": "1.9.3",
+      "resolved": "https://registry.npmjs.org/color-convert/-/color-convert-1.9.3.tgz",
+      "integrity": "sha512-QfAUtd+vFdAtFQcC8CCyYt1fYWxSqAiK2cSD6zDB8N3cpsEBAvRxp9zOGg6G/SHHJYAT88/az/IuDGALsNVbGg==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "color-name": "1.1.3"
+      }
+    },
+    "node_modules/color-name": {
+      "version": "1.1.3",
+      "resolved": "https://registry.npmjs.org/color-name/-/color-name-1.1.3.tgz",
+      "integrity": "sha512-72fSenhMw2HZMTVHeCA9KCmpEIbzWiQsjN+BHcBbS9vr1mtt+vJjPdksIBNUmKAW8TFUDPJK5SUU3QhE9NEXDw==",
+      "dev": true,
+      "license": "MIT"
+    },
+    "node_modules/concat-map": {
+      "version": "0.0.1",
+      "resolved": "https://registry.npmjs.org/concat-map/-/concat-map-0.0.1.tgz",
+      "integrity": "sha512-/Srv4dswyQNBfohGpz9o6Yb3Gz3SrUDqBH5rTuhGR7ahtlbYKnVxw2bCFMRljaA7EXHaXZ8wsHdodFvbkhKmqg==",
+      "dev": true,
+      "license": "MIT"
+    },
+    "node_modules/convert-source-map": {
+      "version": "2.0.0",
+      "resolved": "https://registry.npmjs.org/convert-source-map/-/convert-source-map-2.0.0.tgz",
+      "integrity": "sha512-Kvp459HrV2FEJ1CAsi1Ku+MY3kasH19TFykTz2xWmMeq6bk2NU3XXvfJ+Q61m0xktWwt+1HSYf3JZsTms3aRJg==",
+      "dev": true,
+      "license": "MIT"
+    },
+    "node_modules/core-js": {
+      "version": "3.38.1",
+      "resolved": "https://registry.npmjs.org/core-js/-/core-js-3.38.1.tgz",
+      "integrity": "sha512-OP35aUorbU3Zvlx7pjsFdu1rGNnD4pgw/CWoYzRY3t2EzoVT7shKHY1dlAy3f41cGIO7ZDPQimhGFTlEYkG/Hw==",
+      "hasInstallScript": true,
+      "license": "MIT",
+      "funding": {
+        "type": "opencollective",
+        "url": "https://opencollective.com/core-js"
+      }
+    },
+    "node_modules/cross-spawn": {
+      "version": "7.0.3",
+      "resolved": "https://registry.npmjs.org/cross-spawn/-/cross-spawn-7.0.3.tgz",
+      "integrity": "sha512-iRDPJKUPVEND7dHPO8rkbOnPpyDygcDFtWjpeWNCgy8WP2rXcxXL8TskReQl6OrB2G7+UJrags1q15Fudc7G6w==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "path-key": "^3.1.0",
+        "shebang-command": "^2.0.0",
+        "which": "^2.0.1"
+      },
+      "engines": {
+        "node": ">= 8"
+      }
+    },
+    "node_modules/csstype": {
+      "version": "3.1.3",
+      "resolved": "https://registry.npmjs.org/csstype/-/csstype-3.1.3.tgz",
+      "integrity": "sha512-M1uQkMl8rQK/szD0LNhtqxIPLpimGm8sOBwU7lLnCpSbTyY3yeU1Vc7l4KT5zT4s/yOxHH5O7tIuuLOCnLADRw==",
+      "license": "MIT",
+      "optional": true,
+      "peer": true
+    },
+    "node_modules/data-view-buffer": {
+      "version": "1.0.1",
+      "resolved": "https://registry.npmjs.org/data-view-buffer/-/data-view-buffer-1.0.1.tgz",
+      "integrity": "sha512-0lht7OugA5x3iJLOWFhWK/5ehONdprk0ISXqVFn/NFrDu+cuc8iADFrGQz5BnRK7LLU3JmkbXSxaqX+/mXYtUA==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "call-bind": "^1.0.6",
+        "es-errors": "^1.3.0",
+        "is-data-view": "^1.0.1"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/data-view-byte-length": {
+      "version": "1.0.1",
+      "resolved": "https://registry.npmjs.org/data-view-byte-length/-/data-view-byte-length-1.0.1.tgz",
+      "integrity": "sha512-4J7wRJD3ABAzr8wP+OcIcqq2dlUKp4DVflx++hs5h5ZKydWMI6/D/fAot+yh6g2tHh8fLFTvNOaVN357NvSrOQ==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "call-bind": "^1.0.7",
+        "es-errors": "^1.3.0",
+        "is-data-view": "^1.0.1"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/data-view-byte-offset": {
+      "version": "1.0.0",
+      "resolved": "https://registry.npmjs.org/data-view-byte-offset/-/data-view-byte-offset-1.0.0.tgz",
+      "integrity": "sha512-t/Ygsytq+R995EJ5PZlD4Cu56sWa8InXySaViRzw9apusqsOO2bQP+SbYzAhR0pFKoB+43lYy8rWban9JSuXnA==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "call-bind": "^1.0.6",
+        "es-errors": "^1.3.0",
+        "is-data-view": "^1.0.1"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/debug": {
+      "version": "4.3.7",
+      "resolved": "https://registry.npmjs.org/debug/-/debug-4.3.7.tgz",
+      "integrity": "sha512-Er2nc/H7RrMXZBFCEim6TCmMk02Z8vLC2Rbi1KEBggpo0fS6l0S1nnapwmIi3yW/+GOJap1Krg4w0Hg80oCqgQ==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "ms": "^2.1.3"
+      },
+      "engines": {
+        "node": ">=6.0"
+      },
+      "peerDependenciesMeta": {
+        "supports-color": {
+          "optional": true
+        }
+      }
+    },
+    "node_modules/deep-is": {
+      "version": "0.1.4",
+      "resolved": "https://registry.npmjs.org/deep-is/-/deep-is-0.1.4.tgz",
+      "integrity": "sha512-oIPzksmTg4/MriiaYGO+okXDT7ztn/w3Eptv/+gSIdMdKsJo0u4CfYNFJPy+4SKMuCqGw2wxnA+URMg3t8a/bQ==",
+      "dev": true,
+      "license": "MIT"
+    },
+    "node_modules/define-data-property": {
+      "version": "1.1.4",
+      "resolved": "https://registry.npmjs.org/define-data-property/-/define-data-property-1.1.4.tgz",
+      "integrity": "sha512-rBMvIzlpA8v6E+SJZoo++HAYqsLrkg7MSfIinMPFhmkorw7X+dOXVJQs+QT69zGkzMyfDnIMN2Wid1+NbL3T+A==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "es-define-property": "^1.0.0",
+        "es-errors": "^1.3.0",
+        "gopd": "^1.0.1"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/define-properties": {
+      "version": "1.2.1",
+      "resolved": "https://registry.npmjs.org/define-properties/-/define-properties-1.2.1.tgz",
+      "integrity": "sha512-8QmQKqEASLd5nx0U1B1okLElbUuuttJ/AnYmRXbbbGDWh6uS208EjD4Xqq/I9wK7u0v6O08XhTWnt5XtEbR6Dg==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "define-data-property": "^1.0.1",
+        "has-property-descriptors": "^1.0.0",
+        "object-keys": "^1.1.1"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/doctrine": {
+      "version": "3.0.0",
+      "resolved": "https://registry.npmjs.org/doctrine/-/doctrine-3.0.0.tgz",
+      "integrity": "sha512-yS+Q5i3hBf7GBkd4KG8a7eBNNWNGLTaEwwYWUijIYM7zrlYDM0BFXHjjPWlWZ1Rg7UaddZeIDmi9jF3HmqiQ2w==",
+      "dev": true,
+      "license": "Apache-2.0",
+      "dependencies": {
+        "esutils": "^2.0.2"
+      },
+      "engines": {
+        "node": ">=6.0.0"
+      }
+    },
+    "node_modules/electron-to-chromium": {
+      "version": "1.5.33",
+      "resolved": "https://registry.npmjs.org/electron-to-chromium/-/electron-to-chromium-1.5.33.tgz",
+      "integrity": "sha512-+cYTcFB1QqD4j4LegwLfpCNxifb6dDFUAwk6RsLusCwIaZI6or2f+q8rs5tTB2YC53HhOlIbEaqHMAAC8IOIwA==",
+      "dev": true,
+      "license": "ISC"
+    },
+    "node_modules/es-abstract": {
+      "version": "1.23.3",
+      "resolved": "https://registry.npmjs.org/es-abstract/-/es-abstract-1.23.3.tgz",
+      "integrity": "sha512-e+HfNH61Bj1X9/jLc5v1owaLYuHdeHHSQlkhCBiTK8rBvKaULl/beGMxwrMXjpYrv4pz22BlY570vVePA2ho4A==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "array-buffer-byte-length": "^1.0.1",
+        "arraybuffer.prototype.slice": "^1.0.3",
+        "available-typed-arrays": "^1.0.7",
+        "call-bind": "^1.0.7",
+        "data-view-buffer": "^1.0.1",
+        "data-view-byte-length": "^1.0.1",
+        "data-view-byte-offset": "^1.0.0",
+        "es-define-property": "^1.0.0",
+        "es-errors": "^1.3.0",
+        "es-object-atoms": "^1.0.0",
+        "es-set-tostringtag": "^2.0.3",
+        "es-to-primitive": "^1.2.1",
+        "function.prototype.name": "^1.1.6",
+        "get-intrinsic": "^1.2.4",
+        "get-symbol-description": "^1.0.2",
+        "globalthis": "^1.0.3",
+        "gopd": "^1.0.1",
+        "has-property-descriptors": "^1.0.2",
+        "has-proto": "^1.0.3",
+        "has-symbols": "^1.0.3",
+        "hasown": "^2.0.2",
+        "internal-slot": "^1.0.7",
+        "is-array-buffer": "^3.0.4",
+        "is-callable": "^1.2.7",
+        "is-data-view": "^1.0.1",
+        "is-negative-zero": "^2.0.3",
+        "is-regex": "^1.1.4",
+        "is-shared-array-buffer": "^1.0.3",
+        "is-string": "^1.0.7",
+        "is-typed-array": "^1.1.13",
+        "is-weakref": "^1.0.2",
+        "object-inspect": "^1.13.1",
+        "object-keys": "^1.1.1",
+        "object.assign": "^4.1.5",
+        "regexp.prototype.flags": "^1.5.2",
+        "safe-array-concat": "^1.1.2",
+        "safe-regex-test": "^1.0.3",
+        "string.prototype.trim": "^1.2.9",
+        "string.prototype.trimend": "^1.0.8",
+        "string.prototype.trimstart": "^1.0.8",
+        "typed-array-buffer": "^1.0.2",
+        "typed-array-byte-length": "^1.0.1",
+        "typed-array-byte-offset": "^1.0.2",
+        "typed-array-length": "^1.0.6",
+        "unbox-primitive": "^1.0.2",
+        "which-typed-array": "^1.1.15"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/es-define-property": {
+      "version": "1.0.0",
+      "resolved": "https://registry.npmjs.org/es-define-property/-/es-define-property-1.0.0.tgz",
+      "integrity": "sha512-jxayLKShrEqqzJ0eumQbVhTYQM27CfT1T35+gCgDFoL82JLsXqTJ76zv6A0YLOgEnLUMvLzsDsGIrl8NFpT2gQ==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "get-intrinsic": "^1.2.4"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      }
+    },
+    "node_modules/es-errors": {
+      "version": "1.3.0",
+      "resolved": "https://registry.npmjs.org/es-errors/-/es-errors-1.3.0.tgz",
+      "integrity": "sha512-Zf5H2Kxt2xjTvbJvP2ZWLEICxA6j+hAmMzIlypy4xcBg1vKVnx89Wy0GbS+kf5cwCVFFzdCFh2XSCFNULS6csw==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": ">= 0.4"
+      }
+    },
+    "node_modules/es-iterator-helpers": {
+      "version": "1.0.19",
+      "resolved": "https://registry.npmjs.org/es-iterator-helpers/-/es-iterator-helpers-1.0.19.tgz",
+      "integrity": "sha512-zoMwbCcH5hwUkKJkT8kDIBZSz9I6mVG//+lDCinLCGov4+r7NIy0ld8o03M0cJxl2spVf6ESYVS6/gpIfq1FFw==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "call-bind": "^1.0.7",
+        "define-properties": "^1.2.1",
+        "es-abstract": "^1.23.3",
+        "es-errors": "^1.3.0",
+        "es-set-tostringtag": "^2.0.3",
+        "function-bind": "^1.1.2",
+        "get-intrinsic": "^1.2.4",
+        "globalthis": "^1.0.3",
+        "has-property-descriptors": "^1.0.2",
+        "has-proto": "^1.0.3",
+        "has-symbols": "^1.0.3",
+        "internal-slot": "^1.0.7",
+        "iterator.prototype": "^1.1.2",
+        "safe-array-concat": "^1.1.2"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      }
+    },
+    "node_modules/es-object-atoms": {
+      "version": "1.0.0",
+      "resolved": "https://registry.npmjs.org/es-object-atoms/-/es-object-atoms-1.0.0.tgz",
+      "integrity": "sha512-MZ4iQ6JwHOBQjahnjwaC1ZtIBH+2ohjamzAO3oaHcXYup7qxjF2fixyH+Q71voWHeOkI2q/TnJao/KfXYIZWbw==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "es-errors": "^1.3.0"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      }
+    },
+    "node_modules/es-set-tostringtag": {
+      "version": "2.0.3",
+      "resolved": "https://registry.npmjs.org/es-set-tostringtag/-/es-set-tostringtag-2.0.3.tgz",
+      "integrity": "sha512-3T8uNMC3OQTHkFUsFq8r/BwAXLHvU/9O9mE0fBc/MY5iq/8H7ncvO947LmYA6ldWw9Uh8Yhf25zu6n7nML5QWQ==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "get-intrinsic": "^1.2.4",
+        "has-tostringtag": "^1.0.2",
+        "hasown": "^2.0.1"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      }
+    },
+    "node_modules/es-shim-unscopables": {
+      "version": "1.0.2",
+      "resolved": "https://registry.npmjs.org/es-shim-unscopables/-/es-shim-unscopables-1.0.2.tgz",
+      "integrity": "sha512-J3yBRXCzDu4ULnQwxyToo/OjdMx6akgVC7K6few0a7F/0wLtmKKN7I73AH5T2836UuXRqN7Qg+IIUw/+YJksRw==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "hasown": "^2.0.0"
+      }
+    },
+    "node_modules/es-to-primitive": {
+      "version": "1.2.1",
+      "resolved": "https://registry.npmjs.org/es-to-primitive/-/es-to-primitive-1.2.1.tgz",
+      "integrity": "sha512-QCOllgZJtaUo9miYBcLChTUaHNjJF3PYs1VidD7AwiEj1kYxKeQTctLAezAOH5ZKRH0g2IgPn6KwB4IT8iRpvA==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "is-callable": "^1.1.4",
+        "is-date-object": "^1.0.1",
+        "is-symbol": "^1.0.2"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/esbuild": {
+      "version": "0.21.5",
+      "resolved": "https://registry.npmjs.org/esbuild/-/esbuild-0.21.5.tgz",
+      "integrity": "sha512-mg3OPMV4hXywwpoDxu3Qda5xCKQi+vCTZq8S9J/EpkhB2HzKXq4SNFZE3+NK93JYxc8VMSep+lOUSC/RVKaBqw==",
+      "dev": true,
+      "hasInstallScript": true,
+      "license": "MIT",
+      "bin": {
+        "esbuild": "bin/esbuild"
+      },
+      "engines": {
+        "node": ">=12"
+      },
+      "optionalDependencies": {
+        "@esbuild/aix-ppc64": "0.21.5",
+        "@esbuild/android-arm": "0.21.5",
+        "@esbuild/android-arm64": "0.21.5",
+        "@esbuild/android-x64": "0.21.5",
+        "@esbuild/darwin-arm64": "0.21.5",
+        "@esbuild/darwin-x64": "0.21.5",
+        "@esbuild/freebsd-arm64": "0.21.5",
+        "@esbuild/freebsd-x64": "0.21.5",
+        "@esbuild/linux-arm": "0.21.5",
+        "@esbuild/linux-arm64": "0.21.5",
+        "@esbuild/linux-ia32": "0.21.5",
+        "@esbuild/linux-loong64": "0.21.5",
+        "@esbuild/linux-mips64el": "0.21.5",
+        "@esbuild/linux-ppc64": "0.21.5",
+        "@esbuild/linux-riscv64": "0.21.5",
+        "@esbuild/linux-s390x": "0.21.5",
+        "@esbuild/linux-x64": "0.21.5",
+        "@esbuild/netbsd-x64": "0.21.5",
+        "@esbuild/openbsd-x64": "0.21.5",
+        "@esbuild/sunos-x64": "0.21.5",
+        "@esbuild/win32-arm64": "0.21.5",
+        "@esbuild/win32-ia32": "0.21.5",
+        "@esbuild/win32-x64": "0.21.5"
+      }
+    },
+    "node_modules/escalade": {
+      "version": "3.2.0",
+      "resolved": "https://registry.npmjs.org/escalade/-/escalade-3.2.0.tgz",
+      "integrity": "sha512-WUj2qlxaQtO4g6Pq5c29GTcWGDyd8itL8zTlipgECz3JesAiiOKotd8JU6otB3PACgG6xkJUyVhboMS+bje/jA==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": ">=6"
+      }
+    },
+    "node_modules/escape-string-regexp": {
+      "version": "1.0.5",
+      "resolved": "https://registry.npmjs.org/escape-string-regexp/-/escape-string-regexp-1.0.5.tgz",
+      "integrity": "sha512-vbRorB5FUQWvla16U8R/qgaFIya2qGzwDrNmCZuYKrbdSUMG6I1ZCGQRefkRVhuOkIGVne7BQ35DSfo1qvJqFg==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": ">=0.8.0"
+      }
+    },
+    "node_modules/eslint": {
+      "version": "8.57.1",
+      "resolved": "https://registry.npmjs.org/eslint/-/eslint-8.57.1.tgz",
+      "integrity": "sha512-ypowyDxpVSYpkXr9WPv2PAZCtNip1Mv5KTW0SCurXv/9iOpcrH9PaqUElksqEB6pChqHGDRCFTyrZlGhnLNGiA==",
+      "deprecated": "This version is no longer supported. Please see https://eslint.org/version-support for other options.",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "@eslint-community/eslint-utils": "^4.2.0",
+        "@eslint-community/regexpp": "^4.6.1",
+        "@eslint/eslintrc": "^2.1.4",
+        "@eslint/js": "8.57.1",
+        "@humanwhocodes/config-array": "^0.13.0",
+        "@humanwhocodes/module-importer": "^1.0.1",
+        "@nodelib/fs.walk": "^1.2.8",
+        "@ungap/structured-clone": "^1.2.0",
+        "ajv": "^6.12.4",
+        "chalk": "^4.0.0",
+        "cross-spawn": "^7.0.2",
+        "debug": "^4.3.2",
+        "doctrine": "^3.0.0",
+        "escape-string-regexp": "^4.0.0",
+        "eslint-scope": "^7.2.2",
+        "eslint-visitor-keys": "^3.4.3",
+        "espree": "^9.6.1",
+        "esquery": "^1.4.2",
+        "esutils": "^2.0.2",
+        "fast-deep-equal": "^3.1.3",
+        "file-entry-cache": "^6.0.1",
+        "find-up": "^5.0.0",
+        "glob-parent": "^6.0.2",
+        "globals": "^13.19.0",
+        "graphemer": "^1.4.0",
+        "ignore": "^5.2.0",
+        "imurmurhash": "^0.1.4",
+        "is-glob": "^4.0.0",
+        "is-path-inside": "^3.0.3",
+        "js-yaml": "^4.1.0",
+        "json-stable-stringify-without-jsonify": "^1.0.1",
+        "levn": "^0.4.1",
+        "lodash.merge": "^4.6.2",
+        "minimatch": "^3.1.2",
+        "natural-compare": "^1.4.0",
+        "optionator": "^0.9.3",
+        "strip-ansi": "^6.0.1",
+        "text-table": "^0.2.0"
+      },
+      "bin": {
+        "eslint": "bin/eslint.js"
+      },
+      "engines": {
+        "node": "^12.22.0 || ^14.17.0 || >=16.0.0"
+      },
+      "funding": {
+        "url": "https://opencollective.com/eslint"
+      }
+    },
+    "node_modules/eslint-config-prettier": {
+      "version": "9.1.0",
+      "resolved": "https://registry.npmjs.org/eslint-config-prettier/-/eslint-config-prettier-9.1.0.tgz",
+      "integrity": "sha512-NSWl5BFQWEPi1j4TjVNItzYV7dZXZ+wP6I6ZhrBGpChQhZRUaElihE9uRRkcbRnNb76UMKDF3r+WTmNcGPKsqw==",
+      "dev": true,
+      "license": "MIT",
+      "bin": {
+        "eslint-config-prettier": "bin/cli.js"
+      },
+      "peerDependencies": {
+        "eslint": ">=7.0.0"
+      }
+    },
+    "node_modules/eslint-plugin-prettier": {
+      "version": "5.2.1",
+      "resolved": "https://registry.npmjs.org/eslint-plugin-prettier/-/eslint-plugin-prettier-5.2.1.tgz",
+      "integrity": "sha512-gH3iR3g4JfF+yYPaJYkN7jEl9QbweL/YfkoRlNnuIEHEz1vHVlCmWOS+eGGiRuzHQXdJFCOTxRgvju9b8VUmrw==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "prettier-linter-helpers": "^1.0.0",
+        "synckit": "^0.9.1"
+      },
+      "engines": {
+        "node": "^14.18.0 || >=16.0.0"
+      },
+      "funding": {
+        "url": "https://opencollective.com/eslint-plugin-prettier"
+      },
+      "peerDependencies": {
+        "@types/eslint": ">=8.0.0",
+        "eslint": ">=8.0.0",
+        "eslint-config-prettier": "*",
+        "prettier": ">=3.0.0"
+      },
+      "peerDependenciesMeta": {
+        "@types/eslint": {
+          "optional": true
+        },
+        "eslint-config-prettier": {
+          "optional": true
+        }
+      }
+    },
+    "node_modules/eslint-plugin-react": {
+      "version": "7.37.1",
+      "resolved": "https://registry.npmjs.org/eslint-plugin-react/-/eslint-plugin-react-7.37.1.tgz",
+      "integrity": "sha512-xwTnwDqzbDRA8uJ7BMxPs/EXRB3i8ZfnOIp8BsxEQkT0nHPp+WWceqGgo6rKb9ctNi8GJLDT4Go5HAWELa/WMg==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "array-includes": "^3.1.8",
+        "array.prototype.findlast": "^1.2.5",
+        "array.prototype.flatmap": "^1.3.2",
+        "array.prototype.tosorted": "^1.1.4",
+        "doctrine": "^2.1.0",
+        "es-iterator-helpers": "^1.0.19",
+        "estraverse": "^5.3.0",
+        "hasown": "^2.0.2",
+        "jsx-ast-utils": "^2.4.1 || ^3.0.0",
+        "minimatch": "^3.1.2",
+        "object.entries": "^1.1.8",
+        "object.fromentries": "^2.0.8",
+        "object.values": "^1.2.0",
+        "prop-types": "^15.8.1",
+        "resolve": "^2.0.0-next.5",
+        "semver": "^6.3.1",
+        "string.prototype.matchall": "^4.0.11",
+        "string.prototype.repeat": "^1.0.0"
+      },
+      "engines": {
+        "node": ">=4"
+      },
+      "peerDependencies": {
+        "eslint": "^3 || ^4 || ^5 || ^6 || ^7 || ^8 || ^9.7"
+      }
+    },
+    "node_modules/eslint-plugin-react-hooks": {
+      "version": "4.6.2",
+      "resolved": "https://registry.npmjs.org/eslint-plugin-react-hooks/-/eslint-plugin-react-hooks-4.6.2.tgz",
+      "integrity": "sha512-QzliNJq4GinDBcD8gPB5v0wh6g8q3SUi6EFF0x8N/BL9PoVs0atuGc47ozMRyOWAKdwaZ5OnbOEa3WR+dSGKuQ==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": ">=10"
+      },
+      "peerDependencies": {
+        "eslint": "^3.0.0 || ^4.0.0 || ^5.0.0 || ^6.0.0 || ^7.0.0 || ^8.0.0-0"
+      }
+    },
+    "node_modules/eslint-plugin-react/node_modules/doctrine": {
+      "version": "2.1.0",
+      "resolved": "https://registry.npmjs.org/doctrine/-/doctrine-2.1.0.tgz",
+      "integrity": "sha512-35mSku4ZXK0vfCuHEDAwt55dg2jNajHZ1odvF+8SSr82EsZY4QmXfuWso8oEd8zRhVObSN18aM0CjSdoBX7zIw==",
+      "dev": true,
+      "license": "Apache-2.0",
+      "dependencies": {
+        "esutils": "^2.0.2"
+      },
+      "engines": {
+        "node": ">=0.10.0"
+      }
+    },
+    "node_modules/eslint-plugin-react/node_modules/resolve": {
+      "version": "2.0.0-next.5",
+      "resolved": "https://registry.npmjs.org/resolve/-/resolve-2.0.0-next.5.tgz",
+      "integrity": "sha512-U7WjGVG9sH8tvjW5SmGbQuui75FiyjAX72HX15DwBBwF9dNiQZRQAg9nnPhYy+TUnE0+VcrttuvNI8oSxZcocA==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "is-core-module": "^2.13.0",
+        "path-parse": "^1.0.7",
+        "supports-preserve-symlinks-flag": "^1.0.0"
+      },
+      "bin": {
+        "resolve": "bin/resolve"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/eslint-plugin-react/node_modules/semver": {
+      "version": "6.3.1",
+      "resolved": "https://registry.npmjs.org/semver/-/semver-6.3.1.tgz",
+      "integrity": "sha512-BR7VvDCVHO+q2xBEWskxS6DJE1qRnb7DxzUrogb71CWoSficBxYsiAGd+Kl0mmq/MprG9yArRkyrQxTO6XjMzA==",
+      "dev": true,
+      "license": "ISC",
+      "bin": {
+        "semver": "bin/semver.js"
+      }
+    },
+    "node_modules/eslint-scope": {
+      "version": "7.2.2",
+      "resolved": "https://registry.npmjs.org/eslint-scope/-/eslint-scope-7.2.2.tgz",
+      "integrity": "sha512-dOt21O7lTMhDM+X9mB4GX+DZrZtCUJPL/wlcTqxyrx5IvO0IYtILdtrQGQp+8n5S0gwSVmOf9NQrjMOgfQZlIg==",
+      "dev": true,
+      "license": "BSD-2-Clause",
+      "dependencies": {
+        "esrecurse": "^4.3.0",
+        "estraverse": "^5.2.0"
+      },
+      "engines": {
+        "node": "^12.22.0 || ^14.17.0 || >=16.0.0"
+      },
+      "funding": {
+        "url": "https://opencollective.com/eslint"
+      }
+    },
+    "node_modules/eslint-visitor-keys": {
+      "version": "3.4.3",
+      "resolved": "https://registry.npmjs.org/eslint-visitor-keys/-/eslint-visitor-keys-3.4.3.tgz",
+      "integrity": "sha512-wpc+LXeiyiisxPlEkUzU6svyS1frIO3Mgxj1fdy7Pm8Ygzguax2N3Fa/D/ag1WqbOprdI+uY6wMUl8/a2G+iag==",
+      "dev": true,
+      "license": "Apache-2.0",
+      "engines": {
+        "node": "^12.22.0 || ^14.17.0 || >=16.0.0"
+      },
+      "funding": {
+        "url": "https://opencollective.com/eslint"
+      }
+    },
+    "node_modules/eslint/node_modules/ansi-styles": {
+      "version": "4.3.0",
+      "resolved": "https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.3.0.tgz",
+      "integrity": "sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "color-convert": "^2.0.1"
+      },
+      "engines": {
+        "node": ">=8"
+      },
+      "funding": {
+        "url": "https://github.com/chalk/ansi-styles?sponsor=1"
+      }
+    },
+    "node_modules/eslint/node_modules/argparse": {
+      "version": "2.0.1",
+      "resolved": "https://registry.npmjs.org/argparse/-/argparse-2.0.1.tgz",
+      "integrity": "sha512-8+9WqebbFzpX9OR+Wa6O29asIogeRMzcGtAINdpMHHyAg10f05aSFVBbcEqGf/PXw1EjAZ+q2/bEBg3DvurK3Q==",
+      "dev": true,
+      "license": "Python-2.0"
+    },
+    "node_modules/eslint/node_modules/chalk": {
+      "version": "4.1.2",
+      "resolved": "https://registry.npmjs.org/chalk/-/chalk-4.1.2.tgz",
+      "integrity": "sha512-oKnbhFyRIXpUuez8iBMmyEa4nbj4IOQyuhc/wy9kY7/WVPcwIO9VA668Pu8RkO7+0G76SLROeyw9CpQ061i4mA==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "ansi-styles": "^4.1.0",
+        "supports-color": "^7.1.0"
+      },
+      "engines": {
+        "node": ">=10"
+      },
+      "funding": {
+        "url": "https://github.com/chalk/chalk?sponsor=1"
+      }
+    },
+    "node_modules/eslint/node_modules/color-convert": {
+      "version": "2.0.1",
+      "resolved": "https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz",
+      "integrity": "sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "color-name": "~1.1.4"
+      },
+      "engines": {
+        "node": ">=7.0.0"
+      }
+    },
+    "node_modules/eslint/node_modules/color-name": {
+      "version": "1.1.4",
+      "resolved": "https://registry.npmjs.org/color-name/-/color-name-1.1.4.tgz",
+      "integrity": "sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==",
+      "dev": true,
+      "license": "MIT"
+    },
+    "node_modules/eslint/node_modules/escape-string-regexp": {
+      "version": "4.0.0",
+      "resolved": "https://registry.npmjs.org/escape-string-regexp/-/escape-string-regexp-4.0.0.tgz",
+      "integrity": "sha512-TtpcNJ3XAzx3Gq8sWRzJaVajRs0uVxA2YAkdb1jm2YkPz4G6egUFAyA3n5vtEIZefPk5Wa4UXbKuS5fKkJWdgA==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": ">=10"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/sindresorhus"
+      }
+    },
+    "node_modules/eslint/node_modules/find-up": {
+      "version": "5.0.0",
+      "resolved": "https://registry.npmjs.org/find-up/-/find-up-5.0.0.tgz",
+      "integrity": "sha512-78/PXT1wlLLDgTzDs7sjq9hzz0vXD+zn+7wypEe4fXQxCmdmqfGsEPQxmiCSQI3ajFV91bVSsvNtrJRiW6nGng==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "locate-path": "^6.0.0",
+        "path-exists": "^4.0.0"
+      },
+      "engines": {
+        "node": ">=10"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/sindresorhus"
+      }
+    },
+    "node_modules/eslint/node_modules/globals": {
+      "version": "13.24.0",
+      "resolved": "https://registry.npmjs.org/globals/-/globals-13.24.0.tgz",
+      "integrity": "sha512-AhO5QUcj8llrbG09iWhPU2B204J1xnPeL8kQmVorSsy+Sjj1sk8gIyh6cUocGmH4L0UuhAJy+hJMRA4mgA4mFQ==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "type-fest": "^0.20.2"
+      },
+      "engines": {
+        "node": ">=8"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/sindresorhus"
+      }
+    },
+    "node_modules/eslint/node_modules/has-flag": {
+      "version": "4.0.0",
+      "resolved": "https://registry.npmjs.org/has-flag/-/has-flag-4.0.0.tgz",
+      "integrity": "sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": ">=8"
+      }
+    },
+    "node_modules/eslint/node_modules/js-yaml": {
+      "version": "4.1.0",
+      "resolved": "https://registry.npmjs.org/js-yaml/-/js-yaml-4.1.0.tgz",
+      "integrity": "sha512-wpxZs9NoxZaJESJGIZTyDEaYpl0FKSA+FB9aJiyemKhMwkxQg63h4T1KJgUGHpTqPDNRcmmYLugrRjJlBtWvRA==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "argparse": "^2.0.1"
+      },
+      "bin": {
+        "js-yaml": "bin/js-yaml.js"
+      }
+    },
+    "node_modules/eslint/node_modules/locate-path": {
+      "version": "6.0.0",
+      "resolved": "https://registry.npmjs.org/locate-path/-/locate-path-6.0.0.tgz",
+      "integrity": "sha512-iPZK6eYjbxRu3uB4/WZ3EsEIMJFMqAoopl3R+zuq0UjcAm/MO6KCweDgPfP3elTztoKP3KtnVHxTn2NHBSDVUw==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "p-locate": "^5.0.0"
+      },
+      "engines": {
+        "node": ">=10"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/sindresorhus"
+      }
+    },
+    "node_modules/eslint/node_modules/p-limit": {
+      "version": "3.1.0",
+      "resolved": "https://registry.npmjs.org/p-limit/-/p-limit-3.1.0.tgz",
+      "integrity": "sha512-TYOanM3wGwNGsZN2cVTYPArw454xnXj5qmWF1bEoAc4+cU/ol7GVh7odevjp1FNHduHc3KZMcFduxU5Xc6uJRQ==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "yocto-queue": "^0.1.0"
+      },
+      "engines": {
+        "node": ">=10"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/sindresorhus"
+      }
+    },
+    "node_modules/eslint/node_modules/p-locate": {
+      "version": "5.0.0",
+      "resolved": "https://registry.npmjs.org/p-locate/-/p-locate-5.0.0.tgz",
+      "integrity": "sha512-LaNjtRWUBY++zB5nE/NwcaoMylSPk+S+ZHNB1TzdbMJMny6dynpAGt7X/tl/QYq3TIeE6nxHppbo2LGymrG5Pw==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "p-limit": "^3.0.2"
+      },
+      "engines": {
+        "node": ">=10"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/sindresorhus"
+      }
+    },
+    "node_modules/eslint/node_modules/supports-color": {
+      "version": "7.2.0",
+      "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-7.2.0.tgz",
+      "integrity": "sha512-qpCAvRl9stuOHveKsn7HncJRvv501qIacKzQlO/+Lwxc9+0q2wLyv4Dfvt80/DPn2pqOBsJdDiogXGR9+OvwRw==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "has-flag": "^4.0.0"
+      },
+      "engines": {
+        "node": ">=8"
+      }
+    },
+    "node_modules/eslint/node_modules/type-fest": {
+      "version": "0.20.2",
+      "resolved": "https://registry.npmjs.org/type-fest/-/type-fest-0.20.2.tgz",
+      "integrity": "sha512-Ne+eE4r0/iWnpAxD852z3A+N0Bt5RN//NjJwRd2VFHEmrywxf5vsZlh4R6lixl6B+wz/8d+maTSAkN1FIkI3LQ==",
+      "dev": true,
+      "license": "(MIT OR CC0-1.0)",
+      "engines": {
+        "node": ">=10"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/sindresorhus"
+      }
+    },
+    "node_modules/espree": {
+      "version": "9.6.1",
+      "resolved": "https://registry.npmjs.org/espree/-/espree-9.6.1.tgz",
+      "integrity": "sha512-oruZaFkjorTpF32kDSI5/75ViwGeZginGGy2NoOSg3Q9bnwlnmDm4HLnkl0RE3n+njDXR037aY1+x58Z/zFdwQ==",
+      "dev": true,
+      "license": "BSD-2-Clause",
+      "dependencies": {
+        "acorn": "^8.9.0",
+        "acorn-jsx": "^5.3.2",
+        "eslint-visitor-keys": "^3.4.1"
+      },
+      "engines": {
+        "node": "^12.22.0 || ^14.17.0 || >=16.0.0"
+      },
+      "funding": {
+        "url": "https://opencollective.com/eslint"
+      }
+    },
+    "node_modules/esquery": {
+      "version": "1.6.0",
+      "resolved": "https://registry.npmjs.org/esquery/-/esquery-1.6.0.tgz",
+      "integrity": "sha512-ca9pw9fomFcKPvFLXhBKUK90ZvGibiGOvRJNbjljY7s7uq/5YO4BOzcYtJqExdx99rF6aAcnRxHmcUHcz6sQsg==",
+      "dev": true,
+      "license": "BSD-3-Clause",
+      "dependencies": {
+        "estraverse": "^5.1.0"
+      },
+      "engines": {
+        "node": ">=0.10"
+      }
+    },
+    "node_modules/esrecurse": {
+      "version": "4.3.0",
+      "resolved": "https://registry.npmjs.org/esrecurse/-/esrecurse-4.3.0.tgz",
+      "integrity": "sha512-KmfKL3b6G+RXvP8N1vr3Tq1kL/oCFgn2NYXEtqP8/L3pKapUA4G8cFVaoF3SU323CD4XypR/ffioHmkti6/Tag==",
+      "dev": true,
+      "license": "BSD-2-Clause",
+      "dependencies": {
+        "estraverse": "^5.2.0"
+      },
+      "engines": {
+        "node": ">=4.0"
+      }
+    },
+    "node_modules/estraverse": {
+      "version": "5.3.0",
+      "resolved": "https://registry.npmjs.org/estraverse/-/estraverse-5.3.0.tgz",
+      "integrity": "sha512-MMdARuVEQziNTeJD8DgMqmhwR11BRQ/cBP+pLtYdSTnf3MIO8fFeiINEbX36ZdNlfU/7A9f3gUw49B3oQsvwBA==",
+      "dev": true,
+      "license": "BSD-2-Clause",
+      "engines": {
+        "node": ">=4.0"
+      }
+    },
+    "node_modules/esutils": {
+      "version": "2.0.3",
+      "resolved": "https://registry.npmjs.org/esutils/-/esutils-2.0.3.tgz",
+      "integrity": "sha512-kVscqXk4OCp68SZ0dkgEKVi6/8ij300KBWTJq32P/dYeWTSwK41WyTxalN1eRmA5Z9UU/LX9D7FWSmV9SAYx6g==",
+      "dev": true,
+      "license": "BSD-2-Clause",
+      "engines": {
+        "node": ">=0.10.0"
+      }
+    },
+    "node_modules/fast-deep-equal": {
+      "version": "3.1.3",
+      "resolved": "https://registry.npmjs.org/fast-deep-equal/-/fast-deep-equal-3.1.3.tgz",
+      "integrity": "sha512-f3qQ9oQy9j2AhBe/H9VC91wLmKBCCU/gDOnKNAYG5hswO7BLKj09Hc5HYNz9cGI++xlpDCIgDaitVs03ATR84Q==",
+      "dev": true,
+      "license": "MIT"
+    },
+    "node_modules/fast-diff": {
+      "version": "1.3.0",
+      "resolved": "https://registry.npmjs.org/fast-diff/-/fast-diff-1.3.0.tgz",
+      "integrity": "sha512-VxPP4NqbUjj6MaAOafWeUn2cXWLcCtljklUtZf0Ind4XQ+QPtmA0b18zZy0jIQx+ExRVCR/ZQpBmik5lXshNsw==",
+      "dev": true,
+      "license": "Apache-2.0"
+    },
+    "node_modules/fast-json-stable-stringify": {
+      "version": "2.1.0",
+      "resolved": "https://registry.npmjs.org/fast-json-stable-stringify/-/fast-json-stable-stringify-2.1.0.tgz",
+      "integrity": "sha512-lhd/wF+Lk98HZoTCtlVraHtfh5XYijIjalXck7saUtuanSDyLMxnHhSXEDJqHxD7msR8D0uCmqlkwjCV8xvwHw==",
+      "dev": true,
+      "license": "MIT"
+    },
+    "node_modules/fast-levenshtein": {
+      "version": "2.0.6",
+      "resolved": "https://registry.npmjs.org/fast-levenshtein/-/fast-levenshtein-2.0.6.tgz",
+      "integrity": "sha512-DCXu6Ifhqcks7TZKY3Hxp3y6qphY5SJZmrWMDrKcERSOXWQdMhU9Ig/PYrzyw/ul9jOIyh0N4M0tbC5hodg8dw==",
+      "dev": true,
+      "license": "MIT"
+    },
+    "node_modules/fastq": {
+      "version": "1.17.1",
+      "resolved": "https://registry.npmjs.org/fastq/-/fastq-1.17.1.tgz",
+      "integrity": "sha512-sRVD3lWVIXWg6By68ZN7vho9a1pQcN/WBFaAAsDDFzlJjvoGx0P8z7V1t72grFJfJhu3YPZBuu25f7Kaw2jN1w==",
+      "dev": true,
+      "license": "ISC",
+      "dependencies": {
+        "reusify": "^1.0.4"
+      }
+    },
+    "node_modules/file-entry-cache": {
+      "version": "6.0.1",
+      "resolved": "https://registry.npmjs.org/file-entry-cache/-/file-entry-cache-6.0.1.tgz",
+      "integrity": "sha512-7Gps/XWymbLk2QLYK4NzpMOrYjMhdIxXuIvy2QBsLE6ljuodKvdkWs/cpyJJ3CVIVpH0Oi1Hvg1ovbMzLdFBBg==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "flat-cache": "^3.0.4"
+      },
+      "engines": {
+        "node": "^10.12.0 || >=12.0.0"
+      }
+    },
+    "node_modules/flat-cache": {
+      "version": "3.2.0",
+      "resolved": "https://registry.npmjs.org/flat-cache/-/flat-cache-3.2.0.tgz",
+      "integrity": "sha512-CYcENa+FtcUKLmhhqyctpclsq7QF38pKjZHsGNiSQF5r4FtoKDWabFDl3hzaEQMvT1LHEysw5twgLvpYYb4vbw==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "flatted": "^3.2.9",
+        "keyv": "^4.5.3",
+        "rimraf": "^3.0.2"
+      },
+      "engines": {
+        "node": "^10.12.0 || >=12.0.0"
+      }
+    },
+    "node_modules/flatted": {
+      "version": "3.3.1",
+      "resolved": "https://registry.npmjs.org/flatted/-/flatted-3.3.1.tgz",
+      "integrity": "sha512-X8cqMLLie7KsNUDSdzeN8FYK9rEt4Dt67OsG/DNGnYTSDBG4uFAJFBnUeiV+zCVAvwFy56IjM9sH51jVaEhNxw==",
+      "dev": true,
+      "license": "ISC"
+    },
+    "node_modules/for-each": {
+      "version": "0.3.3",
+      "resolved": "https://registry.npmjs.org/for-each/-/for-each-0.3.3.tgz",
+      "integrity": "sha512-jqYfLp7mo9vIyQf8ykW2v7A+2N4QjeCeI5+Dz9XraiO1ign81wjiH7Fb9vSOWvQfNtmSa4H2RoQTrrXivdUZmw==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "is-callable": "^1.1.3"
+      }
+    },
+    "node_modules/fraction.js": {
+      "version": "4.3.7",
+      "resolved": "https://registry.npmjs.org/fraction.js/-/fraction.js-4.3.7.tgz",
+      "integrity": "sha512-ZsDfxO51wGAXREY55a7la9LScWpwv9RxIrYABrlvOFBlH/ShPnrtsXeuUIfXKKOVicNxQ+o8JTbJvjS4M89yew==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": "*"
+      },
+      "funding": {
+        "type": "patreon",
+        "url": "https://github.com/sponsors/rawify"
+      }
+    },
+    "node_modules/fs.realpath": {
+      "version": "1.0.0",
+      "resolved": "https://registry.npmjs.org/fs.realpath/-/fs.realpath-1.0.0.tgz",
+      "integrity": "sha512-OO0pH2lK6a0hZnAdau5ItzHPI6pUlvI7jMVnxUQRtw4owF2wk8lOSabtGDCTP4Ggrg2MbGnWO9X8K1t4+fGMDw==",
+      "dev": true,
+      "license": "ISC"
+    },
+    "node_modules/fsevents": {
+      "version": "2.3.3",
+      "resolved": "https://registry.npmjs.org/fsevents/-/fsevents-2.3.3.tgz",
+      "integrity": "sha512-5xoDfX+fL7faATnagmWPpbFtwh/R77WmMMqqHGS65C3vvB0YHrgF+B1YmZ3441tMj5n63k0212XNoJwzlhffQw==",
+      "dev": true,
+      "hasInstallScript": true,
+      "license": "MIT",
+      "optional": true,
+      "os": [
+        "darwin"
+      ],
+      "engines": {
+        "node": "^8.16.0 || ^10.6.0 || >=11.0.0"
+      }
+    },
+    "node_modules/function-bind": {
+      "version": "1.1.2",
+      "resolved": "https://registry.npmjs.org/function-bind/-/function-bind-1.1.2.tgz",
+      "integrity": "sha512-7XHNxH7qX9xG5mIwxkhumTox/MIRNcOgDrxWsMt2pAr23WHp6MrRlN7FBSFpCpr+oVO0F744iUgR82nJMfG2SA==",
+      "dev": true,
+      "license": "MIT",
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/function.prototype.name": {
+      "version": "1.1.6",
+      "resolved": "https://registry.npmjs.org/function.prototype.name/-/function.prototype.name-1.1.6.tgz",
+      "integrity": "sha512-Z5kx79swU5P27WEayXM1tBi5Ze/lbIyiNgU3qyXUOf9b2rgXYyF9Dy9Cx+IQv/Lc8WCG6L82zwUPpSS9hGehIg==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "call-bind": "^1.0.2",
+        "define-properties": "^1.2.0",
+        "es-abstract": "^1.22.1",
+        "functions-have-names": "^1.2.3"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/functions-have-names": {
+      "version": "1.2.3",
+      "resolved": "https://registry.npmjs.org/functions-have-names/-/functions-have-names-1.2.3.tgz",
+      "integrity": "sha512-xckBUXyTIqT97tq2x2AMb+g163b5JFysYk0x4qxNFwbfQkmNZoiRHb6sPzI9/QV33WeuvVYBUIiD4NzNIyqaRQ==",
+      "dev": true,
+      "license": "MIT",
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/gensync": {
+      "version": "1.0.0-beta.2",
+      "resolved": "https://registry.npmjs.org/gensync/-/gensync-1.0.0-beta.2.tgz",
+      "integrity": "sha512-3hN7NaskYvMDLQY55gnW3NQ+mesEAepTqlg+VEbj7zzqEMBVNhzcGYYeqFo/TlYz6eQiFcp1HcsCZO+nGgS8zg==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": ">=6.9.0"
+      }
+    },
+    "node_modules/get-intrinsic": {
+      "version": "1.2.4",
+      "resolved": "https://registry.npmjs.org/get-intrinsic/-/get-intrinsic-1.2.4.tgz",
+      "integrity": "sha512-5uYhsJH8VJBTv7oslg4BznJYhDoRI6waYCxMmCdnTrcCrHA/fCFKoTFz2JKKE0HdDFUF7/oQuhzumXJK7paBRQ==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "es-errors": "^1.3.0",
+        "function-bind": "^1.1.2",
+        "has-proto": "^1.0.1",
+        "has-symbols": "^1.0.3",
+        "hasown": "^2.0.0"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/get-symbol-description": {
+      "version": "1.0.2",
+      "resolved": "https://registry.npmjs.org/get-symbol-description/-/get-symbol-description-1.0.2.tgz",
+      "integrity": "sha512-g0QYk1dZBxGwk+Ngc+ltRH2IBp2f7zBkBMBJZCDerh6EhlhSR6+9irMCuT/09zD6qkarHUSn529sK/yL4S27mg==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "call-bind": "^1.0.5",
+        "es-errors": "^1.3.0",
+        "get-intrinsic": "^1.2.4"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/glob": {
+      "version": "7.2.3",
+      "resolved": "https://registry.npmjs.org/glob/-/glob-7.2.3.tgz",
+      "integrity": "sha512-nFR0zLpU2YCaRxwoCJvL6UvCH2JFyFVIvwTLsIf21AuHlMskA1hhTdk+LlYJtOlYt9v6dvszD2BGRqBL+iQK9Q==",
+      "deprecated": "Glob versions prior to v9 are no longer supported",
+      "dev": true,
+      "license": "ISC",
+      "dependencies": {
+        "fs.realpath": "^1.0.0",
+        "inflight": "^1.0.4",
+        "inherits": "2",
+        "minimatch": "^3.1.1",
+        "once": "^1.3.0",
+        "path-is-absolute": "^1.0.0"
+      },
+      "engines": {
+        "node": "*"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/isaacs"
+      }
+    },
+    "node_modules/glob-parent": {
+      "version": "6.0.2",
+      "resolved": "https://registry.npmjs.org/glob-parent/-/glob-parent-6.0.2.tgz",
+      "integrity": "sha512-XxwI8EOhVQgWp6iDL+3b0r86f4d6AX6zSU55HfB4ydCEuXLXc5FcYeOu+nnGftS4TEju/11rt4KJPTMgbfmv4A==",
+      "dev": true,
+      "license": "ISC",
+      "dependencies": {
+        "is-glob": "^4.0.3"
+      },
+      "engines": {
+        "node": ">=10.13.0"
+      }
+    },
+    "node_modules/globals": {
+      "version": "11.12.0",
+      "resolved": "https://registry.npmjs.org/globals/-/globals-11.12.0.tgz",
+      "integrity": "sha512-WOBp/EEGUiIsJSp7wcv/y6MO+lV9UoncWqxuFfm8eBwzWNgyfBd6Gz+IeKQ9jCmyhoH99g15M3T+QaVHFjizVA==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": ">=4"
+      }
+    },
+    "node_modules/globalthis": {
+      "version": "1.0.4",
+      "resolved": "https://registry.npmjs.org/globalthis/-/globalthis-1.0.4.tgz",
+      "integrity": "sha512-DpLKbNU4WylpxJykQujfCcwYWiV/Jhm50Goo0wrVILAv5jOr9d+H+UR3PhSCD2rCCEIg0uc+G+muBTwD54JhDQ==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "define-properties": "^1.2.1",
+        "gopd": "^1.0.1"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/gopd": {
+      "version": "1.0.1",
+      "resolved": "https://registry.npmjs.org/gopd/-/gopd-1.0.1.tgz",
+      "integrity": "sha512-d65bNlIadxvpb/A2abVdlqKqV563juRnZ1Wtk6s1sIR8uNsXR70xqIzVqxVf1eTqDunwT2MkczEeaezCKTZhwA==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "get-intrinsic": "^1.1.3"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/graphemer": {
+      "version": "1.4.0",
+      "resolved": "https://registry.npmjs.org/graphemer/-/graphemer-1.4.0.tgz",
+      "integrity": "sha512-EtKwoO6kxCL9WO5xipiHTZlSzBm7WLT627TqC/uVRd0HKmq8NXyebnNYxDoBi7wt8eTWrUrKXCOVaFq9x1kgag==",
+      "dev": true,
+      "license": "MIT"
+    },
+    "node_modules/has-bigints": {
+      "version": "1.0.2",
+      "resolved": "https://registry.npmjs.org/has-bigints/-/has-bigints-1.0.2.tgz",
+      "integrity": "sha512-tSvCKtBr9lkF0Ex0aQiP9N+OpV4zi2r/Nee5VkRDbaqv35RLYMzbwQfFSZZH0kR+Rd6302UJZ2p/bJCEoR3VoQ==",
+      "dev": true,
+      "license": "MIT",
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/has-flag": {
+      "version": "3.0.0",
+      "resolved": "https://registry.npmjs.org/has-flag/-/has-flag-3.0.0.tgz",
+      "integrity": "sha512-sKJf1+ceQBr4SMkvQnBDNDtf4TXpVhVGateu0t918bl30FnbE2m4vNLX+VWe/dpjlb+HugGYzW7uQXH98HPEYw==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": ">=4"
+      }
+    },
+    "node_modules/has-property-descriptors": {
+      "version": "1.0.2",
+      "resolved": "https://registry.npmjs.org/has-property-descriptors/-/has-property-descriptors-1.0.2.tgz",
+      "integrity": "sha512-55JNKuIW+vq4Ke1BjOTjM2YctQIvCT7GFzHwmfZPGo5wnrgkid0YQtnAleFSqumZm4az3n2BS+erby5ipJdgrg==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "es-define-property": "^1.0.0"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/has-proto": {
+      "version": "1.0.3",
+      "resolved": "https://registry.npmjs.org/has-proto/-/has-proto-1.0.3.tgz",
+      "integrity": "sha512-SJ1amZAJUiZS+PhsVLf5tGydlaVB8EdFpaSO4gmiUKUOxk8qzn5AIy4ZeJUmh22znIdk/uMAUT2pl3FxzVUH+Q==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/has-symbols": {
+      "version": "1.0.3",
+      "resolved": "https://registry.npmjs.org/has-symbols/-/has-symbols-1.0.3.tgz",
+      "integrity": "sha512-l3LCuF6MgDNwTDKkdYGEihYjt5pRPbEg46rtlmnSPlUbgmB8LOIrKJbYYFBSbnPaJexMKtiPO8hmeRjRz2Td+A==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/has-tostringtag": {
+      "version": "1.0.2",
+      "resolved": "https://registry.npmjs.org/has-tostringtag/-/has-tostringtag-1.0.2.tgz",
+      "integrity": "sha512-NqADB8VjPFLM2V0VvHUewwwsw0ZWBaIdgo+ieHtK3hasLz4qeCRjYcqfB6AQrBggRKppKF8L52/VqdVsO47Dlw==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "has-symbols": "^1.0.3"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/hasown": {
+      "version": "2.0.2",
+      "resolved": "https://registry.npmjs.org/hasown/-/hasown-2.0.2.tgz",
+      "integrity": "sha512-0hJU9SCPvmMzIBdZFqNPXWa6dqh7WdH0cII9y+CyS8rG3nL48Bclra9HmKhVVUHyPWNH5Y7xDwAB7bfgSjkUMQ==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "function-bind": "^1.1.2"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      }
+    },
+    "node_modules/ignore": {
+      "version": "5.3.2",
+      "resolved": "https://registry.npmjs.org/ignore/-/ignore-5.3.2.tgz",
+      "integrity": "sha512-hsBTNUqQTDwkWtcdYI2i06Y/nUBEsNEDJKjWdigLvegy8kDuJAS8uRlpkkcQpyEXL0Z/pjDy5HBmMjRCJ2gq+g==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": ">= 4"
+      }
+    },
+    "node_modules/immutable": {
+      "version": "4.3.7",
+      "resolved": "https://registry.npmjs.org/immutable/-/immutable-4.3.7.tgz",
+      "integrity": "sha512-1hqclzwYwjRDFLjcFxOM5AYkkG0rpFPpr1RLPMEuGczoS7YA8gLhy8SWXYRAA/XwfEHpfo3cw5JGioS32fnMRw==",
+      "dev": true,
+      "license": "MIT"
+    },
+    "node_modules/import-fresh": {
+      "version": "3.3.0",
+      "resolved": "https://registry.npmjs.org/import-fresh/-/import-fresh-3.3.0.tgz",
+      "integrity": "sha512-veYYhQa+D1QBKznvhUHxb8faxlrwUnxseDAbAp457E0wLNio2bOSKnjYDhMj+YiAq61xrMGhQk9iXVk5FzgQMw==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "parent-module": "^1.0.0",
+        "resolve-from": "^4.0.0"
+      },
+      "engines": {
+        "node": ">=6"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/sindresorhus"
+      }
+    },
+    "node_modules/import-fresh/node_modules/resolve-from": {
+      "version": "4.0.0",
+      "resolved": "https://registry.npmjs.org/resolve-from/-/resolve-from-4.0.0.tgz",
+      "integrity": "sha512-pb/MYmXstAkysRFx8piNI1tGFNQIFA3vkE3Gq4EuA1dF6gHp/+vgZqsCGJapvy8N3Q+4o7FwvquPJcnZ7RYy4g==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": ">=4"
+      }
+    },
+    "node_modules/imurmurhash": {
+      "version": "0.1.4",
+      "resolved": "https://registry.npmjs.org/imurmurhash/-/imurmurhash-0.1.4.tgz",
+      "integrity": "sha512-JmXMZ6wuvDmLiHEml9ykzqO6lwFbof0GG4IkcGaENdCRDDmMVnny7s5HsIgHCbaq0w2MyPhDqkhTUgS2LU2PHA==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": ">=0.8.19"
+      }
+    },
+    "node_modules/inflight": {
+      "version": "1.0.6",
+      "resolved": "https://registry.npmjs.org/inflight/-/inflight-1.0.6.tgz",
+      "integrity": "sha512-k92I/b08q4wvFscXCLvqfsHCrjrF7yiXsQuIVvVE7N82W3+aqpzuUdBbfhWcy/FZR3/4IgflMgKLOsvPDrGCJA==",
+      "deprecated": "This module is not supported, and leaks memory. Do not use it. Check out lru-cache if you want a good and tested way to coalesce async requests by a key value, which is much more comprehensive and powerful.",
+      "dev": true,
+      "license": "ISC",
+      "dependencies": {
+        "once": "^1.3.0",
+        "wrappy": "1"
+      }
+    },
+    "node_modules/inherits": {
+      "version": "2.0.4",
+      "resolved": "https://registry.npmjs.org/inherits/-/inherits-2.0.4.tgz",
+      "integrity": "sha512-k/vGaX4/Yla3WzyMCvTQOXYeIHvqOKtnqBduzTHpzpQZzAskKMhZ2K+EnBiSM9zGSoIFeMpXKxa4dYeZIQqewQ==",
+      "dev": true,
+      "license": "ISC"
+    },
+    "node_modules/internal-slot": {
+      "version": "1.0.7",
+      "resolved": "https://registry.npmjs.org/internal-slot/-/internal-slot-1.0.7.tgz",
+      "integrity": "sha512-NGnrKwXzSms2qUUih/ILZ5JBqNTSa1+ZmP6flaIp6KmSElgE9qdndzS3cqjrDovwFdmwsGsLdeFgB6suw+1e9g==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "es-errors": "^1.3.0",
+        "hasown": "^2.0.0",
+        "side-channel": "^1.0.4"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      }
+    },
+    "node_modules/is-array-buffer": {
+      "version": "3.0.4",
+      "resolved": "https://registry.npmjs.org/is-array-buffer/-/is-array-buffer-3.0.4.tgz",
+      "integrity": "sha512-wcjaerHw0ydZwfhiKbXJWLDY8A7yV7KhjQOpb83hGgGfId/aQa4TOvwyzn2PuswW2gPCYEL/nEAiSVpdOj1lXw==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "call-bind": "^1.0.2",
+        "get-intrinsic": "^1.2.1"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/is-async-function": {
+      "version": "2.0.0",
+      "resolved": "https://registry.npmjs.org/is-async-function/-/is-async-function-2.0.0.tgz",
+      "integrity": "sha512-Y1JXKrfykRJGdlDwdKlLpLyMIiWqWvuSd17TvZk68PLAOGOoF4Xyav1z0Xhoi+gCYjZVeC5SI+hYFOfvXmGRCA==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "has-tostringtag": "^1.0.0"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/is-bigint": {
+      "version": "1.0.4",
+      "resolved": "https://registry.npmjs.org/is-bigint/-/is-bigint-1.0.4.tgz",
+      "integrity": "sha512-zB9CruMamjym81i2JZ3UMn54PKGsQzsJeo6xvN3HJJ4CAsQNB6iRutp2To77OfCNuoxspsIhzaPoO1zyCEhFOg==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "has-bigints": "^1.0.1"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/is-boolean-object": {
+      "version": "1.1.2",
+      "resolved": "https://registry.npmjs.org/is-boolean-object/-/is-boolean-object-1.1.2.tgz",
+      "integrity": "sha512-gDYaKHJmnj4aWxyj6YHyXVpdQawtVLHU5cb+eztPGczf6cjuTdwve5ZIEfgXqH4e57An1D1AKf8CZ3kYrQRqYA==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "call-bind": "^1.0.2",
+        "has-tostringtag": "^1.0.0"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/is-callable": {
+      "version": "1.2.7",
+      "resolved": "https://registry.npmjs.org/is-callable/-/is-callable-1.2.7.tgz",
+      "integrity": "sha512-1BC0BVFhS/p0qtw6enp8e+8OD0UrK0oFLztSjNzhcKA3WDuJxxAPXzPuPtKkjEY9UUoEWlX/8fgKeu2S8i9JTA==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/is-core-module": {
+      "version": "2.15.1",
+      "resolved": "https://registry.npmjs.org/is-core-module/-/is-core-module-2.15.1.tgz",
+      "integrity": "sha512-z0vtXSwucUJtANQWldhbtbt7BnL0vxiFjIdDLAatwhDYty2bad6s+rijD6Ri4YuYJubLzIJLUidCh09e1djEVQ==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "hasown": "^2.0.2"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/is-data-view": {
+      "version": "1.0.1",
+      "resolved": "https://registry.npmjs.org/is-data-view/-/is-data-view-1.0.1.tgz",
+      "integrity": "sha512-AHkaJrsUVW6wq6JS8y3JnM/GJF/9cf+k20+iDzlSaJrinEo5+7vRiteOSwBhHRiAyQATN1AmY4hwzxJKPmYf+w==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "is-typed-array": "^1.1.13"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/is-date-object": {
+      "version": "1.0.5",
+      "resolved": "https://registry.npmjs.org/is-date-object/-/is-date-object-1.0.5.tgz",
+      "integrity": "sha512-9YQaSxsAiSwcvS33MBk3wTCVnWK+HhF8VZR2jRxehM16QcVOdHqPn4VPHmRK4lSr38n9JriurInLcP90xsYNfQ==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "has-tostringtag": "^1.0.0"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/is-extglob": {
+      "version": "2.1.1",
+      "resolved": "https://registry.npmjs.org/is-extglob/-/is-extglob-2.1.1.tgz",
+      "integrity": "sha512-SbKbANkN603Vi4jEZv49LeVJMn4yGwsbzZworEoyEiutsN3nJYdbO36zfhGJ6QEDpOZIFkDtnq5JRxmvl3jsoQ==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": ">=0.10.0"
+      }
+    },
+    "node_modules/is-finalizationregistry": {
+      "version": "1.0.2",
+      "resolved": "https://registry.npmjs.org/is-finalizationregistry/-/is-finalizationregistry-1.0.2.tgz",
+      "integrity": "sha512-0by5vtUJs8iFQb5TYUHHPudOR+qXYIMKtiUzvLIZITZUjknFmziyBJuLhVRc+Ds0dREFlskDNJKYIdIzu/9pfw==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "call-bind": "^1.0.2"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/is-generator-function": {
+      "version": "1.0.10",
+      "resolved": "https://registry.npmjs.org/is-generator-function/-/is-generator-function-1.0.10.tgz",
+      "integrity": "sha512-jsEjy9l3yiXEQ+PsXdmBwEPcOxaXWLspKdplFUVI9vq1iZgIekeC0L167qeu86czQaxed3q/Uzuw0swL0irL8A==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "has-tostringtag": "^1.0.0"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/is-glob": {
+      "version": "4.0.3",
+      "resolved": "https://registry.npmjs.org/is-glob/-/is-glob-4.0.3.tgz",
+      "integrity": "sha512-xelSayHH36ZgE7ZWhli7pW34hNbNl8Ojv5KVmkJD4hBdD3th8Tfk9vYasLM+mXWOZhFkgZfxhLSnrwRr4elSSg==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "is-extglob": "^2.1.1"
+      },
+      "engines": {
+        "node": ">=0.10.0"
+      }
+    },
+    "node_modules/is-map": {
+      "version": "2.0.3",
+      "resolved": "https://registry.npmjs.org/is-map/-/is-map-2.0.3.tgz",
+      "integrity": "sha512-1Qed0/Hr2m+YqxnM09CjA2d/i6YZNfF6R2oRAOj36eUdS6qIV/huPJNSEpKbupewFs+ZsJlxsjjPbc0/afW6Lw==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/is-negative-zero": {
+      "version": "2.0.3",
+      "resolved": "https://registry.npmjs.org/is-negative-zero/-/is-negative-zero-2.0.3.tgz",
+      "integrity": "sha512-5KoIu2Ngpyek75jXodFvnafB6DJgr3u8uuK0LEZJjrU19DrMD3EVERaR8sjz8CCGgpZvxPl9SuE1GMVPFHx1mw==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/is-number-object": {
+      "version": "1.0.7",
+      "resolved": "https://registry.npmjs.org/is-number-object/-/is-number-object-1.0.7.tgz",
+      "integrity": "sha512-k1U0IRzLMo7ZlYIfzRu23Oh6MiIFasgpb9X76eqfFZAqwH44UI4KTBvBYIZ1dSL9ZzChTB9ShHfLkR4pdW5krQ==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "has-tostringtag": "^1.0.0"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/is-path-inside": {
+      "version": "3.0.3",
+      "resolved": "https://registry.npmjs.org/is-path-inside/-/is-path-inside-3.0.3.tgz",
+      "integrity": "sha512-Fd4gABb+ycGAmKou8eMftCupSir5lRxqf4aD/vd0cD2qc4HL07OjCeuHMr8Ro4CoMaeCKDB0/ECBOVWjTwUvPQ==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": ">=8"
+      }
+    },
+    "node_modules/is-regex": {
+      "version": "1.1.4",
+      "resolved": "https://registry.npmjs.org/is-regex/-/is-regex-1.1.4.tgz",
+      "integrity": "sha512-kvRdxDsxZjhzUX07ZnLydzS1TU/TJlTUHHY4YLL87e37oUA49DfkLqgy+VjFocowy29cKvcSiu+kIv728jTTVg==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "call-bind": "^1.0.2",
+        "has-tostringtag": "^1.0.0"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/is-set": {
+      "version": "2.0.3",
+      "resolved": "https://registry.npmjs.org/is-set/-/is-set-2.0.3.tgz",
+      "integrity": "sha512-iPAjerrse27/ygGLxw+EBR9agv9Y6uLeYVJMu+QNCoouJ1/1ri0mGrcWpfCqFZuzzx3WjtwxG098X+n4OuRkPg==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/is-shared-array-buffer": {
+      "version": "1.0.3",
+      "resolved": "https://registry.npmjs.org/is-shared-array-buffer/-/is-shared-array-buffer-1.0.3.tgz",
+      "integrity": "sha512-nA2hv5XIhLR3uVzDDfCIknerhx8XUKnstuOERPNNIinXG7v9u+ohXF67vxm4TPTEPU6lm61ZkwP3c9PCB97rhg==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "call-bind": "^1.0.7"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/is-string": {
+      "version": "1.0.7",
+      "resolved": "https://registry.npmjs.org/is-string/-/is-string-1.0.7.tgz",
+      "integrity": "sha512-tE2UXzivje6ofPW7l23cjDOMa09gb7xlAqG6jG5ej6uPV32TlWP3NKPigtaGeHNu9fohccRYvIiZMfOOnOYUtg==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "has-tostringtag": "^1.0.0"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/is-symbol": {
+      "version": "1.0.4",
+      "resolved": "https://registry.npmjs.org/is-symbol/-/is-symbol-1.0.4.tgz",
+      "integrity": "sha512-C/CPBqKWnvdcxqIARxyOh4v1UUEOCHpgDa0WYgpKDFMszcrPcffg5uhwSgPCLD2WWxmq6isisz87tzT01tuGhg==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "has-symbols": "^1.0.2"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/is-typed-array": {
+      "version": "1.1.13",
+      "resolved": "https://registry.npmjs.org/is-typed-array/-/is-typed-array-1.1.13.tgz",
+      "integrity": "sha512-uZ25/bUAlUY5fR4OKT4rZQEBrzQWYV9ZJYGGsUmEJ6thodVJ1HX64ePQ6Z0qPWP+m+Uq6e9UugrE38jeYsDSMw==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "which-typed-array": "^1.1.14"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/is-weakmap": {
+      "version": "2.0.2",
+      "resolved": "https://registry.npmjs.org/is-weakmap/-/is-weakmap-2.0.2.tgz",
+      "integrity": "sha512-K5pXYOm9wqY1RgjpL3YTkF39tni1XajUIkawTLUo9EZEVUFga5gSQJF8nNS7ZwJQ02y+1YCNYcMh+HIf1ZqE+w==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/is-weakref": {
+      "version": "1.0.2",
+      "resolved": "https://registry.npmjs.org/is-weakref/-/is-weakref-1.0.2.tgz",
+      "integrity": "sha512-qctsuLZmIQ0+vSSMfoVvyFe2+GSEvnmZ2ezTup1SBse9+twCCeial6EEi3Nc2KFcf6+qz2FBPnjXsk8xhKSaPQ==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "call-bind": "^1.0.2"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/is-weakset": {
+      "version": "2.0.3",
+      "resolved": "https://registry.npmjs.org/is-weakset/-/is-weakset-2.0.3.tgz",
+      "integrity": "sha512-LvIm3/KWzS9oRFHugab7d+M/GcBXuXX5xZkzPmN+NxihdQlZUQ4dWuSV1xR/sq6upL1TJEDrfBgRepHFdBtSNQ==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "call-bind": "^1.0.7",
+        "get-intrinsic": "^1.2.4"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/isarray": {
+      "version": "2.0.5",
+      "resolved": "https://registry.npmjs.org/isarray/-/isarray-2.0.5.tgz",
+      "integrity": "sha512-xHjhDr3cNBK0BzdUJSPXZntQUx/mwMS5Rw4A7lPJ90XGAO6ISP/ePDNuo0vhqOZU+UD5JoodwCAAoZQd3FeAKw==",
+      "dev": true,
+      "license": "MIT"
+    },
+    "node_modules/isexe": {
+      "version": "2.0.0",
+      "resolved": "https://registry.npmjs.org/isexe/-/isexe-2.0.0.tgz",
+      "integrity": "sha512-RHxMLp9lnKHGHRng9QFhRCMbYAcVpn69smSGcq3f36xjgVVWThj4qqLbTLlq7Ssj8B+fIQ1EuCEGI2lKsyQeIw==",
+      "dev": true,
+      "license": "ISC"
+    },
+    "node_modules/iterator.prototype": {
+      "version": "1.1.3",
+      "resolved": "https://registry.npmjs.org/iterator.prototype/-/iterator.prototype-1.1.3.tgz",
+      "integrity": "sha512-FW5iMbeQ6rBGm/oKgzq2aW4KvAGpxPzYES8N4g4xNXUKpL1mclMvOe+76AcLDTvD+Ze+sOpVhgdAQEKF4L9iGQ==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "define-properties": "^1.2.1",
+        "get-intrinsic": "^1.2.1",
+        "has-symbols": "^1.0.3",
+        "reflect.getprototypeof": "^1.0.4",
+        "set-function-name": "^2.0.1"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      }
+    },
+    "node_modules/js-tokens": {
+      "version": "4.0.0",
+      "resolved": "https://registry.npmjs.org/js-tokens/-/js-tokens-4.0.0.tgz",
+      "integrity": "sha512-RdJUflcE3cUzKiMqQgsCu06FPu9UdIJO0beYbPhHN4k6apgJtifcoCtT9bcxOpYBtpD2kCM6Sbzg4CausW/PKQ==",
+      "license": "MIT"
+    },
+    "node_modules/jsesc": {
+      "version": "3.0.2",
+      "resolved": "https://registry.npmjs.org/jsesc/-/jsesc-3.0.2.tgz",
+      "integrity": "sha512-xKqzzWXDttJuOcawBt4KnKHHIf5oQ/Cxax+0PWFG+DFDgHNAdi+TXECADI+RYiFUMmx8792xsMbbgXj4CwnP4g==",
+      "dev": true,
+      "license": "MIT",
+      "bin": {
+        "jsesc": "bin/jsesc"
+      },
+      "engines": {
+        "node": ">=6"
+      }
+    },
+    "node_modules/json-buffer": {
+      "version": "3.0.1",
+      "resolved": "https://registry.npmjs.org/json-buffer/-/json-buffer-3.0.1.tgz",
+      "integrity": "sha512-4bV5BfR2mqfQTJm+V5tPPdf+ZpuhiIvTuAB5g8kcrXOZpTT/QwwVRWBywX1ozr6lEuPdbHxwaJlm9G6mI2sfSQ==",
+      "dev": true,
+      "license": "MIT"
+    },
+    "node_modules/json-schema-traverse": {
+      "version": "0.4.1",
+      "resolved": "https://registry.npmjs.org/json-schema-traverse/-/json-schema-traverse-0.4.1.tgz",
+      "integrity": "sha512-xbbCH5dCYU5T8LcEhhuh7HJ88HXuW3qsI3Y0zOZFKfZEHcpWiHU/Jxzk629Brsab/mMiHQti9wMP+845RPe3Vg==",
+      "dev": true,
+      "license": "MIT"
+    },
+    "node_modules/json-stable-stringify-without-jsonify": {
+      "version": "1.0.1",
+      "resolved": "https://registry.npmjs.org/json-stable-stringify-without-jsonify/-/json-stable-stringify-without-jsonify-1.0.1.tgz",
+      "integrity": "sha512-Bdboy+l7tA3OGW6FjyFHWkP5LuByj1Tk33Ljyq0axyzdk9//JSi2u3fP1QSmd1KNwq6VOKYGlAu87CisVir6Pw==",
+      "dev": true,
+      "license": "MIT"
+    },
+    "node_modules/json5": {
+      "version": "2.2.3",
+      "resolved": "https://registry.npmjs.org/json5/-/json5-2.2.3.tgz",
+      "integrity": "sha512-XmOWe7eyHYH14cLdVPoyg+GOH3rYX++KpzrylJwSW98t3Nk+U8XOl8FWKOgwtzdb8lXGf6zYwDUzeHMWfxasyg==",
+      "dev": true,
+      "license": "MIT",
+      "bin": {
+        "json5": "lib/cli.js"
+      },
+      "engines": {
+        "node": ">=6"
+      }
+    },
+    "node_modules/jsx-ast-utils": {
+      "version": "3.3.5",
+      "resolved": "https://registry.npmjs.org/jsx-ast-utils/-/jsx-ast-utils-3.3.5.tgz",
+      "integrity": "sha512-ZZow9HBI5O6EPgSJLUb8n2NKgmVWTwCvHGwFuJlMjvLFqlGG6pjirPhtdsseaLZjSibD8eegzmYpUZwoIlj2cQ==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "array-includes": "^3.1.6",
+        "array.prototype.flat": "^1.3.1",
+        "object.assign": "^4.1.4",
+        "object.values": "^1.1.6"
+      },
+      "engines": {
+        "node": ">=4.0"
+      }
+    },
+    "node_modules/keyv": {
+      "version": "4.5.4",
+      "resolved": "https://registry.npmjs.org/keyv/-/keyv-4.5.4.tgz",
+      "integrity": "sha512-oxVHkHR/EJf2CNXnWxRLW6mg7JyCCUcG0DtEGmL2ctUo1PNTin1PUil+r/+4r5MpVgC/fn1kjsx7mjSujKqIpw==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "json-buffer": "3.0.1"
+      }
+    },
+    "node_modules/levn": {
+      "version": "0.4.1",
+      "resolved": "https://registry.npmjs.org/levn/-/levn-0.4.1.tgz",
+      "integrity": "sha512-+bT2uH4E5LGE7h/n3evcS/sQlJXCpIp6ym8OWJ5eV6+67Dsql/LaaT7qJBAt2rzfoa/5QBGBhxDix1dMt2kQKQ==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "prelude-ls": "^1.2.1",
+        "type-check": "~0.4.0"
+      },
+      "engines": {
+        "node": ">= 0.8.0"
+      }
+    },
+    "node_modules/lodash": {
+      "version": "4.17.21",
+      "resolved": "https://registry.npmjs.org/lodash/-/lodash-4.17.21.tgz",
+      "integrity": "sha512-v2kDEe57lecTulaDIuNTPy3Ry4gLGJ6Z1O3vE1krgXZNrsQ+LFTGHVxVjcXPs17LhbZVGedAJv8XZ1tvj5FvSg==",
+      "license": "MIT"
+    },
+    "node_modules/lodash-es": {
+      "version": "4.17.21",
+      "resolved": "https://registry.npmjs.org/lodash-es/-/lodash-es-4.17.21.tgz",
+      "integrity": "sha512-mKnC+QJ9pWVzv+C4/U3rRsHapFfHvQFoFB92e52xeyGMcX6/OlIl78je1u8vePzYZSkkogMPJ2yjxxsb89cxyw==",
+      "license": "MIT"
+    },
+    "node_modules/lodash.merge": {
+      "version": "4.6.2",
+      "resolved": "https://registry.npmjs.org/lodash.merge/-/lodash.merge-4.6.2.tgz",
+      "integrity": "sha512-0KpjqXRVvrYyCsX1swR/XTK0va6VQkQM6MNo7PqW77ByjAhoARA8EfrP1N4+KlKj8YS0ZUCtRT/YUuhyYDujIQ==",
+      "dev": true,
+      "license": "MIT"
+    },
+    "node_modules/loose-envify": {
+      "version": "1.4.0",
+      "resolved": "https://registry.npmjs.org/loose-envify/-/loose-envify-1.4.0.tgz",
+      "integrity": "sha512-lyuxPGr/Wfhrlem2CL/UcnUc1zcqKAImBDzukY7Y5F/yQiNdko6+fRLevlw1HgMySw7f611UIY408EtxRSoK3Q==",
+      "license": "MIT",
+      "dependencies": {
+        "js-tokens": "^3.0.0 || ^4.0.0"
+      },
+      "bin": {
+        "loose-envify": "cli.js"
+      }
+    },
+    "node_modules/lru-cache": {
+      "version": "5.1.1",
+      "resolved": "https://registry.npmjs.org/lru-cache/-/lru-cache-5.1.1.tgz",
+      "integrity": "sha512-KpNARQA3Iwv+jTA0utUVVbrh+Jlrr1Fv0e56GGzAFOXN7dk/FviaDW8LHmK52DlcH4WP2n6gI8vN1aesBFgo9w==",
+      "dev": true,
+      "license": "ISC",
+      "dependencies": {
+        "yallist": "^3.0.2"
+      }
+    },
+    "node_modules/minimatch": {
+      "version": "3.1.2",
+      "resolved": "https://registry.npmjs.org/minimatch/-/minimatch-3.1.2.tgz",
+      "integrity": "sha512-J7p63hRiAjw1NDEww1W7i37+ByIrOWO5XQQAzZ3VOcL0PNybwpfmV/N05zFAzwQ9USyEcX6t3UO+K5aqBQOIHw==",
+      "dev": true,
+      "license": "ISC",
+      "dependencies": {
+        "brace-expansion": "^1.1.7"
+      },
+      "engines": {
+        "node": "*"
+      }
+    },
+    "node_modules/ms": {
+      "version": "2.1.3",
+      "resolved": "https://registry.npmjs.org/ms/-/ms-2.1.3.tgz",
+      "integrity": "sha512-6FlzubTLZG3J2a/NVCAleEhjzq5oxgHyaCU9yYXvcLsvoVaHJq/s5xXI6/XXP6tz7R9xAOtHnSO/tXtF3WRTlA==",
+      "dev": true,
+      "license": "MIT"
+    },
+    "node_modules/nanoid": {
+      "version": "3.3.7",
+      "resolved": "https://registry.npmjs.org/nanoid/-/nanoid-3.3.7.tgz",
+      "integrity": "sha512-eSRppjcPIatRIMC1U6UngP8XFcz8MQWGQdt1MTBQ7NaAmvXDfvNxbvWV3x2y6CdEUciCSsDHDQZbhYaB8QEo2g==",
+      "dev": true,
+      "funding": [
+        {
+          "type": "github",
+          "url": "https://github.com/sponsors/ai"
+        }
+      ],
+      "license": "MIT",
+      "bin": {
+        "nanoid": "bin/nanoid.cjs"
+      },
+      "engines": {
+        "node": "^10 || ^12 || ^13.7 || ^14 || >=15.0.1"
+      }
+    },
+    "node_modules/natural-compare": {
+      "version": "1.4.0",
+      "resolved": "https://registry.npmjs.org/natural-compare/-/natural-compare-1.4.0.tgz",
+      "integrity": "sha512-OWND8ei3VtNC9h7V60qff3SVobHr996CTwgxubgyQYEpg290h9J0buyECNNJexkFm5sOajh5G116RYA1c8ZMSw==",
+      "dev": true,
+      "license": "MIT"
+    },
+    "node_modules/node-releases": {
+      "version": "2.0.18",
+      "resolved": "https://registry.npmjs.org/node-releases/-/node-releases-2.0.18.tgz",
+      "integrity": "sha512-d9VeXT4SJ7ZeOqGX6R5EM022wpL+eWPooLI+5UpWn2jCT1aosUQEhQP214x33Wkwx3JQMvIm+tIoVOdodFS40g==",
+      "dev": true,
+      "license": "MIT"
+    },
+    "node_modules/normalize-range": {
+      "version": "0.1.2",
+      "resolved": "https://registry.npmjs.org/normalize-range/-/normalize-range-0.1.2.tgz",
+      "integrity": "sha512-bdok/XvKII3nUpklnV6P2hxtMNrCboOjAcyBuQnWEhO665FwrSNRxU+AqpsyvO6LgGYPspN+lu5CLtw4jPRKNA==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": ">=0.10.0"
+      }
+    },
+    "node_modules/object-assign": {
+      "version": "4.1.1",
+      "resolved": "https://registry.npmjs.org/object-assign/-/object-assign-4.1.1.tgz",
+      "integrity": "sha512-rJgTQnkUnH1sFw8yT6VSU3zD3sWmu6sZhIseY8VX+GRu3P6F7Fu+JNDoXfklElbLJSnc3FUQHVe4cU5hj+BcUg==",
+      "license": "MIT",
+      "engines": {
+        "node": ">=0.10.0"
+      }
+    },
+    "node_modules/object-inspect": {
+      "version": "1.13.2",
+      "resolved": "https://registry.npmjs.org/object-inspect/-/object-inspect-1.13.2.tgz",
+      "integrity": "sha512-IRZSRuzJiynemAXPYtPe5BoI/RESNYR7TYm50MC5Mqbd3Jmw5y790sErYw3V6SryFJD64b74qQQs9wn5Bg/k3g==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/object-keys": {
+      "version": "1.1.1",
+      "resolved": "https://registry.npmjs.org/object-keys/-/object-keys-1.1.1.tgz",
+      "integrity": "sha512-NuAESUOUMrlIXOfHKzD6bpPu3tYt3xvjNdRIQ+FeT0lNb4K8WR70CaDxhuNguS2XG+GjkyMwOzsN5ZktImfhLA==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": ">= 0.4"
+      }
+    },
+    "node_modules/object.assign": {
+      "version": "4.1.5",
+      "resolved": "https://registry.npmjs.org/object.assign/-/object.assign-4.1.5.tgz",
+      "integrity": "sha512-byy+U7gp+FVwmyzKPYhW2h5l3crpmGsxl7X2s8y43IgxvG4g3QZ6CffDtsNQy1WsmZpQbO+ybo0AlW7TY6DcBQ==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "call-bind": "^1.0.5",
+        "define-properties": "^1.2.1",
+        "has-symbols": "^1.0.3",
+        "object-keys": "^1.1.1"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/object.entries": {
+      "version": "1.1.8",
+      "resolved": "https://registry.npmjs.org/object.entries/-/object.entries-1.1.8.tgz",
+      "integrity": "sha512-cmopxi8VwRIAw/fkijJohSfpef5PdN0pMQJN6VC/ZKvn0LIknWD8KtgY6KlQdEc4tIjcQ3HxSMmnvtzIscdaYQ==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "call-bind": "^1.0.7",
+        "define-properties": "^1.2.1",
+        "es-object-atoms": "^1.0.0"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      }
+    },
+    "node_modules/object.fromentries": {
+      "version": "2.0.8",
+      "resolved": "https://registry.npmjs.org/object.fromentries/-/object.fromentries-2.0.8.tgz",
+      "integrity": "sha512-k6E21FzySsSK5a21KRADBd/NGneRegFO5pLHfdQLpRDETUNJueLXs3WCzyQ3tFRDYgbq3KHGXfTbi2bs8WQ6rQ==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "call-bind": "^1.0.7",
+        "define-properties": "^1.2.1",
+        "es-abstract": "^1.23.2",
+        "es-object-atoms": "^1.0.0"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/object.values": {
+      "version": "1.2.0",
+      "resolved": "https://registry.npmjs.org/object.values/-/object.values-1.2.0.tgz",
+      "integrity": "sha512-yBYjY9QX2hnRmZHAjG/f13MzmBzxzYgQhFrke06TTyKY5zSTEqkOeukBzIdVA3j3ulu8Qa3MbVFShV7T2RmGtQ==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "call-bind": "^1.0.7",
+        "define-properties": "^1.2.1",
+        "es-object-atoms": "^1.0.0"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/once": {
+      "version": "1.4.0",
+      "resolved": "https://registry.npmjs.org/once/-/once-1.4.0.tgz",
+      "integrity": "sha512-lNaJgI+2Q5URQBkccEKHTQOPaXdUxnZZElQTZY0MFUAuaEqe1E+Nyvgdz/aIyNi6Z9MzO5dv1H8n58/GELp3+w==",
+      "dev": true,
+      "license": "ISC",
+      "dependencies": {
+        "wrappy": "1"
+      }
+    },
+    "node_modules/optionator": {
+      "version": "0.9.4",
+      "resolved": "https://registry.npmjs.org/optionator/-/optionator-0.9.4.tgz",
+      "integrity": "sha512-6IpQ7mKUxRcZNLIObR0hz7lxsapSSIYNZJwXPGeF0mTVqGKFIXj1DQcMoT22S3ROcLyY/rz0PWaWZ9ayWmad9g==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "deep-is": "^0.1.3",
+        "fast-levenshtein": "^2.0.6",
+        "levn": "^0.4.1",
+        "prelude-ls": "^1.2.1",
+        "type-check": "^0.4.0",
+        "word-wrap": "^1.2.5"
+      },
+      "engines": {
+        "node": ">= 0.8.0"
+      }
+    },
+    "node_modules/parent-module": {
+      "version": "1.0.1",
+      "resolved": "https://registry.npmjs.org/parent-module/-/parent-module-1.0.1.tgz",
+      "integrity": "sha512-GQ2EWRpQV8/o+Aw8YqtfZZPfNRWZYkbidE9k5rpl/hC3vtHHBfGm2Ifi6qWV+coDGkrUKZAxE3Lot5kcsRlh+g==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "callsites": "^3.0.0"
+      },
+      "engines": {
+        "node": ">=6"
+      }
+    },
+    "node_modules/path-exists": {
+      "version": "4.0.0",
+      "resolved": "https://registry.npmjs.org/path-exists/-/path-exists-4.0.0.tgz",
+      "integrity": "sha512-ak9Qy5Q7jYb2Wwcey5Fpvg2KoAc/ZIhLSLOSBmRmygPsGwkVVt0fZa0qrtMz+m6tJTAHfZQ8FnmB4MG4LWy7/w==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": ">=8"
+      }
+    },
+    "node_modules/path-is-absolute": {
+      "version": "1.0.1",
+      "resolved": "https://registry.npmjs.org/path-is-absolute/-/path-is-absolute-1.0.1.tgz",
+      "integrity": "sha512-AVbw3UJ2e9bq64vSaS9Am0fje1Pa8pbGqTTsmXfaIiMpnr5DlDhfJOuLj9Sf95ZPVDAUerDfEk88MPmPe7UCQg==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": ">=0.10.0"
+      }
+    },
+    "node_modules/path-key": {
+      "version": "3.1.1",
+      "resolved": "https://registry.npmjs.org/path-key/-/path-key-3.1.1.tgz",
+      "integrity": "sha512-ojmeN0qd+y0jszEtoY48r0Peq5dwMEkIlCOu6Q5f41lfkswXuKtYrhgoTpLnyIcHm24Uhqx+5Tqm2InSwLhE6Q==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": ">=8"
+      }
+    },
+    "node_modules/path-parse": {
+      "version": "1.0.7",
+      "resolved": "https://registry.npmjs.org/path-parse/-/path-parse-1.0.7.tgz",
+      "integrity": "sha512-LDJzPVEEEPR+y48z93A0Ed0yXb8pAByGWo/k5YYdYgpY2/2EsOsksJrq7lOHxryrVOn1ejG6oAp8ahvOIQD8sw==",
+      "dev": true,
+      "license": "MIT"
+    },
+    "node_modules/picocolors": {
+      "version": "1.1.0",
+      "resolved": "https://registry.npmjs.org/picocolors/-/picocolors-1.1.0.tgz",
+      "integrity": "sha512-TQ92mBOW0l3LeMeyLV6mzy/kWr8lkd/hp3mTg7wYK7zJhuBStmGMBG0BdeDZS/dZx1IukaX6Bk11zcln25o1Aw==",
+      "dev": true,
+      "license": "ISC"
+    },
+    "node_modules/possible-typed-array-names": {
+      "version": "1.0.0",
+      "resolved": "https://registry.npmjs.org/possible-typed-array-names/-/possible-typed-array-names-1.0.0.tgz",
+      "integrity": "sha512-d7Uw+eZoloe0EHDIYoe+bQ5WXnGMOpmiZFTuMWCwpjzzkL2nTjcKiAk4hh8TjnGye2TwWOk3UXucZ+3rbmBa8Q==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": ">= 0.4"
+      }
+    },
+    "node_modules/postcss": {
+      "version": "8.4.47",
+      "resolved": "https://registry.npmjs.org/postcss/-/postcss-8.4.47.tgz",
+      "integrity": "sha512-56rxCq7G/XfB4EkXq9Egn5GCqugWvDFjafDOThIdMBsI15iqPqR5r15TfSr1YPYeEI19YeaXMCbY6u88Y76GLQ==",
+      "dev": true,
+      "funding": [
+        {
+          "type": "opencollective",
+          "url": "https://opencollective.com/postcss/"
+        },
+        {
+          "type": "tidelift",
+          "url": "https://tidelift.com/funding/github/npm/postcss"
+        },
+        {
+          "type": "github",
+          "url": "https://github.com/sponsors/ai"
+        }
+      ],
+      "license": "MIT",
+      "dependencies": {
+        "nanoid": "^3.3.7",
+        "picocolors": "^1.1.0",
+        "source-map-js": "^1.2.1"
+      },
+      "engines": {
+        "node": "^10 || ^12 || >=14"
+      }
+    },
+    "node_modules/postcss-value-parser": {
+      "version": "4.2.0",
+      "resolved": "https://registry.npmjs.org/postcss-value-parser/-/postcss-value-parser-4.2.0.tgz",
+      "integrity": "sha512-1NNCs6uurfkVbeXG4S8JFT9t19m45ICnif8zWLd5oPSZ50QnwMfK+H3jv408d4jw/7Bttv5axS5IiHoLaVNHeQ==",
+      "dev": true,
+      "license": "MIT"
+    },
+    "node_modules/prelude-ls": {
+      "version": "1.2.1",
+      "resolved": "https://registry.npmjs.org/prelude-ls/-/prelude-ls-1.2.1.tgz",
+      "integrity": "sha512-vkcDPrRZo1QZLbn5RLGPpg/WmIQ65qoWWhcGKf/b5eplkkarX0m9z8ppCat4mlOqUsWpyNuYgO3VRyrYHSzX5g==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": ">= 0.8.0"
+      }
+    },
+    "node_modules/prettier": {
+      "version": "3.3.3",
+      "resolved": "https://registry.npmjs.org/prettier/-/prettier-3.3.3.tgz",
+      "integrity": "sha512-i2tDNA0O5IrMO757lfrdQZCc2jPNDVntV0m/+4whiDfWaTKfMNgR7Qz0NAeGz/nRqF4m5/6CLzbP4/liHt12Ew==",
+      "dev": true,
+      "license": "MIT",
+      "bin": {
+        "prettier": "bin/prettier.cjs"
+      },
+      "engines": {
+        "node": ">=14"
+      },
+      "funding": {
+        "url": "https://github.com/prettier/prettier?sponsor=1"
+      }
+    },
+    "node_modules/prettier-linter-helpers": {
+      "version": "1.0.0",
+      "resolved": "https://registry.npmjs.org/prettier-linter-helpers/-/prettier-linter-helpers-1.0.0.tgz",
+      "integrity": "sha512-GbK2cP9nraSSUF9N2XwUwqfzlAFlMNYYl+ShE/V+H8a9uNl/oUqB1w2EL54Jh0OlyRSd8RfWYJ3coVS4TROP2w==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "fast-diff": "^1.1.2"
+      },
+      "engines": {
+        "node": ">=6.0.0"
+      }
+    },
+    "node_modules/prop-types": {
+      "version": "15.8.1",
+      "resolved": "https://registry.npmjs.org/prop-types/-/prop-types-15.8.1.tgz",
+      "integrity": "sha512-oj87CgZICdulUohogVAR7AjlC0327U4el4L6eAvOqCeudMDVU0NThNaV+b9Df4dXgSP1gXMTnPdhfe/2qDH5cg==",
+      "license": "MIT",
+      "dependencies": {
+        "loose-envify": "^1.4.0",
+        "object-assign": "^4.1.1",
+        "react-is": "^16.13.1"
+      }
+    },
+    "node_modules/prop-types/node_modules/react-is": {
+      "version": "16.13.1",
+      "resolved": "https://registry.npmjs.org/react-is/-/react-is-16.13.1.tgz",
+      "integrity": "sha512-24e6ynE2H+OKt4kqsOvNd8kBpV65zoxbA4BVsEOB3ARVWQki/DHzaUoC5KuON/BiccDaCCTZBuOcfZs70kR8bQ==",
+      "license": "MIT"
+    },
+    "node_modules/punycode": {
+      "version": "2.3.1",
+      "resolved": "https://registry.npmjs.org/punycode/-/punycode-2.3.1.tgz",
+      "integrity": "sha512-vYt7UD1U9Wg6138shLtLOvdAu+8DsC/ilFtEVHcH+wydcSpNE20AfSOduf6MkRFahL5FY7X1oU7nKVZFtfq8Fg==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": ">=6"
+      }
+    },
+    "node_modules/queue-microtask": {
+      "version": "1.2.3",
+      "resolved": "https://registry.npmjs.org/queue-microtask/-/queue-microtask-1.2.3.tgz",
+      "integrity": "sha512-NuaNSa6flKT5JaSYQzJok04JzTL1CA6aGhv5rfLW3PgqA+M2ChpZQnAC8h8i4ZFkBS8X5RqkDBHA7r4hej3K9A==",
+      "dev": true,
+      "funding": [
+        {
+          "type": "github",
+          "url": "https://github.com/sponsors/feross"
+        },
+        {
+          "type": "patreon",
+          "url": "https://www.patreon.com/feross"
+        },
+        {
+          "type": "consulting",
+          "url": "https://feross.org/support"
+        }
+      ],
+      "license": "MIT"
+    },
+    "node_modules/react": {
+      "version": "18.3.1",
+      "resolved": "https://registry.npmjs.org/react/-/react-18.3.1.tgz",
+      "integrity": "sha512-wS+hAgJShR0KhEvPJArfuPVN1+Hz1t0Y6n5jLrGQbkb4urgPE/0Rve+1kMB1v/oWgHgm4WIcV+i7F2pTVj+2iQ==",
+      "license": "MIT",
+      "dependencies": {
+        "loose-envify": "^1.1.0"
+      },
+      "engines": {
+        "node": ">=0.10.0"
+      }
+    },
+    "node_modules/react-dom": {
+      "version": "18.3.1",
+      "resolved": "https://registry.npmjs.org/react-dom/-/react-dom-18.3.1.tgz",
+      "integrity": "sha512-5m4nQKp+rZRb09LNH59GM4BxTh9251/ylbKIbpe7TpGxfJ+9kv6BLkLBXIjjspbgbnIBNqlI23tRnTWT0snUIw==",
+      "license": "MIT",
+      "dependencies": {
+        "loose-envify": "^1.1.0",
+        "scheduler": "^0.23.2"
+      },
+      "peerDependencies": {
+        "react": "^18.3.1"
+      }
+    },
+    "node_modules/react-redux": {
+      "version": "9.1.2",
+      "resolved": "https://registry.npmjs.org/react-redux/-/react-redux-9.1.2.tgz",
+      "integrity": "sha512-0OA4dhM1W48l3uzmv6B7TXPCGmokUU4p1M44DGN2/D9a1FjVPukVjER1PcPX97jIg6aUeLq1XJo1IpfbgULn0w==",
+      "license": "MIT",
+      "dependencies": {
+        "@types/use-sync-external-store": "^0.0.3",
+        "use-sync-external-store": "^1.0.0"
+      },
+      "peerDependencies": {
+        "@types/react": "^18.2.25",
+        "react": "^18.0",
+        "redux": "^5.0.0"
+      },
+      "peerDependenciesMeta": {
+        "@types/react": {
+          "optional": true
+        },
+        "redux": {
+          "optional": true
+        }
+      }
+    },
+    "node_modules/react-router": {
+      "version": "6.26.2",
+      "resolved": "https://registry.npmjs.org/react-router/-/react-router-6.26.2.tgz",
+      "integrity": "sha512-tvN1iuT03kHgOFnLPfLJ8V95eijteveqdOSk+srqfePtQvqCExB8eHOYnlilbOcyJyKnYkr1vJvf7YqotAJu1A==",
+      "license": "MIT",
+      "dependencies": {
+        "@remix-run/router": "1.19.2"
+      },
+      "engines": {
+        "node": ">=14.0.0"
+      },
+      "peerDependencies": {
+        "react": ">=16.8"
+      }
+    },
+    "node_modules/react-router-dom": {
+      "version": "6.26.2",
+      "resolved": "https://registry.npmjs.org/react-router-dom/-/react-router-dom-6.26.2.tgz",
+      "integrity": "sha512-z7YkaEW0Dy35T3/QKPYB1LjMK2R1fxnHO8kWpUMTBdfVzZrWOiY9a7CtN8HqdWtDUWd5FY6Dl8HFsqVwH4uOtQ==",
+      "license": "MIT",
+      "dependencies": {
+        "@remix-run/router": "1.19.2",
+        "react-router": "6.26.2"
+      },
+      "engines": {
+        "node": ">=14.0.0"
+      },
+      "peerDependencies": {
+        "react": ">=16.8",
+        "react-dom": ">=16.8"
+      }
+    },
+    "node_modules/redux": {
+      "version": "5.0.1",
+      "resolved": "https://registry.npmjs.org/redux/-/redux-5.0.1.tgz",
+      "integrity": "sha512-M9/ELqF6fy8FwmkpnF0S3YKOqMyoWJ4+CS5Efg2ct3oY9daQvd/Pc71FpGZsVsbl3Cpb+IIcjBDUnnyBdQbq4w==",
+      "license": "MIT"
+    },
+    "node_modules/reflect.getprototypeof": {
+      "version": "1.0.6",
+      "resolved": "https://registry.npmjs.org/reflect.getprototypeof/-/reflect.getprototypeof-1.0.6.tgz",
+      "integrity": "sha512-fmfw4XgoDke3kdI6h4xcUz1dG8uaiv5q9gcEwLS4Pnth2kxT+GZ7YehS1JTMGBQmtV7Y4GFGbs2re2NqhdozUg==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "call-bind": "^1.0.7",
+        "define-properties": "^1.2.1",
+        "es-abstract": "^1.23.1",
+        "es-errors": "^1.3.0",
+        "get-intrinsic": "^1.2.4",
+        "globalthis": "^1.0.3",
+        "which-builtin-type": "^1.1.3"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/regexp.prototype.flags": {
+      "version": "1.5.3",
+      "resolved": "https://registry.npmjs.org/regexp.prototype.flags/-/regexp.prototype.flags-1.5.3.tgz",
+      "integrity": "sha512-vqlC04+RQoFalODCbCumG2xIOvapzVMHwsyIGM/SIE8fRhFFsXeH8/QQ+s0T0kDAhKc4k30s73/0ydkHQz6HlQ==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "call-bind": "^1.0.7",
+        "define-properties": "^1.2.1",
+        "es-errors": "^1.3.0",
+        "set-function-name": "^2.0.2"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/reusify": {
+      "version": "1.0.4",
+      "resolved": "https://registry.npmjs.org/reusify/-/reusify-1.0.4.tgz",
+      "integrity": "sha512-U9nH88a3fc/ekCF1l0/UP1IosiuIjyTh7hBvXVMHYgVcfGvt897Xguj2UOLDeI5BG2m7/uwyaLVT6fbtCwTyzw==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "iojs": ">=1.0.0",
+        "node": ">=0.10.0"
+      }
+    },
+    "node_modules/rimraf": {
+      "version": "3.0.2",
+      "resolved": "https://registry.npmjs.org/rimraf/-/rimraf-3.0.2.tgz",
+      "integrity": "sha512-JZkJMZkAGFFPP2YqXZXPbMlMBgsxzE8ILs4lMIX/2o0L9UBw9O/Y3o6wFw/i9YLapcUJWwqbi3kdxIPdC62TIA==",
+      "deprecated": "Rimraf versions prior to v4 are no longer supported",
+      "dev": true,
+      "license": "ISC",
+      "dependencies": {
+        "glob": "^7.1.3"
+      },
+      "bin": {
+        "rimraf": "bin.js"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/isaacs"
+      }
+    },
+    "node_modules/run-parallel": {
+      "version": "1.2.0",
+      "resolved": "https://registry.npmjs.org/run-parallel/-/run-parallel-1.2.0.tgz",
+      "integrity": "sha512-5l4VyZR86LZ/lDxZTR6jqL8AFE2S0IFLMP26AbjsLVADxHdhB/c0GUsH+y39UfCi3dzz8OlQuPmnaJOMoDHQBA==",
+      "dev": true,
+      "funding": [
+        {
+          "type": "github",
+          "url": "https://github.com/sponsors/feross"
+        },
+        {
+          "type": "patreon",
+          "url": "https://www.patreon.com/feross"
+        },
+        {
+          "type": "consulting",
+          "url": "https://feross.org/support"
+        }
+      ],
+      "license": "MIT",
+      "dependencies": {
+        "queue-microtask": "^1.2.2"
+      }
+    },
+    "node_modules/safe-array-concat": {
+      "version": "1.1.2",
+      "resolved": "https://registry.npmjs.org/safe-array-concat/-/safe-array-concat-1.1.2.tgz",
+      "integrity": "sha512-vj6RsCsWBCf19jIeHEfkRMw8DPiBb+DMXklQ/1SGDHOMlHdPUkZXFQ2YdplS23zESTijAcurb1aSgJA3AgMu1Q==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "call-bind": "^1.0.7",
+        "get-intrinsic": "^1.2.4",
+        "has-symbols": "^1.0.3",
+        "isarray": "^2.0.5"
+      },
+      "engines": {
+        "node": ">=0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/safe-regex-test": {
+      "version": "1.0.3",
+      "resolved": "https://registry.npmjs.org/safe-regex-test/-/safe-regex-test-1.0.3.tgz",
+      "integrity": "sha512-CdASjNJPvRa7roO6Ra/gLYBTzYzzPyyBXxIMdGW3USQLyjWEls2RgW5UBTXaQVp+OrpeCK3bLem8smtmheoRuw==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "call-bind": "^1.0.6",
+        "es-errors": "^1.3.0",
+        "is-regex": "^1.1.4"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/sass": {
+      "version": "1.79.4",
+      "resolved": "https://registry.npmjs.org/sass/-/sass-1.79.4.tgz",
+      "integrity": "sha512-K0QDSNPXgyqO4GZq2HO5Q70TLxTH6cIT59RdoCHMivrC8rqzaTw5ab9prjz9KUN1El4FLXrBXJhik61JR4HcGg==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "chokidar": "^4.0.0",
+        "immutable": "^4.0.0",
+        "source-map-js": ">=0.6.2 <2.0.0"
+      },
+      "bin": {
+        "sass": "sass.js"
+      },
+      "engines": {
+        "node": ">=14.0.0"
+      }
+    },
+    "node_modules/sass/node_modules/chokidar": {
+      "version": "4.0.1",
+      "resolved": "https://registry.npmjs.org/chokidar/-/chokidar-4.0.1.tgz",
+      "integrity": "sha512-n8enUVCED/KVRQlab1hr3MVpcVMvxtZjmEa956u+4YijlmQED223XMSYj2tLuKvr4jcCTzNNMpQDUer72MMmzA==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "readdirp": "^4.0.1"
+      },
+      "engines": {
+        "node": ">= 14.16.0"
+      },
+      "funding": {
+        "url": "https://paulmillr.com/funding/"
+      }
+    },
+    "node_modules/sass/node_modules/readdirp": {
+      "version": "4.0.2",
+      "resolved": "https://registry.npmjs.org/readdirp/-/readdirp-4.0.2.tgz",
+      "integrity": "sha512-yDMz9g+VaZkqBYS/ozoBJwaBhTbZo3UNYQHNRw1D3UFQB8oHB4uS/tAODO+ZLjGWmUbKnIlOWO+aaIiAxrUWHA==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": ">= 14.16.0"
+      },
+      "funding": {
+        "type": "individual",
+        "url": "https://paulmillr.com/funding/"
+      }
+    },
+    "node_modules/scheduler": {
+      "version": "0.23.2",
+      "resolved": "https://registry.npmjs.org/scheduler/-/scheduler-0.23.2.tgz",
+      "integrity": "sha512-UOShsPwz7NrMUqhR6t0hWjFduvOzbtv7toDH1/hIrfRNIDBnnBWd0CwJTGvTpngVlmwGCdP9/Zl/tVrDqcuYzQ==",
+      "license": "MIT",
+      "dependencies": {
+        "loose-envify": "^1.1.0"
+      }
+    },
+    "node_modules/set-function-length": {
+      "version": "1.2.2",
+      "resolved": "https://registry.npmjs.org/set-function-length/-/set-function-length-1.2.2.tgz",
+      "integrity": "sha512-pgRc4hJ4/sNjWCSS9AmnS40x3bNMDTknHgL5UaMBTMyJnU90EgWh1Rz+MC9eFu4BuN/UwZjKQuY/1v3rM7HMfg==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "define-data-property": "^1.1.4",
+        "es-errors": "^1.3.0",
+        "function-bind": "^1.1.2",
+        "get-intrinsic": "^1.2.4",
+        "gopd": "^1.0.1",
+        "has-property-descriptors": "^1.0.2"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      }
+    },
+    "node_modules/set-function-name": {
+      "version": "2.0.2",
+      "resolved": "https://registry.npmjs.org/set-function-name/-/set-function-name-2.0.2.tgz",
+      "integrity": "sha512-7PGFlmtwsEADb0WYyvCMa1t+yke6daIG4Wirafur5kcf+MhUnPms1UeR0CKQdTZD81yESwMHbtn+TR+dMviakQ==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "define-data-property": "^1.1.4",
+        "es-errors": "^1.3.0",
+        "functions-have-names": "^1.2.3",
+        "has-property-descriptors": "^1.0.2"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      }
+    },
+    "node_modules/shebang-command": {
+      "version": "2.0.0",
+      "resolved": "https://registry.npmjs.org/shebang-command/-/shebang-command-2.0.0.tgz",
+      "integrity": "sha512-kHxr2zZpYtdmrN1qDjrrX/Z1rR1kG8Dx+gkpK1G4eXmvXswmcE1hTWBWYUzlraYw1/yZp6YuDY77YtvbN0dmDA==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "shebang-regex": "^3.0.0"
+      },
+      "engines": {
+        "node": ">=8"
+      }
+    },
+    "node_modules/shebang-regex": {
+      "version": "3.0.0",
+      "resolved": "https://registry.npmjs.org/shebang-regex/-/shebang-regex-3.0.0.tgz",
+      "integrity": "sha512-7++dFhtcx3353uBaq8DDR4NuxBetBzC7ZQOhmTQInHEd6bSrXdiEyzCvG07Z44UYdLShWUyXt5M/yhz8ekcb1A==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": ">=8"
+      }
+    },
+    "node_modules/side-channel": {
+      "version": "1.0.6",
+      "resolved": "https://registry.npmjs.org/side-channel/-/side-channel-1.0.6.tgz",
+      "integrity": "sha512-fDW/EZ6Q9RiO8eFG8Hj+7u/oW+XrPTIChwCOM2+th2A6OblDtYYIpve9m+KvI9Z4C9qSEXlaGR6bTEYHReuglA==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "call-bind": "^1.0.7",
+        "es-errors": "^1.3.0",
+        "get-intrinsic": "^1.2.4",
+        "object-inspect": "^1.13.1"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/simplebar-core": {
+      "version": "1.2.6",
+      "resolved": "https://registry.npmjs.org/simplebar-core/-/simplebar-core-1.2.6.tgz",
+      "integrity": "sha512-H5NYU+O+uvqOH5VXw3+lgoc1vTI6jL8LOZJsw4xgRpV7uIPjRpmLPdz0TrouxwKHBhpVLzVIlyKhaRLelIThMw==",
+      "license": "MIT",
+      "dependencies": {
+        "@types/lodash-es": "^4.17.6",
+        "lodash": "^4.17.21",
+        "lodash-es": "^4.17.21"
+      }
+    },
+    "node_modules/simplebar-react": {
+      "version": "3.2.6",
+      "resolved": "https://registry.npmjs.org/simplebar-react/-/simplebar-react-3.2.6.tgz",
+      "integrity": "sha512-8jDiBuVCG86JmOrsmkA+4q77iFAEbhU9EX62PohLisg3dnxdLXFFhkxnx2Es3Cxt8IlZFlJsF9GaobFL3ukwiA==",
+      "license": "MIT",
+      "dependencies": {
+        "simplebar-core": "^1.2.6"
+      },
+      "peerDependencies": {
+        "react": ">=16.8.0"
+      }
+    },
+    "node_modules/source-map-js": {
+      "version": "1.2.1",
+      "resolved": "https://registry.npmjs.org/source-map-js/-/source-map-js-1.2.1.tgz",
+      "integrity": "sha512-UXWMKhLOwVKb728IUtQPXxfYU+usdybtUrK/8uGE8CQMvrhOpwvzDBwj0QhSL7MQc7vIsISBG8VQ8+IDQxpfQA==",
+      "dev": true,
+      "license": "BSD-3-Clause",
+      "engines": {
+        "node": ">=0.10.0"
+      }
+    },
+    "node_modules/source-map-support": {
+      "version": "0.5.21",
+      "resolved": "https://registry.npmjs.org/source-map-support/-/source-map-support-0.5.21.tgz",
+      "integrity": "sha512-uBHU3L3czsIyYXKX88fdrGovxdSCoTGDRZ6SYXtSRxLZUzHg5P/66Ht6uoUlHu9EZod+inXhKo3qQgwXUT/y1w==",
+      "dev": true,
+      "license": "MIT",
+      "optional": true,
+      "peer": true,
+      "dependencies": {
+        "buffer-from": "^1.0.0",
+        "source-map": "^0.6.0"
+      }
+    },
+    "node_modules/source-map-support/node_modules/source-map": {
+      "version": "0.6.1",
+      "resolved": "https://registry.npmjs.org/source-map/-/source-map-0.6.1.tgz",
+      "integrity": "sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g==",
+      "dev": true,
+      "license": "BSD-3-Clause",
+      "optional": true,
+      "peer": true,
+      "engines": {
+        "node": ">=0.10.0"
+      }
+    },
+    "node_modules/string.prototype.matchall": {
+      "version": "4.0.11",
+      "resolved": "https://registry.npmjs.org/string.prototype.matchall/-/string.prototype.matchall-4.0.11.tgz",
+      "integrity": "sha512-NUdh0aDavY2og7IbBPenWqR9exH+E26Sv8e0/eTe1tltDGZL+GtBkDAnnyBtmekfK6/Dq3MkcGtzXFEd1LQrtg==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "call-bind": "^1.0.7",
+        "define-properties": "^1.2.1",
+        "es-abstract": "^1.23.2",
+        "es-errors": "^1.3.0",
+        "es-object-atoms": "^1.0.0",
+        "get-intrinsic": "^1.2.4",
+        "gopd": "^1.0.1",
+        "has-symbols": "^1.0.3",
+        "internal-slot": "^1.0.7",
+        "regexp.prototype.flags": "^1.5.2",
+        "set-function-name": "^2.0.2",
+        "side-channel": "^1.0.6"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/string.prototype.repeat": {
+      "version": "1.0.0",
+      "resolved": "https://registry.npmjs.org/string.prototype.repeat/-/string.prototype.repeat-1.0.0.tgz",
+      "integrity": "sha512-0u/TldDbKD8bFCQ/4f5+mNRrXwZ8hg2w7ZR8wa16e8z9XpePWl3eGEcUD0OXpEH/VJH/2G3gjUtR3ZOiBe2S/w==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "define-properties": "^1.1.3",
+        "es-abstract": "^1.17.5"
+      }
+    },
+    "node_modules/string.prototype.trim": {
+      "version": "1.2.9",
+      "resolved": "https://registry.npmjs.org/string.prototype.trim/-/string.prototype.trim-1.2.9.tgz",
+      "integrity": "sha512-klHuCNxiMZ8MlsOihJhJEBJAiMVqU3Z2nEXWfWnIqjN0gEFS9J9+IxKozWWtQGcgoa1WUZzLjKPTr4ZHNFTFxw==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "call-bind": "^1.0.7",
+        "define-properties": "^1.2.1",
+        "es-abstract": "^1.23.0",
+        "es-object-atoms": "^1.0.0"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/string.prototype.trimend": {
+      "version": "1.0.8",
+      "resolved": "https://registry.npmjs.org/string.prototype.trimend/-/string.prototype.trimend-1.0.8.tgz",
+      "integrity": "sha512-p73uL5VCHCO2BZZ6krwwQE3kCzM7NKmis8S//xEC6fQonchbum4eP6kR4DLEjQFO3Wnj3Fuo8NM0kOSjVdHjZQ==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "call-bind": "^1.0.7",
+        "define-properties": "^1.2.1",
+        "es-object-atoms": "^1.0.0"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/string.prototype.trimstart": {
+      "version": "1.0.8",
+      "resolved": "https://registry.npmjs.org/string.prototype.trimstart/-/string.prototype.trimstart-1.0.8.tgz",
+      "integrity": "sha512-UXSH262CSZY1tfu3G3Secr6uGLCFVPMhIqHjlgCUtCCcgihYc/xKs9djMTMUOb2j1mVSeU8EU6NWc/iQKU6Gfg==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "call-bind": "^1.0.7",
+        "define-properties": "^1.2.1",
+        "es-object-atoms": "^1.0.0"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/strip-ansi": {
+      "version": "6.0.1",
+      "resolved": "https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.1.tgz",
+      "integrity": "sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "ansi-regex": "^5.0.1"
+      },
+      "engines": {
+        "node": ">=8"
+      }
+    },
+    "node_modules/strip-json-comments": {
+      "version": "3.1.1",
+      "resolved": "https://registry.npmjs.org/strip-json-comments/-/strip-json-comments-3.1.1.tgz",
+      "integrity": "sha512-6fPc+R4ihwqP6N/aIv2f1gMH8lOVtWQHoqC4yK6oSDVVocumAsfCqjkXnqiYMhmMwS/mEHLp7Vehlt3ql6lEig==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": ">=8"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/sindresorhus"
+      }
+    },
+    "node_modules/supports-color": {
+      "version": "5.5.0",
+      "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-5.5.0.tgz",
+      "integrity": "sha512-QjVjwdXIt408MIiAqCX4oUKsgU2EqAGzs2Ppkm4aQYbjm+ZEWEcW4SfFNTr4uMNZma0ey4f5lgLrkB0aX0QMow==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "has-flag": "^3.0.0"
+      },
+      "engines": {
+        "node": ">=4"
+      }
+    },
+    "node_modules/supports-preserve-symlinks-flag": {
+      "version": "1.0.0",
+      "resolved": "https://registry.npmjs.org/supports-preserve-symlinks-flag/-/supports-preserve-symlinks-flag-1.0.0.tgz",
+      "integrity": "sha512-ot0WnXS9fgdkgIcePe6RHNk1WA8+muPa6cSjeR3V8K27q9BB1rTE3R1p7Hv0z1ZyAc8s6Vvv8DIyWf681MAt0w==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/synckit": {
+      "version": "0.9.2",
+      "resolved": "https://registry.npmjs.org/synckit/-/synckit-0.9.2.tgz",
+      "integrity": "sha512-vrozgXDQwYO72vHjUb/HnFbQx1exDjoKzqx23aXEg2a9VIg2TSFZ8FmeZpTjUCFMYw7mpX4BE2SFu8wI7asYsw==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "@pkgr/core": "^0.1.0",
+        "tslib": "^2.6.2"
+      },
+      "engines": {
+        "node": "^14.18.0 || >=16.0.0"
+      },
+      "funding": {
+        "url": "https://opencollective.com/unts"
+      }
+    },
+    "node_modules/terser": {
+      "version": "5.34.1",
+      "resolved": "https://registry.npmjs.org/terser/-/terser-5.34.1.tgz",
+      "integrity": "sha512-FsJZ7iZLd/BXkz+4xrRTGJ26o/6VTjQytUk8b8OxkwcD2I+79VPJlz7qss1+zE7h8GNIScFqXcDyJ/KqBYZFVA==",
+      "dev": true,
+      "license": "BSD-2-Clause",
+      "optional": true,
+      "peer": true,
+      "dependencies": {
+        "@jridgewell/source-map": "^0.3.3",
+        "acorn": "^8.8.2",
+        "commander": "^2.20.0",
+        "source-map-support": "~0.5.20"
+      },
+      "bin": {
+        "terser": "bin/terser"
+      },
+      "engines": {
+        "node": ">=10"
+      }
+    },
+    "node_modules/terser/node_modules/commander": {
+      "version": "2.20.3",
+      "resolved": "https://registry.npmjs.org/commander/-/commander-2.20.3.tgz",
+      "integrity": "sha512-GpVkmM8vF2vQUkj2LvZmD35JxeJOLCwJ9cUkugyk2nuhbv3+mJvpLYYt+0+USMxE+oj+ey/lJEnhZw75x/OMcQ==",
+      "dev": true,
+      "license": "MIT",
+      "optional": true,
+      "peer": true
+    },
+    "node_modules/text-table": {
+      "version": "0.2.0",
+      "resolved": "https://registry.npmjs.org/text-table/-/text-table-0.2.0.tgz",
+      "integrity": "sha512-N+8UisAXDGk8PFXP4HAzVR9nbfmVJ3zYLAWiTIoqC5v5isinhr+r5uaO8+7r3BMfuNIufIsA7RdpVgacC2cSpw==",
+      "dev": true,
+      "license": "MIT"
+    },
+    "node_modules/to-fast-properties": {
+      "version": "2.0.0",
+      "resolved": "https://registry.npmjs.org/to-fast-properties/-/to-fast-properties-2.0.0.tgz",
+      "integrity": "sha512-/OaKK0xYrs3DmxRYqL/yDc+FxFUVYhDlXMhRmv3z915w2HF1tnN1omB354j8VUGO/hbRzyD6Y3sA7v7GS/ceog==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": ">=4"
+      }
+    },
+    "node_modules/tslib": {
+      "version": "2.7.0",
+      "resolved": "https://registry.npmjs.org/tslib/-/tslib-2.7.0.tgz",
+      "integrity": "sha512-gLXCKdN1/j47AiHiOkJN69hJmcbGTHI0ImLmbYLHykhgeN0jVGola9yVjFgzCUklsZQMW55o+dW7IXv3RCXDzA==",
+      "dev": true,
+      "license": "0BSD"
+    },
+    "node_modules/type-check": {
+      "version": "0.4.0",
+      "resolved": "https://registry.npmjs.org/type-check/-/type-check-0.4.0.tgz",
+      "integrity": "sha512-XleUoc9uwGXqjWwXaUTZAmzMcFZ5858QA2vvx1Ur5xIcixXIP+8LnFDgRplU30us6teqdlskFfu+ae4K79Ooew==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "prelude-ls": "^1.2.1"
+      },
+      "engines": {
+        "node": ">= 0.8.0"
+      }
+    },
+    "node_modules/typed-array-buffer": {
+      "version": "1.0.2",
+      "resolved": "https://registry.npmjs.org/typed-array-buffer/-/typed-array-buffer-1.0.2.tgz",
+      "integrity": "sha512-gEymJYKZtKXzzBzM4jqa9w6Q1Jjm7x2d+sh19AdsD4wqnMPDYyvwpsIc2Q/835kHuo3BEQ7CjelGhfTsoBb2MQ==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "call-bind": "^1.0.7",
+        "es-errors": "^1.3.0",
+        "is-typed-array": "^1.1.13"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      }
+    },
+    "node_modules/typed-array-byte-length": {
+      "version": "1.0.1",
+      "resolved": "https://registry.npmjs.org/typed-array-byte-length/-/typed-array-byte-length-1.0.1.tgz",
+      "integrity": "sha512-3iMJ9q0ao7WE9tWcaYKIptkNBuOIcZCCT0d4MRvuuH88fEoEH62IuQe0OtraD3ebQEoTRk8XCBoknUNc1Y67pw==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "call-bind": "^1.0.7",
+        "for-each": "^0.3.3",
+        "gopd": "^1.0.1",
+        "has-proto": "^1.0.3",
+        "is-typed-array": "^1.1.13"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/typed-array-byte-offset": {
+      "version": "1.0.2",
+      "resolved": "https://registry.npmjs.org/typed-array-byte-offset/-/typed-array-byte-offset-1.0.2.tgz",
+      "integrity": "sha512-Ous0vodHa56FviZucS2E63zkgtgrACj7omjwd/8lTEMEPFFyjfixMZ1ZXenpgCFBBt4EC1J2XsyVS2gkG0eTFA==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "available-typed-arrays": "^1.0.7",
+        "call-bind": "^1.0.7",
+        "for-each": "^0.3.3",
+        "gopd": "^1.0.1",
+        "has-proto": "^1.0.3",
+        "is-typed-array": "^1.1.13"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/typed-array-length": {
+      "version": "1.0.6",
+      "resolved": "https://registry.npmjs.org/typed-array-length/-/typed-array-length-1.0.6.tgz",
+      "integrity": "sha512-/OxDN6OtAk5KBpGb28T+HZc2M+ADtvRxXrKKbUwtsLgdoxgX13hyy7ek6bFRl5+aBs2yZzB0c4CnQfAtVypW/g==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "call-bind": "^1.0.7",
+        "for-each": "^0.3.3",
+        "gopd": "^1.0.1",
+        "has-proto": "^1.0.3",
+        "is-typed-array": "^1.1.13",
+        "possible-typed-array-names": "^1.0.0"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/unbox-primitive": {
+      "version": "1.0.2",
+      "resolved": "https://registry.npmjs.org/unbox-primitive/-/unbox-primitive-1.0.2.tgz",
+      "integrity": "sha512-61pPlCD9h51VoreyJ0BReideM3MDKMKnh6+V9L08331ipq6Q8OFXZYiqP6n/tbHx4s5I9uRhcye6BrbkizkBDw==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "call-bind": "^1.0.2",
+        "has-bigints": "^1.0.2",
+        "has-symbols": "^1.0.3",
+        "which-boxed-primitive": "^1.0.2"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/undici-types": {
+      "version": "6.19.8",
+      "resolved": "https://registry.npmjs.org/undici-types/-/undici-types-6.19.8.tgz",
+      "integrity": "sha512-ve2KP6f/JnbPBFyobGHuerC9g1FYGn/F8n1LWTwNxCEzd6IfqTwUQcNXgEtmmQ6DlRrC1hrSrBnCZPokRrDHjw==",
+      "dev": true,
+      "license": "MIT",
+      "optional": true,
+      "peer": true
+    },
+    "node_modules/update-browserslist-db": {
+      "version": "1.1.1",
+      "resolved": "https://registry.npmjs.org/update-browserslist-db/-/update-browserslist-db-1.1.1.tgz",
+      "integrity": "sha512-R8UzCaa9Az+38REPiJ1tXlImTJXlVfgHZsglwBD/k6nj76ctsH1E3q4doGrukiLQd3sGQYu56r5+lo5r94l29A==",
+      "dev": true,
+      "funding": [
+        {
+          "type": "opencollective",
+          "url": "https://opencollective.com/browserslist"
+        },
+        {
+          "type": "tidelift",
+          "url": "https://tidelift.com/funding/github/npm/browserslist"
+        },
+        {
+          "type": "github",
+          "url": "https://github.com/sponsors/ai"
+        }
+      ],
+      "license": "MIT",
+      "dependencies": {
+        "escalade": "^3.2.0",
+        "picocolors": "^1.1.0"
+      },
+      "bin": {
+        "update-browserslist-db": "cli.js"
+      },
+      "peerDependencies": {
+        "browserslist": ">= 4.21.0"
+      }
+    },
+    "node_modules/uri-js": {
+      "version": "4.4.1",
+      "resolved": "https://registry.npmjs.org/uri-js/-/uri-js-4.4.1.tgz",
+      "integrity": "sha512-7rKUyy33Q1yc98pQ1DAmLtwX109F7TIfWlW1Ydo8Wl1ii1SeHieeh0HHfPeL2fMXK6z0s8ecKs9frCuLJvndBg==",
+      "dev": true,
+      "license": "BSD-2-Clause",
+      "dependencies": {
+        "punycode": "^2.1.0"
+      }
+    },
+    "node_modules/use-sync-external-store": {
+      "version": "1.2.2",
+      "resolved": "https://registry.npmjs.org/use-sync-external-store/-/use-sync-external-store-1.2.2.tgz",
+      "integrity": "sha512-PElTlVMwpblvbNqQ82d2n6RjStvdSoNe9FG28kNfz3WiXilJm4DdNkEzRhCZuIDwY8U08WVihhGR5iRqAwfDiw==",
+      "license": "MIT",
+      "peerDependencies": {
+        "react": "^16.8.0 || ^17.0.0 || ^18.0.0"
+      }
+    },
+    "node_modules/vite": {
+      "version": "5.4.8",
+      "resolved": "https://registry.npmjs.org/vite/-/vite-5.4.8.tgz",
+      "integrity": "sha512-FqrItQ4DT1NC4zCUqMB4c4AZORMKIa0m8/URVCZ77OZ/QSNeJ54bU1vrFADbDsuwfIPcgknRkmqakQcgnL4GiQ==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "esbuild": "^0.21.3",
+        "postcss": "^8.4.43",
+        "rollup": "^4.20.0"
+      },
+      "bin": {
+        "vite": "bin/vite.js"
+      },
+      "engines": {
+        "node": "^18.0.0 || >=20.0.0"
+      },
+      "funding": {
+        "url": "https://github.com/vitejs/vite?sponsor=1"
+      },
+      "optionalDependencies": {
+        "fsevents": "~2.3.3"
+      },
+      "peerDependencies": {
+        "@types/node": "^18.0.0 || >=20.0.0",
+        "less": "*",
+        "lightningcss": "^1.21.0",
+        "sass": "*",
+        "sass-embedded": "*",
+        "stylus": "*",
+        "sugarss": "*",
+        "terser": "^5.4.0"
+      },
+      "peerDependenciesMeta": {
+        "@types/node": {
+          "optional": true
+        },
+        "less": {
+          "optional": true
+        },
+        "lightningcss": {
+          "optional": true
+        },
+        "sass": {
+          "optional": true
+        },
+        "sass-embedded": {
+          "optional": true
+        },
+        "stylus": {
+          "optional": true
+        },
+        "sugarss": {
+          "optional": true
+        },
+        "terser": {
+          "optional": true
+        }
+      }
+    },
+    "node_modules/vite/node_modules/rollup": {
+      "version": "4.24.0",
+      "resolved": "https://registry.npmjs.org/rollup/-/rollup-4.24.0.tgz",
+      "integrity": "sha512-DOmrlGSXNk1DM0ljiQA+i+o0rSLhtii1je5wgk60j49d1jHT5YYttBv1iWOnYSTG+fZZESUOSNiAl89SIet+Cg==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "@types/estree": "1.0.6"
+      },
+      "bin": {
+        "rollup": "dist/bin/rollup"
+      },
+      "engines": {
+        "node": ">=18.0.0",
+        "npm": ">=8.0.0"
+      },
+      "optionalDependencies": {
+        "@rollup/rollup-android-arm-eabi": "4.24.0",
+        "@rollup/rollup-android-arm64": "4.24.0",
+        "@rollup/rollup-darwin-arm64": "4.24.0",
+        "@rollup/rollup-darwin-x64": "4.24.0",
+        "@rollup/rollup-linux-arm-gnueabihf": "4.24.0",
+        "@rollup/rollup-linux-arm-musleabihf": "4.24.0",
+        "@rollup/rollup-linux-arm64-gnu": "4.24.0",
+        "@rollup/rollup-linux-arm64-musl": "4.24.0",
+        "@rollup/rollup-linux-powerpc64le-gnu": "4.24.0",
+        "@rollup/rollup-linux-riscv64-gnu": "4.24.0",
+        "@rollup/rollup-linux-s390x-gnu": "4.24.0",
+        "@rollup/rollup-linux-x64-gnu": "4.24.0",
+        "@rollup/rollup-linux-x64-musl": "4.24.0",
+        "@rollup/rollup-win32-arm64-msvc": "4.24.0",
+        "@rollup/rollup-win32-ia32-msvc": "4.24.0",
+        "@rollup/rollup-win32-x64-msvc": "4.24.0",
+        "fsevents": "~2.3.2"
+      }
+    },
+    "node_modules/which": {
+      "version": "2.0.2",
+      "resolved": "https://registry.npmjs.org/which/-/which-2.0.2.tgz",
+      "integrity": "sha512-BLI3Tl1TW3Pvl70l3yq3Y64i+awpwXqsGBYWkkqMtnbXgrMD+yj7rhW0kuEDxzJaYXGjEW5ogapKNMEKNMjibA==",
+      "dev": true,
+      "license": "ISC",
+      "dependencies": {
+        "isexe": "^2.0.0"
+      },
+      "bin": {
+        "node-which": "bin/node-which"
+      },
+      "engines": {
+        "node": ">= 8"
+      }
+    },
+    "node_modules/which-boxed-primitive": {
+      "version": "1.0.2",
+      "resolved": "https://registry.npmjs.org/which-boxed-primitive/-/which-boxed-primitive-1.0.2.tgz",
+      "integrity": "sha512-bwZdv0AKLpplFY2KZRX6TvyuN7ojjr7lwkg6ml0roIy9YeuSr7JS372qlNW18UQYzgYK9ziGcerWqZOmEn9VNg==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "is-bigint": "^1.0.1",
+        "is-boolean-object": "^1.1.0",
+        "is-number-object": "^1.0.4",
+        "is-string": "^1.0.5",
+        "is-symbol": "^1.0.3"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/which-builtin-type": {
+      "version": "1.1.4",
+      "resolved": "https://registry.npmjs.org/which-builtin-type/-/which-builtin-type-1.1.4.tgz",
+      "integrity": "sha512-bppkmBSsHFmIMSl8BO9TbsyzsvGjVoppt8xUiGzwiu/bhDCGxnpOKCxgqj6GuyHE0mINMDecBFPlOm2hzY084w==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "function.prototype.name": "^1.1.6",
+        "has-tostringtag": "^1.0.2",
+        "is-async-function": "^2.0.0",
+        "is-date-object": "^1.0.5",
+        "is-finalizationregistry": "^1.0.2",
+        "is-generator-function": "^1.0.10",
+        "is-regex": "^1.1.4",
+        "is-weakref": "^1.0.2",
+        "isarray": "^2.0.5",
+        "which-boxed-primitive": "^1.0.2",
+        "which-collection": "^1.0.2",
+        "which-typed-array": "^1.1.15"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/which-collection": {
+      "version": "1.0.2",
+      "resolved": "https://registry.npmjs.org/which-collection/-/which-collection-1.0.2.tgz",
+      "integrity": "sha512-K4jVyjnBdgvc86Y6BkaLZEN933SwYOuBFkdmBu9ZfkcAbdVbpITnDmjvZ/aQjRXQrv5EPkTnD1s39GiiqbngCw==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "is-map": "^2.0.3",
+        "is-set": "^2.0.3",
+        "is-weakmap": "^2.0.2",
+        "is-weakset": "^2.0.3"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/which-typed-array": {
+      "version": "1.1.15",
+      "resolved": "https://registry.npmjs.org/which-typed-array/-/which-typed-array-1.1.15.tgz",
+      "integrity": "sha512-oV0jmFtUky6CXfkqehVvBP/LSWJ2sy4vWMioiENyJLePrBO/yKyV9OyJySfAKosh+RYkIl5zJCNZ8/4JncrpdA==",
+      "dev": true,
+      "license": "MIT",
+      "dependencies": {
+        "available-typed-arrays": "^1.0.7",
+        "call-bind": "^1.0.7",
+        "for-each": "^0.3.3",
+        "gopd": "^1.0.1",
+        "has-tostringtag": "^1.0.2"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/word-wrap": {
+      "version": "1.2.5",
+      "resolved": "https://registry.npmjs.org/word-wrap/-/word-wrap-1.2.5.tgz",
+      "integrity": "sha512-BN22B5eaMMI9UMtjrGd5g5eCYPpCPDUy0FJXbYsaT5zYxjFOckS53SQDE3pWkVoWpHXVb3BrYcEN4Twa55B5cA==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": ">=0.10.0"
+      }
+    },
+    "node_modules/wrappy": {
+      "version": "1.0.2",
+      "resolved": "https://registry.npmjs.org/wrappy/-/wrappy-1.0.2.tgz",
+      "integrity": "sha512-l4Sp/DRseor9wL6EvV2+TuQn63dMkPjZ/sp9XkghTEbV9KlPS1xUsZ3u7/IQO4wxtcFB4bgpQPRcR3QCvezPcQ==",
+      "dev": true,
+      "license": "ISC"
+    },
+    "node_modules/yallist": {
+      "version": "3.1.1",
+      "resolved": "https://registry.npmjs.org/yallist/-/yallist-3.1.1.tgz",
+      "integrity": "sha512-a4UGQaWPH59mOXUYnAG2ewncQS4i4F43Tv3JoAM+s2VDAmS9NsK8GpDMLrCHPksFT7h3K6TOoUNn2pb7RoXx4g==",
+      "dev": true,
+      "license": "ISC"
+    },
+    "node_modules/yocto-queue": {
+      "version": "0.1.0",
+      "resolved": "https://registry.npmjs.org/yocto-queue/-/yocto-queue-0.1.0.tgz",
+      "integrity": "sha512-rVksvsnNCdJ/ohGc6xgPwyN8eheCxsiLM8mxuE/t/mOVqJewPuO1miLpTHQiRgTKCLexL4MeAFVagts7HmNZ2Q==",
+      "dev": true,
+      "license": "MIT",
+      "engines": {
+        "node": ">=10"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/sindresorhus"
+      }
+    }
+  }
+}
Index: PlanningMamagement/frontend/.gitignore
===================================================================
diff --git a/PlanningMamagement/frontend/.gitignore b/PlanningMamagement/frontend/.gitignore
new file mode 100644
--- /dev/null	(date 1728391641099)
+++ b/PlanningMamagement/frontend/.gitignore	(date 1728391641099)
@@ -0,0 +1,25 @@
+# See https://help.github.com/ignore-files/ for more about ignoring files.
+
+# dependencies
+/node_modules
+package-lock.json
+yarn.lock
+
+# testing
+/coverage
+
+# production
+/build
+
+# misc
+.eslintcache
+.DS_Store
+.idea
+.env.local
+.env.development.local
+.env.test.local
+.env.production.local
+
+npm-debug.log*
+yarn-debug.log*
+yarn-error.log*
Index: PlanningMamagement/frontend/README.md
===================================================================
diff --git a/PlanningMamagement/frontend/README.md b/PlanningMamagement/frontend/README.md
new file mode 100644
--- /dev/null	(date 1728391641142)
+++ b/PlanningMamagement/frontend/README.md	(date 1728391641142)
@@ -0,0 +1,185 @@
+# CoreUI Free React Admin Template [![Tweet](https://img.shields.io/twitter/url/http/shields.io.svg?style=social&logo=twitter)](https://twitter.com/intent/tweet?text=CoreUI%20-%20Free%React%204%20Admin%20Template%20&url=https://coreui.io&hashtags=bootstrap,admin,template,dashboard,panel,free,angular,react,vue)
+
+[![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg?style=flat-square)](https://opensource.org/licenses/MIT)
+[![@coreui coreui](https://img.shields.io/badge/@coreui%20-coreui-lightgrey.svg?style=flat-square)](https://github.com/coreui/coreui)
+[![npm package][npm-coreui-badge]][npm-coreui]
+[![NPM downloads][npm-coreui-download]][npm-coreui]
+[![@coreui react](https://img.shields.io/badge/@coreui%20-react-lightgrey.svg?style=flat-square)](https://github.com/coreui/react)
+[![npm package][npm-coreui-react-badge]][npm-coreui-react]
+[![NPM downloads][npm-coreui-react-download]][npm-coreui-react]  
+
+[npm-coreui]: https://www.npmjs.com/package/@coreui/coreui
+[npm-coreui-badge]: https://img.shields.io/npm/v/@coreui/coreui.png?style=flat-square
+[npm-coreui-download]: https://img.shields.io/npm/dm/@coreui/coreui.svg?style=flat-square
+[npm-coreui-react]: https://www.npmjs.com/package/@coreui/react
+[npm-coreui-react-badge]: https://img.shields.io/npm/v/@coreui/react.png?style=flat-square
+[npm-coreui-react-download]: https://img.shields.io/npm/dm/@coreui/react.svg?style=flat-square
+[npm]: https://www.npmjs.com/package/@coreui/react
+
+[![Bootstrap Admin Template](https://assets.coreui.io/products/coreui-free-bootstrap-admin-template-light-dark.webp)](https://coreui.io/product/free-react-admin-template/)
+
+CoreUI is meant to be the UX game changer. Pure & transparent code is devoid of redundant components, so the app is light enough to offer ultimate user experience. This means mobile devices also, where the navigation is just as easy and intuitive as on a desktop or laptop. The CoreUI Layout API lets you customize your project for almost any device – be it Mobile, Web or WebApp – CoreUI covers them all!
+
+## Table of Contents
+
+* [Versions](#versions)
+* [CoreUI PRO](#coreui-pro)
+* [CoreUI PRO React Admin Templates](#coreui-pro-react-admin-templates)
+* [Quick Start](#quick-start)
+* [Installation](#installation)
+* [Basic usage](#basic-usage)
+* [What's included](#whats-included)
+* [Documentation](#documentation)
+* [Versioning](#versioning)
+* [Creators](#creators)
+* [Community](#community)
+* [Support CoreUI Development](#support-coreui-development)
+* [Copyright and License](#copyright-and-license)
+
+## Versions
+
+* [CoreUI Free Bootstrap Admin Template](https://github.com/coreui/coreui-free-bootstrap-admin-template)
+* [CoreUI Free Angular Admin Template](https://github.com/coreui/coreui-free-angular-admin-template)
+* [CoreUI Free React.js Admin Template (Vite)](https://github.com/coreui/coreui-free-react-admin-template)
+* [CoreUI Free React.js Admin Template (Create React App)](https://github.com/coreui/coreui-free-react-admin-template-cra)
+* [CoreUI Free Vue.js Admin Template](https://github.com/coreui/coreui-free-vue-admin-template)
+
+## CoreUI PRO
+
+* 💪  [CoreUI PRO Angular Admin Template](https://coreui.io/product/angular-dashboard-template/)
+* 💪  [CoreUI PRO Bootstrap Admin Template](https://coreui.io/product/bootstrap-dashboard-template/)
+* 💪  [CoreUI PRO Next.js Admin Template](https://coreui.io/product/next-js-dashboard-template/)
+* 💪  [CoreUI PRO React Admin Template](https://coreui.io/product/react-dashboard-template/)
+* 💪  [CoreUI PRO Vue Admin Template](https://coreui.io/product/vue-dashboard-template/)
+
+## CoreUI PRO React Admin Templates
+
+| Default Theme | Light Theme |
+| --- | --- |
+| [![CoreUI PRO React Admin Template](https://coreui.io/images/templates/coreui_pro_default_light_dark.webp)](https://coreui.io/product/react-dashboard-template/?theme=default) | [![CoreUI PRO React Admin Template](https://coreui.io/images/templates/coreui_pro_light_light_dark.webp)](https://coreui.io/product/react-dashboard-template/?theme=light)|
+
+| Modern Theme | Bright Theme |
+| --- | --- |
+| [![CoreUI PRO React Admin Template](https://coreui.io/images/templates/coreui_pro_default_v3_light_dark.webp)](https://coreui.io/product/react-dashboard-template/?theme=modern) | [![CoreUI PRO React Admin Template](https://coreui.io/images/templates/coreui_pro_light_v3_light_dark.webp)](https://coreui.io/product/react-dashboard-template/?theme=bright)|
+
+## Quick Start
+
+- [Download the latest release](https://github.com/coreui/coreui-free-react-admin-template/archive/refs/heads/main.zip)
+- Clone the repo: `git clone https://github.com/coreui/coreui-free-react-admin-template.git`
+
+### Installation
+
+``` bash
+$ npm install
+```
+
+or
+
+``` bash
+$ yarn install
+```
+
+### Basic usage
+
+``` bash
+# dev server with hot reload at http://localhost:3000
+$ npm start 
+```
+
+or 
+
+``` bash
+# dev server with hot reload at http://localhost:3000
+$ yarn start
+```
+
+Navigate to [http://localhost:3000](http://localhost:3000). The app will automatically reload if you change any of the source files.
+
+#### Build
+
+Run `build` to build the project. The build artifacts will be stored in the `build/` directory.
+
+```bash
+# build for production with minification
+$ npm run build
+```
+
+or
+
+```bash
+# build for production with minification
+$ yarn build
+```
+
+## What's included
+
+Within the download you'll find the following directories and files, logically grouping common assets and providing both compiled and minified variations. You'll see something like this:
+
+```
+coreui-free-react-admin-template
+├── public/          # static files
+│   ├── favicon.ico
+│   └── manifest.json
+│
+├── src/             # project root
+│   ├── assets/      # images, icons, etc.
+│   ├── components/  # common components - header, footer, sidebar, etc.
+│   ├── layouts/     # layout containers
+│   ├── scss/        # scss styles
+│   ├── views/       # application views
+│   ├── _nav.js      # sidebar navigation config
+│   ├── App.js
+│   ├── index.js
+│   ├── routes.js    # routes config
+│   └── store.js     # template state example 
+│
+├── index.html       # html template
+├── ...
+├── package.json
+├── ...
+└── vite.config.mjs  # vite config
+```
+
+## Documentation
+
+The documentation for the CoreUI Admin Template is hosted at our website [CoreUI for React](https://coreui.io/react/docs/templates/installation/)
+
+## Versioning
+
+For transparency into our release cycle and in striving to maintain backward compatibility, CoreUI Free Admin Template is maintained under [the Semantic Versioning guidelines](http://semver.org/).
+
+See [the Releases section of our project](https://github.com/coreui/coreui-free-react-admin-template/releases) for changelogs for each release version.
+
+## Creators
+
+**Łukasz Holeczek**
+
+* <https://twitter.com/lukaszholeczek>
+* <https://github.com/mrholek>
+
+**Andrzej Kopański**
+
+* <https://github.com/xidedix>
+
+**CoreUI Team**
+
+* <https://twitter.com/core_ui>
+* <https://github.com/coreui>
+* <https://github.com/orgs/coreui/people>
+
+## Community
+
+Get updates on CoreUI's development and chat with the project maintainers and community members.
+
+- Follow [@core_ui on Twitter](https://twitter.com/core_ui).
+- Read and subscribe to [CoreUI Blog](https://coreui.ui/blog/).
+
+## Support CoreUI Development
+
+CoreUI is an MIT-licensed open source project and is completely free to use. However, the amount of effort needed to maintain and develop new features for the project is not sustainable without proper financial backing. You can support development by buying the [CoreUI PRO](https://coreui.io/pricing/?framework=react&src=github-coreui-free-react-admin-template) or by becoming a sponsor via [Open Collective](https://opencollective.com/coreui/).
+
+## Copyright and License
+
+copyright 2024 creativeLabs Łukasz Holeczek.   
+
+Code released under [the MIT license](https://github.com/coreui/coreui-free-react-admin-template/blob/main/LICENSE).
\ No newline at end of file
Index: PlanningMamagement/frontend/public/index.html
===================================================================
diff --git a/PlanningMamagement/frontend/public/index.html b/PlanningMamagement/frontend/public/index.html
new file mode 100644
--- /dev/null	(date 1728391472716)
+++ b/PlanningMamagement/frontend/public/index.html	(date 1728391472716)
@@ -0,0 +1,43 @@
+<!DOCTYPE html>
+<html lang="en">
+  <head>
+    <meta charset="utf-8" />
+    <link rel="icon" href="%PUBLIC_URL%/favicon.ico" />
+    <meta name="viewport" content="width=device-width, initial-scale=1" />
+    <meta name="theme-color" content="#000000" />
+    <meta
+      name="description"
+      content="Web site created using create-react-app"
+    />
+    <link rel="apple-touch-icon" href="%PUBLIC_URL%/logo192.png" />
+    <!--
+      manifest.json provides metadata used when your web app is installed on a
+      user's mobile device or desktop. See https://developers.google.com/web/fundamentals/web-app-manifest/
+    -->
+    <link rel="manifest" href="%PUBLIC_URL%/manifest.json" />
+    <!--
+      Notice the use of %PUBLIC_URL% in the tags above.
+      It will be replaced with the URL of the `public` folder during the build.
+      Only files inside the `public` folder can be referenced from the HTML.
+
+      Unlike "/favicon.ico" or "favicon.ico", "%PUBLIC_URL%/favicon.ico" will
+      work correctly both with client-side routing and a non-root public URL.
+      Learn how to configure a non-root public URL by running `npm run build`.
+    -->
+    <title>React App</title>
+  </head>
+  <body>
+    <noscript>You need to enable JavaScript to run this app.</noscript>
+    <div id="root"></div>
+    <!--
+      This HTML file is a template.
+      If you open it directly in the browser, you will see an empty page.
+
+      You can add webfonts, meta tags, or analytics to this file.
+      The build step will place the bundled scripts into the <body> tag.
+
+      To begin the development, run `npm start` or `yarn start`.
+      To create a production bundle, use `npm run build` or `yarn build`.
+    -->
+  </body>
+</html>
Index: PlanningMamagement/frontend/public/manifest.json
===================================================================
diff --git a/PlanningMamagement/frontend/public/manifest.json b/PlanningMamagement/frontend/public/manifest.json
new file mode 100644
--- /dev/null	(date 1728391473594)
+++ b/PlanningMamagement/frontend/public/manifest.json	(date 1728391473594)
@@ -0,0 +1,25 @@
+{
+  "short_name": "React App",
+  "name": "Create React App Sample",
+  "icons": [
+    {
+      "src": "favicon.ico",
+      "sizes": "64x64 32x32 24x24 16x16",
+      "type": "image/x-icon"
+    },
+    {
+      "src": "logo192.png",
+      "type": "image/png",
+      "sizes": "192x192"
+    },
+    {
+      "src": "logo512.png",
+      "type": "image/png",
+      "sizes": "512x512"
+    }
+  ],
+  "start_url": ".",
+  "display": "standalone",
+  "theme_color": "#000000",
+  "background_color": "#ffffff"
+}
Index: PlanningMamagement/frontend/src/App.css
===================================================================
diff --git a/PlanningMamagement/frontend/src/App.css b/PlanningMamagement/frontend/src/App.css
new file mode 100644
--- /dev/null	(date 1728391472134)
+++ b/PlanningMamagement/frontend/src/App.css	(date 1728391472134)
@@ -0,0 +1,38 @@
+.App {
+  text-align: center;
+}
+
+.App-logo {
+  height: 40vmin;
+  pointer-events: none;
+}
+
+@media (prefers-reduced-motion: no-preference) {
+  .App-logo {
+    animation: App-logo-spin infinite 20s linear;
+  }
+}
+
+.App-header {
+  background-color: #282c34;
+  min-height: 100vh;
+  display: flex;
+  flex-direction: column;
+  align-items: center;
+  justify-content: center;
+  font-size: calc(10px + 2vmin);
+  color: white;
+}
+
+.App-link {
+  color: #61dafb;
+}
+
+@keyframes App-logo-spin {
+  from {
+    transform: rotate(0deg);
+  }
+  to {
+    transform: rotate(360deg);
+  }
+}
Index: PlanningMamagement/frontend/public/robots.txt
===================================================================
diff --git a/PlanningMamagement/frontend/public/robots.txt b/PlanningMamagement/frontend/public/robots.txt
new file mode 100644
--- /dev/null	(date 1728391474129)
+++ b/PlanningMamagement/frontend/public/robots.txt	(date 1728391474129)
@@ -0,0 +1,3 @@
+# https://www.robotstxt.org/robotstxt.html
+User-agent: *
+Disallow:
Index: PlanningMamagement/frontend/src/App.test.js
===================================================================
diff --git a/PlanningMamagement/frontend/src/App.test.js b/PlanningMamagement/frontend/src/App.test.js
new file mode 100644
--- /dev/null	(date 1728391473215)
+++ b/PlanningMamagement/frontend/src/App.test.js	(date 1728391473215)
@@ -0,0 +1,8 @@
+import { render, screen } from '@testing-library/react';
+import App from './App';
+
+test('renders learn react link', () => {
+  render(<App />);
+  const linkElement = screen.getByText(/learn react/i);
+  expect(linkElement).toBeInTheDocument();
+});
Index: PlanningMamagement/frontend/src/App.js
===================================================================
diff --git a/PlanningMamagement/frontend/src/App.js b/PlanningMamagement/frontend/src/App.js
new file mode 100644
--- /dev/null	(date 1728391641324)
+++ b/PlanningMamagement/frontend/src/App.js	(date 1728391641324)
@@ -0,0 +1,56 @@
+import React, { Suspense, useEffect } from 'react'
+import { HashRouter, Route, Routes } from 'react-router-dom'
+import { useSelector } from 'react-redux'
+
+import { CSpinner, useColorModes } from '@coreui/react'
+import './scss/style.scss'
+
+// Containers
+const DefaultLayout = React.lazy(() => import('./layout/DefaultLayout'))
+
+// Pages
+const Login = React.lazy(() => import('./views/pages/login/Login'))
+const Register = React.lazy(() => import('./views/pages/register/Register'))
+const Page404 = React.lazy(() => import('./views/pages/page404/Page404'))
+const Page500 = React.lazy(() => import('./views/pages/page500/Page500'))
+
+const App = () => {
+  const { isColorModeSet, setColorMode } = useColorModes('coreui-free-react-admin-template-theme')
+  const storedTheme = useSelector((state) => state.theme)
+
+  useEffect(() => {
+    const urlParams = new URLSearchParams(window.location.href.split('?')[1])
+    const theme = urlParams.get('theme') && urlParams.get('theme').match(/^[A-Za-z0-9\s]+/)[0]
+    if (theme) {
+      setColorMode(theme)
+    }
+
+    if (isColorModeSet()) {
+      return
+    }
+
+    setColorMode(storedTheme)
+  }, []) // eslint-disable-line react-hooks/exhaustive-deps
+
+  return (
+    <HashRouter>
+      <Suspense
+        fallback={
+          <div className="pt-3 text-center">
+            <CSpinner color="primary" variant="grow" />
+          </div>
+        }
+      >
+        <Routes>
+          <Route exact path="/login" name="Login Page" element={<Login />} />
+          <Route exact path="/register" name="Register Page" element={<Register />} />
+          <Route exact path="/404" name="Page 404" element={<Page404 />} />
+          <Route exact path="/500" name="Page 500" element={<Page500 />} />
+          <Route path="*" name="Home" element={<DefaultLayout />} />
+        </Routes>
+      </Suspense>
+    </HashRouter>
+  )
+}
+
+export default App
Index: PlanningMamagement/frontend/src/index.js
===================================================================
diff --git a/PlanningMamagement/frontend/src/index.js b/PlanningMamagement/frontend/src/index.js
new file mode 100644
--- /dev/null	(date 1728391641345)
+++ b/PlanningMamagement/frontend/src/index.js	(date 1728391641345)
@@ -0,0 +1,13 @@
+import React from 'react'
+import { createRoot } from 'react-dom/client'
+import { Provider } from 'react-redux'
+import 'core-js'
+
+import App from './App'
+import store from './store'
+
+createRoot(document.getElementById('root')).render(
+  <Provider store={store}>
+    <App />
+  </Provider>,
+)
Index: PlanningMamagement/frontend/src/index.css
===================================================================
diff --git a/PlanningMamagement/frontend/src/index.css b/PlanningMamagement/frontend/src/index.css
new file mode 100644
--- /dev/null	(date 1728391472411)
+++ b/PlanningMamagement/frontend/src/index.css	(date 1728391472411)
@@ -0,0 +1,13 @@
+body {
+  margin: 0;
+  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',
+    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',
+    sans-serif;
+  -webkit-font-smoothing: antialiased;
+  -moz-osx-font-smoothing: grayscale;
+}
+
+code {
+  font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',
+    monospace;
+}
Index: PlanningMamagement/frontend/src/reportWebVitals.js
===================================================================
diff --git a/PlanningMamagement/frontend/src/reportWebVitals.js b/PlanningMamagement/frontend/src/reportWebVitals.js
new file mode 100644
--- /dev/null	(date 1728391473433)
+++ b/PlanningMamagement/frontend/src/reportWebVitals.js	(date 1728391473433)
@@ -0,0 +1,13 @@
+const reportWebVitals = onPerfEntry => {
+  if (onPerfEntry && onPerfEntry instanceof Function) {
+    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {
+      getCLS(onPerfEntry);
+      getFID(onPerfEntry);
+      getFCP(onPerfEntry);
+      getLCP(onPerfEntry);
+      getTTFB(onPerfEntry);
+    });
+  }
+};
+
+export default reportWebVitals;
Index: PlanningMamagement/frontend/src/logo.svg
===================================================================
diff --git a/PlanningMamagement/frontend/src/logo.svg b/PlanningMamagement/frontend/src/logo.svg
new file mode 100644
--- /dev/null	(date 1728391474076)
+++ b/PlanningMamagement/frontend/src/logo.svg	(date 1728391474076)
@@ -0,0 +1,1 @@
+<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 841.9 595.3"><g fill="#61DAFB"><path d="M666.3 296.5c0-32.5-40.7-63.3-103.1-82.4 14.4-63.6 8-114.2-20.2-130.4-6.5-3.8-14.1-5.6-22.4-5.6v22.3c4.6 0 8.3.9 11.4 2.6 13.6 7.8 19.5 37.5 14.9 75.7-1.1 9.4-2.9 19.3-5.1 29.4-19.6-4.8-41-8.5-63.5-10.9-13.5-18.5-27.5-35.3-41.6-50 32.6-30.3 63.2-46.9 84-46.9V78c-27.5 0-63.5 19.6-99.9 53.6-36.4-33.8-72.4-53.2-99.9-53.2v22.3c20.7 0 51.4 16.5 84 46.6-14 14.7-28 31.4-41.3 49.9-22.6 2.4-44 6.1-63.6 11-2.3-10-4-19.7-5.2-29-4.7-38.2 1.1-67.9 14.6-75.8 3-1.8 6.9-2.6 11.5-2.6V78.5c-8.4 0-16 1.8-22.6 5.6-28.1 16.2-34.4 66.7-19.9 130.1-62.2 19.2-102.7 49.9-102.7 82.3 0 32.5 40.7 63.3 103.1 82.4-14.4 63.6-8 114.2 20.2 130.4 6.5 3.8 14.1 5.6 22.5 5.6 27.5 0 63.5-19.6 99.9-53.6 36.4 33.8 72.4 53.2 99.9 53.2 8.4 0 16-1.8 22.6-5.6 28.1-16.2 34.4-66.7 19.9-130.1 62-19.1 102.5-49.9 102.5-82.3zm-130.2-66.7c-3.7 12.9-8.3 26.2-13.5 39.5-4.1-8-8.4-16-13.1-24-4.6-8-9.5-15.8-14.4-23.4 14.2 2.1 27.9 4.7 41 7.9zm-45.8 106.5c-7.8 13.5-15.8 26.3-24.1 38.2-14.9 1.3-30 2-45.2 2-15.1 0-30.2-.7-45-1.9-8.3-11.9-16.4-24.6-24.2-38-7.6-13.1-14.5-26.4-20.8-39.8 6.2-13.4 13.2-26.8 20.7-39.9 7.8-13.5 15.8-26.3 24.1-38.2 14.9-1.3 30-2 45.2-2 15.1 0 30.2.7 45 1.9 8.3 11.9 16.4 24.6 24.2 38 7.6 13.1 14.5 26.4 20.8 39.8-6.3 13.4-13.2 26.8-20.7 39.9zm32.3-13c5.4 13.4 10 26.8 13.8 39.8-13.1 3.2-26.9 5.9-41.2 8 4.9-7.7 9.8-15.6 14.4-23.7 4.6-8 8.9-16.1 13-24.1zM421.2 430c-9.3-9.6-18.6-20.3-27.8-32 9 .4 18.2.7 27.5.7 9.4 0 18.7-.2 27.8-.7-9 11.7-18.3 22.4-27.5 32zm-74.4-58.9c-14.2-2.1-27.9-4.7-41-7.9 3.7-12.9 8.3-26.2 13.5-39.5 4.1 8 8.4 16 13.1 24 4.7 8 9.5 15.8 14.4 23.4zM420.7 163c9.3 9.6 18.6 20.3 27.8 32-9-.4-18.2-.7-27.5-.7-9.4 0-18.7.2-27.8.7 9-11.7 18.3-22.4 27.5-32zm-74 58.9c-4.9 7.7-9.8 15.6-14.4 23.7-4.6 8-8.9 16-13 24-5.4-13.4-10-26.8-13.8-39.8 13.1-3.1 26.9-5.8 41.2-7.9zm-90.5 125.2c-35.4-15.1-58.3-34.9-58.3-50.6 0-15.7 22.9-35.6 58.3-50.6 8.6-3.7 18-7 27.7-10.1 5.7 19.6 13.2 40 22.5 60.9-9.2 20.8-16.6 41.1-22.2 60.6-9.9-3.1-19.3-6.5-28-10.2zM310 490c-13.6-7.8-19.5-37.5-14.9-75.7 1.1-9.4 2.9-19.3 5.1-29.4 19.6 4.8 41 8.5 63.5 10.9 13.5 18.5 27.5 35.3 41.6 50-32.6 30.3-63.2 46.9-84 46.9-4.5-.1-8.3-1-11.3-2.7zm237.2-76.2c4.7 38.2-1.1 67.9-14.6 75.8-3 1.8-6.9 2.6-11.5 2.6-20.7 0-51.4-16.5-84-46.6 14-14.7 28-31.4 41.3-49.9 22.6-2.4 44-6.1 63.6-11 2.3 10.1 4.1 19.8 5.2 29.1zm38.5-66.7c-8.6 3.7-18 7-27.7 10.1-5.7-19.6-13.2-40-22.5-60.9 9.2-20.8 16.6-41.1 22.2-60.6 9.9 3.1 19.3 6.5 28.1 10.2 35.4 15.1 58.3 34.9 58.3 50.6-.1 15.7-23 35.6-58.4 50.6zM320.8 78.4z"/><circle cx="420.9" cy="296.5" r="45.7"/><path d="M520.5 78.1z"/></g></svg>
\ No newline at end of file
Index: PlanningMamagement/frontend/src/setupTests.js
===================================================================
diff --git a/PlanningMamagement/frontend/src/setupTests.js b/PlanningMamagement/frontend/src/setupTests.js
new file mode 100644
--- /dev/null	(date 1728391473517)
+++ b/PlanningMamagement/frontend/src/setupTests.js	(date 1728391473517)
@@ -0,0 +1,5 @@
+// jest-dom adds custom jest matchers for asserting on DOM nodes.
+// allows you to do things like:
+// expect(element).toHaveTextContent(/react/i)
+// learn more: https://github.com/testing-library/jest-dom
+import '@testing-library/jest-dom';
Index: PlanningMamagement/frontend/src/_nav.js
===================================================================
diff --git a/PlanningMamagement/frontend/src/_nav.js b/PlanningMamagement/frontend/src/_nav.js
new file mode 100644
--- /dev/null	(date 1728391641333)
+++ b/PlanningMamagement/frontend/src/_nav.js	(date 1728391641333)
@@ -0,0 +1,310 @@
+import React from 'react'
+import CIcon from '@coreui/icons-react'
+import {
+  cilBell,
+  cilCalculator,
+  cilChartPie,
+  cilCursor,
+  cilDescription,
+  cilDrop,
+  cilNotes,
+  cilPencil,
+  cilPuzzle,
+  cilSpeedometer,
+  cilStar,
+} from '@coreui/icons'
+import { CNavGroup, CNavItem, CNavTitle } from '@coreui/react'
+
+const _nav = [
+  {
+    component: CNavItem,
+    name: 'Dashboard',
+    to: '/dashboard',
+    icon: <CIcon icon={cilSpeedometer} customClassName="nav-icon" />,
+    badge: {
+      color: 'info',
+      text: 'NEW',
+    },
+  },
+  {
+    component: CNavTitle,
+    name: 'Theme',
+  },
+  {
+    component: CNavItem,
+    name: 'Colors',
+    to: '/theme/colors',
+    icon: <CIcon icon={cilDrop} customClassName="nav-icon" />,
+  },
+  {
+    component: CNavItem,
+    name: 'Typography',
+    to: '/theme/typography',
+    icon: <CIcon icon={cilPencil} customClassName="nav-icon" />,
+  },
+  {
+    component: CNavTitle,
+    name: 'Components',
+  },
+  {
+    component: CNavGroup,
+    name: 'Base',
+    to: '/base',
+    icon: <CIcon icon={cilPuzzle} customClassName="nav-icon" />,
+    items: [
+      {
+        component: CNavItem,
+        name: 'Accordion',
+        to: '/base/accordion',
+      },
+      {
+        component: CNavItem,
+        name: 'Breadcrumb',
+        to: '/base/breadcrumbs',
+      },
+      {
+        component: CNavItem,
+        name: 'Cards',
+        to: '/base/cards',
+      },
+      {
+        component: CNavItem,
+        name: 'Carousel',
+        to: '/base/carousels',
+      },
+      {
+        component: CNavItem,
+        name: 'Collapse',
+        to: '/base/collapses',
+      },
+      {
+        component: CNavItem,
+        name: 'List group',
+        to: '/base/list-groups',
+      },
+      {
+        component: CNavItem,
+        name: 'Navs & Tabs',
+        to: '/base/navs',
+      },
+      {
+        component: CNavItem,
+        name: 'Pagination',
+        to: '/base/paginations',
+      },
+      {
+        component: CNavItem,
+        name: 'Placeholders',
+        to: '/base/placeholders',
+      },
+      {
+        component: CNavItem,
+        name: 'Popovers',
+        to: '/base/popovers',
+      },
+      {
+        component: CNavItem,
+        name: 'Progress',
+        to: '/base/progress',
+      },
+      {
+        component: CNavItem,
+        name: 'Spinners',
+        to: '/base/spinners',
+      },
+      {
+        component: CNavItem,
+        name: 'Tables',
+        to: '/base/tables',
+      },
+      {
+        component: CNavItem,
+        name: 'Tabs',
+        to: '/base/tabs',
+      },
+      {
+        component: CNavItem,
+        name: 'Tooltips',
+        to: '/base/tooltips',
+      },
+    ],
+  },
+  {
+    component: CNavGroup,
+    name: 'Buttons',
+    to: '/buttons',
+    icon: <CIcon icon={cilCursor} customClassName="nav-icon" />,
+    items: [
+      {
+        component: CNavItem,
+        name: 'Buttons',
+        to: '/buttons/buttons',
+      },
+      {
+        component: CNavItem,
+        name: 'Buttons groups',
+        to: '/buttons/button-groups',
+      },
+      {
+        component: CNavItem,
+        name: 'Dropdowns',
+        to: '/buttons/dropdowns',
+      },
+    ],
+  },
+  {
+    component: CNavGroup,
+    name: 'Forms',
+    icon: <CIcon icon={cilNotes} customClassName="nav-icon" />,
+    items: [
+      {
+        component: CNavItem,
+        name: 'Form Control',
+        to: '/forms/form-control',
+      },
+      {
+        component: CNavItem,
+        name: 'Select',
+        to: '/forms/select',
+      },
+      {
+        component: CNavItem,
+        name: 'Checks & Radios',
+        to: '/forms/checks-radios',
+      },
+      {
+        component: CNavItem,
+        name: 'Range',
+        to: '/forms/range',
+      },
+      {
+        component: CNavItem,
+        name: 'Input Group',
+        to: '/forms/input-group',
+      },
+      {
+        component: CNavItem,
+        name: 'Floating Labels',
+        to: '/forms/floating-labels',
+      },
+      {
+        component: CNavItem,
+        name: 'Layout',
+        to: '/forms/layout',
+      },
+      {
+        component: CNavItem,
+        name: 'Validation',
+        to: '/forms/validation',
+      },
+    ],
+  },
+  {
+    component: CNavItem,
+    name: 'Charts',
+    to: '/charts',
+    icon: <CIcon icon={cilChartPie} customClassName="nav-icon" />,
+  },
+  {
+    component: CNavGroup,
+    name: 'Icons',
+    icon: <CIcon icon={cilStar} customClassName="nav-icon" />,
+    items: [
+      {
+        component: CNavItem,
+        name: 'CoreUI Free',
+        to: '/icons/coreui-icons',
+        badge: {
+          color: 'success',
+          text: 'NEW',
+        },
+      },
+      {
+        component: CNavItem,
+        name: 'CoreUI Flags',
+        to: '/icons/flags',
+      },
+      {
+        component: CNavItem,
+        name: 'CoreUI Brands',
+        to: '/icons/brands',
+      },
+    ],
+  },
+  {
+    component: CNavGroup,
+    name: 'Notifications',
+    icon: <CIcon icon={cilBell} customClassName="nav-icon" />,
+    items: [
+      {
+        component: CNavItem,
+        name: 'Alerts',
+        to: '/notifications/alerts',
+      },
+      {
+        component: CNavItem,
+        name: 'Badges',
+        to: '/notifications/badges',
+      },
+      {
+        component: CNavItem,
+        name: 'Modal',
+        to: '/notifications/modals',
+      },
+      {
+        component: CNavItem,
+        name: 'Toasts',
+        to: '/notifications/toasts',
+      },
+    ],
+  },
+  {
+    component: CNavItem,
+    name: 'Widgets',
+    to: '/widgets',
+    icon: <CIcon icon={cilCalculator} customClassName="nav-icon" />,
+    badge: {
+      color: 'info',
+      text: 'NEW',
+    },
+  },
+  {
+    component: CNavTitle,
+    name: 'Extras',
+  },
+  {
+    component: CNavGroup,
+    name: 'Pages',
+    icon: <CIcon icon={cilStar} customClassName="nav-icon" />,
+    items: [
+      {
+        component: CNavItem,
+        name: 'Login',
+        to: '/login',
+      },
+      {
+        component: CNavItem,
+        name: 'Register',
+        to: '/register',
+      },
+      {
+        component: CNavItem,
+        name: 'Error 404',
+        to: '/404',
+      },
+      {
+        component: CNavItem,
+        name: 'Error 500',
+        to: '/500',
+      },
+    ],
+  },
+  {
+    component: CNavItem,
+    name: 'Docs',
+    href: 'https://coreui.io/react/docs/templates/installation/',
+    icon: <CIcon icon={cilDescription} customClassName="nav-icon" />,
+  },
+]
+
+export default _nav
Index: PlanningMamagement/frontend/src/routes.js
===================================================================
diff --git a/PlanningMamagement/frontend/src/routes.js b/PlanningMamagement/frontend/src/routes.js
new file mode 100644
--- /dev/null	(date 1728391641355)
+++ b/PlanningMamagement/frontend/src/routes.js	(date 1728391641355)
@@ -0,0 +1,102 @@
+import React from 'react'
+
+const Dashboard = React.lazy(() => import('./views/dashboard/Dashboard'))
+const Colors = React.lazy(() => import('./views/theme/colors/Colors'))
+const Typography = React.lazy(() => import('./views/theme/typography/Typography'))
+
+// Base
+const Accordion = React.lazy(() => import('./views/base/accordion/Accordion'))
+const Breadcrumbs = React.lazy(() => import('./views/base/breadcrumbs/Breadcrumbs'))
+const Cards = React.lazy(() => import('./views/base/cards/Cards'))
+const Carousels = React.lazy(() => import('./views/base/carousels/Carousels'))
+const Collapses = React.lazy(() => import('./views/base/collapses/Collapses'))
+const ListGroups = React.lazy(() => import('./views/base/list-groups/ListGroups'))
+const Navs = React.lazy(() => import('./views/base/navs/Navs'))
+const Paginations = React.lazy(() => import('./views/base/paginations/Paginations'))
+const Placeholders = React.lazy(() => import('./views/base/placeholders/Placeholders'))
+const Popovers = React.lazy(() => import('./views/base/popovers/Popovers'))
+const Progress = React.lazy(() => import('./views/base/progress/Progress'))
+const Spinners = React.lazy(() => import('./views/base/spinners/Spinners'))
+const Tabs = React.lazy(() => import('./views/base/tabs/Tabs'))
+const Tables = React.lazy(() => import('./views/base/tables/Tables'))
+const Tooltips = React.lazy(() => import('./views/base/tooltips/Tooltips'))
+
+// Buttons
+const Buttons = React.lazy(() => import('./views/buttons/buttons/Buttons'))
+const ButtonGroups = React.lazy(() => import('./views/buttons/button-groups/ButtonGroups'))
+const Dropdowns = React.lazy(() => import('./views/buttons/dropdowns/Dropdowns'))
+
+//Forms
+const ChecksRadios = React.lazy(() => import('./views/forms/checks-radios/ChecksRadios'))
+const FloatingLabels = React.lazy(() => import('./views/forms/floating-labels/FloatingLabels'))
+const FormControl = React.lazy(() => import('./views/forms/form-control/FormControl'))
+const InputGroup = React.lazy(() => import('./views/forms/input-group/InputGroup'))
+const Layout = React.lazy(() => import('./views/forms/layout/Layout'))
+const Range = React.lazy(() => import('./views/forms/range/Range'))
+const Select = React.lazy(() => import('./views/forms/select/Select'))
+const Validation = React.lazy(() => import('./views/forms/validation/Validation'))
+
+const Charts = React.lazy(() => import('./views/charts/Charts'))
+
+// Icons
+const CoreUIIcons = React.lazy(() => import('./views/icons/coreui-icons/CoreUIIcons'))
+const Flags = React.lazy(() => import('./views/icons/flags/Flags'))
+const Brands = React.lazy(() => import('./views/icons/brands/Brands'))
+
+// Notifications
+const Alerts = React.lazy(() => import('./views/notifications/alerts/Alerts'))
+const Badges = React.lazy(() => import('./views/notifications/badges/Badges'))
+const Modals = React.lazy(() => import('./views/notifications/modals/Modals'))
+const Toasts = React.lazy(() => import('./views/notifications/toasts/Toasts'))
+
+const Widgets = React.lazy(() => import('./views/widgets/Widgets'))
+
+const routes = [
+  { path: '/', exact: true, name: 'Home' },
+  { path: '/dashboard', name: 'Dashboard', element: Dashboard },
+  { path: '/theme', name: 'Theme', element: Colors, exact: true },
+  { path: '/theme/colors', name: 'Colors', element: Colors },
+  { path: '/theme/typography', name: 'Typography', element: Typography },
+  { path: '/base', name: 'Base', element: Cards, exact: true },
+  { path: '/base/accordion', name: 'Accordion', element: Accordion },
+  { path: '/base/breadcrumbs', name: 'Breadcrumbs', element: Breadcrumbs },
+  { path: '/base/cards', name: 'Cards', element: Cards },
+  { path: '/base/carousels', name: 'Carousel', element: Carousels },
+  { path: '/base/collapses', name: 'Collapse', element: Collapses },
+  { path: '/base/list-groups', name: 'List Groups', element: ListGroups },
+  { path: '/base/navs', name: 'Navs', element: Navs },
+  { path: '/base/paginations', name: 'Paginations', element: Paginations },
+  { path: '/base/placeholders', name: 'Placeholders', element: Placeholders },
+  { path: '/base/popovers', name: 'Popovers', element: Popovers },
+  { path: '/base/progress', name: 'Progress', element: Progress },
+  { path: '/base/spinners', name: 'Spinners', element: Spinners },
+  { path: '/base/tabs', name: 'Tabs', element: Tabs },
+  { path: '/base/tables', name: 'Tables', element: Tables },
+  { path: '/base/tooltips', name: 'Tooltips', element: Tooltips },
+  { path: '/buttons', name: 'Buttons', element: Buttons, exact: true },
+  { path: '/buttons/buttons', name: 'Buttons', element: Buttons },
+  { path: '/buttons/dropdowns', name: 'Dropdowns', element: Dropdowns },
+  { path: '/buttons/button-groups', name: 'Button Groups', element: ButtonGroups },
+  { path: '/charts', name: 'Charts', element: Charts },
+  { path: '/forms', name: 'Forms', element: FormControl, exact: true },
+  { path: '/forms/form-control', name: 'Form Control', element: FormControl },
+  { path: '/forms/select', name: 'Select', element: Select },
+  { path: '/forms/checks-radios', name: 'Checks & Radios', element: ChecksRadios },
+  { path: '/forms/range', name: 'Range', element: Range },
+  { path: '/forms/input-group', name: 'Input Group', element: InputGroup },
+  { path: '/forms/floating-labels', name: 'Floating Labels', element: FloatingLabels },
+  { path: '/forms/layout', name: 'Layout', element: Layout },
+  { path: '/forms/validation', name: 'Validation', element: Validation },
+  { path: '/icons', exact: true, name: 'Icons', element: CoreUIIcons },
+  { path: '/icons/coreui-icons', name: 'CoreUI Icons', element: CoreUIIcons },
+  { path: '/icons/flags', name: 'Flags', element: Flags },
+  { path: '/icons/brands', name: 'Brands', element: Brands },
+  { path: '/notifications', name: 'Notifications', element: Alerts, exact: true },
+  { path: '/notifications/alerts', name: 'Alerts', element: Alerts },
+  { path: '/notifications/badges', name: 'Badges', element: Badges },
+  { path: '/notifications/modals', name: 'Modals', element: Modals },
+  { path: '/notifications/toasts', name: 'Toasts', element: Toasts },
+  { path: '/widgets', name: 'Widgets', element: Widgets },
+]
+
+export default routes
Index: PlanningMamagement/frontend/src/store.js
===================================================================
diff --git a/PlanningMamagement/frontend/src/store.js b/PlanningMamagement/frontend/src/store.js
new file mode 100644
--- /dev/null	(date 1728391641365)
+++ b/PlanningMamagement/frontend/src/store.js	(date 1728391641365)
@@ -0,0 +1,18 @@
+import { legacy_createStore as createStore } from 'redux'
+
+const initialState = {
+  sidebarShow: true,
+  theme: 'light',
+}
+
+const changeState = (state = initialState, { type, ...rest }) => {
+  switch (type) {
+    case 'set':
+      return { ...state, ...rest }
+    default:
+      return state
+  }
+}
+
+const store = createStore(changeState)
+export default store
Index: PlanningMamagement/frontend/src/components/AppContent.js
===================================================================
diff --git a/PlanningMamagement/frontend/src/components/AppContent.js b/PlanningMamagement/frontend/src/components/AppContent.js
new file mode 100644
--- /dev/null	(date 1728391641564)
+++ b/PlanningMamagement/frontend/src/components/AppContent.js	(date 1728391641564)
@@ -0,0 +1,33 @@
+import React, { Suspense } from 'react'
+import { Navigate, Route, Routes } from 'react-router-dom'
+import { CContainer, CSpinner } from '@coreui/react'
+
+// routes config
+import routes from '../routes'
+
+const AppContent = () => {
+  return (
+    <CContainer className="px-4" lg>
+      <Suspense fallback={<CSpinner color="primary" />}>
+        <Routes>
+          {routes.map((route, idx) => {
+            return (
+              route.element && (
+                <Route
+                  key={idx}
+                  path={route.path}
+                  exact={route.exact}
+                  name={route.name}
+                  element={<route.element />}
+                />
+              )
+            )
+          })}
+          <Route path="/" element={<Navigate to="dashboard" replace />} />
+        </Routes>
+      </Suspense>
+    </CContainer>
+  )
+}
+
+export default React.memo(AppContent)
Index: PlanningMamagement/frontend/src/components/AppBreadcrumb.js
===================================================================
diff --git a/PlanningMamagement/frontend/src/components/AppBreadcrumb.js b/PlanningMamagement/frontend/src/components/AppBreadcrumb.js
new file mode 100644
--- /dev/null	(date 1728391641553)
+++ b/PlanningMamagement/frontend/src/components/AppBreadcrumb.js	(date 1728391641553)
@@ -0,0 +1,51 @@
+import React from 'react'
+import { useLocation } from 'react-router-dom'
+
+import routes from '../routes'
+
+import { CBreadcrumb, CBreadcrumbItem } from '@coreui/react'
+
+const AppBreadcrumb = () => {
+  const currentLocation = useLocation().pathname
+
+  const getRouteName = (pathname, routes) => {
+    const currentRoute = routes.find((route) => route.path === pathname)
+    return currentRoute ? currentRoute.name : false
+  }
+
+  const getBreadcrumbs = (location) => {
+    const breadcrumbs = []
+    location.split('/').reduce((prev, curr, index, array) => {
+      const currentPathname = `${prev}/${curr}`
+      const routeName = getRouteName(currentPathname, routes)
+      routeName &&
+        breadcrumbs.push({
+          pathname: currentPathname,
+          name: routeName,
+          active: index + 1 === array.length ? true : false,
+        })
+      return currentPathname
+    })
+    return breadcrumbs
+  }
+
+  const breadcrumbs = getBreadcrumbs(currentLocation)
+
+  return (
+    <CBreadcrumb className="my-0">
+      <CBreadcrumbItem href="/">Home</CBreadcrumbItem>
+      {breadcrumbs.map((breadcrumb, index) => {
+        return (
+          <CBreadcrumbItem
+            {...(breadcrumb.active ? { active: true } : { href: breadcrumb.pathname })}
+            key={index}
+          >
+            {breadcrumb.name}
+          </CBreadcrumbItem>
+        )
+      })}
+    </CBreadcrumb>
+  )
+}
+
+export default React.memo(AppBreadcrumb)
Index: PlanningMamagement/frontend/src/components/AppHeader.js
===================================================================
diff --git a/PlanningMamagement/frontend/src/components/AppHeader.js b/PlanningMamagement/frontend/src/components/AppHeader.js
new file mode 100644
--- /dev/null	(date 1728391641583)
+++ b/PlanningMamagement/frontend/src/components/AppHeader.js	(date 1728391641583)
@@ -0,0 +1,141 @@
+import React, { useEffect, useRef } from 'react'
+import { NavLink } from 'react-router-dom'
+import { useSelector, useDispatch } from 'react-redux'
+import {
+  CContainer,
+  CDropdown,
+  CDropdownItem,
+  CDropdownMenu,
+  CDropdownToggle,
+  CHeader,
+  CHeaderNav,
+  CHeaderToggler,
+  CNavLink,
+  CNavItem,
+  useColorModes,
+} from '@coreui/react'
+import CIcon from '@coreui/icons-react'
+import {
+  cilBell,
+  cilContrast,
+  cilEnvelopeOpen,
+  cilList,
+  cilMenu,
+  cilMoon,
+  cilSun,
+} from '@coreui/icons'
+
+import { AppBreadcrumb } from './index'
+import { AppHeaderDropdown } from './header/index'
+
+const AppHeader = () => {
+  const headerRef = useRef()
+  const { colorMode, setColorMode } = useColorModes('coreui-free-react-admin-template-theme')
+
+  const dispatch = useDispatch()
+  const sidebarShow = useSelector((state) => state.sidebarShow)
+
+  useEffect(() => {
+    document.addEventListener('scroll', () => {
+      headerRef.current &&
+        headerRef.current.classList.toggle('shadow-sm', document.documentElement.scrollTop > 0)
+    })
+  }, [])
+
+  return (
+    <CHeader position="sticky" className="mb-4 p-0" ref={headerRef}>
+      <CContainer className="border-bottom px-4" fluid>
+        <CHeaderToggler
+          onClick={() => dispatch({ type: 'set', sidebarShow: !sidebarShow })}
+          style={{ marginInlineStart: '-14px' }}
+        >
+          <CIcon icon={cilMenu} size="lg" />
+        </CHeaderToggler>
+        <CHeaderNav className="d-none d-md-flex">
+          <CNavItem>
+            <CNavLink to="/dashboard" as={NavLink}>
+              Dashboard
+            </CNavLink>
+          </CNavItem>
+          <CNavItem>
+            <CNavLink href="#">Users</CNavLink>
+          </CNavItem>
+          <CNavItem>
+            <CNavLink href="#">Settings</CNavLink>
+          </CNavItem>
+        </CHeaderNav>
+        <CHeaderNav className="ms-auto">
+          <CNavItem>
+            <CNavLink href="#">
+              <CIcon icon={cilBell} size="lg" />
+            </CNavLink>
+          </CNavItem>
+          <CNavItem>
+            <CNavLink href="#">
+              <CIcon icon={cilList} size="lg" />
+            </CNavLink>
+          </CNavItem>
+          <CNavItem>
+            <CNavLink href="#">
+              <CIcon icon={cilEnvelopeOpen} size="lg" />
+            </CNavLink>
+          </CNavItem>
+        </CHeaderNav>
+        <CHeaderNav>
+          <li className="nav-item py-1">
+            <div className="vr h-100 mx-2 text-body text-opacity-75"></div>
+          </li>
+          <CDropdown variant="nav-item" placement="bottom-end">
+            <CDropdownToggle caret={false}>
+              {colorMode === 'dark' ? (
+                <CIcon icon={cilMoon} size="lg" />
+              ) : colorMode === 'auto' ? (
+                <CIcon icon={cilContrast} size="lg" />
+              ) : (
+                <CIcon icon={cilSun} size="lg" />
+              )}
+            </CDropdownToggle>
+            <CDropdownMenu>
+              <CDropdownItem
+                active={colorMode === 'light'}
+                className="d-flex align-items-center"
+                as="button"
+                type="button"
+                onClick={() => setColorMode('light')}
+              >
+                <CIcon className="me-2" icon={cilSun} size="lg" /> Light
+              </CDropdownItem>
+              <CDropdownItem
+                active={colorMode === 'dark'}
+                className="d-flex align-items-center"
+                as="button"
+                type="button"
+                onClick={() => setColorMode('dark')}
+              >
+                <CIcon className="me-2" icon={cilMoon} size="lg" /> Dark
+              </CDropdownItem>
+              <CDropdownItem
+                active={colorMode === 'auto'}
+                className="d-flex align-items-center"
+                as="button"
+                type="button"
+                onClick={() => setColorMode('auto')}
+              >
+                <CIcon className="me-2" icon={cilContrast} size="lg" /> Auto
+              </CDropdownItem>
+            </CDropdownMenu>
+          </CDropdown>
+          <li className="nav-item py-1">
+            <div className="vr h-100 mx-2 text-body text-opacity-75"></div>
+          </li>
+          <AppHeaderDropdown />
+        </CHeaderNav>
+      </CContainer>
+      <CContainer className="px-4" fluid>
+        <AppBreadcrumb />
+      </CContainer>
+    </CHeader>
+  )
+}
+
+export default AppHeader
Index: PlanningMamagement/frontend/src/components/AppFooter.js
===================================================================
diff --git a/PlanningMamagement/frontend/src/components/AppFooter.js b/PlanningMamagement/frontend/src/components/AppFooter.js
new file mode 100644
--- /dev/null	(date 1728391641573)
+++ b/PlanningMamagement/frontend/src/components/AppFooter.js	(date 1728391641573)
@@ -0,0 +1,23 @@
+import React from 'react'
+import { CFooter } from '@coreui/react'
+
+const AppFooter = () => {
+  return (
+    <CFooter className="px-4">
+      <div>
+        <a href="https://coreui.io" target="_blank" rel="noopener noreferrer">
+          CoreUI
+        </a>
+        <span className="ms-1">&copy; 2024 creativeLabs.</span>
+      </div>
+      <div className="ms-auto">
+        <span className="me-1">Powered by</span>
+        <a href="https://coreui.io/react" target="_blank" rel="noopener noreferrer">
+          CoreUI React Admin &amp; Dashboard Template
+        </a>
+      </div>
+    </CFooter>
+  )
+}
+
+export default React.memo(AppFooter)
Index: PlanningMamagement/frontend/src/components/AppSidebarNav.js
===================================================================
diff --git a/PlanningMamagement/frontend/src/components/AppSidebarNav.js b/PlanningMamagement/frontend/src/components/AppSidebarNav.js
new file mode 100644
--- /dev/null	(date 1728391641601)
+++ b/PlanningMamagement/frontend/src/components/AppSidebarNav.js	(date 1728391641601)
@@ -0,0 +1,69 @@
+import React from 'react'
+import { NavLink } from 'react-router-dom'
+import PropTypes from 'prop-types'
+
+import SimpleBar from 'simplebar-react'
+import 'simplebar-react/dist/simplebar.min.css'
+
+import { CBadge, CNavLink, CSidebarNav } from '@coreui/react'
+
+export const AppSidebarNav = ({ items }) => {
+  const navLink = (name, icon, badge, indent = false) => {
+    return (
+      <>
+        {icon
+          ? icon
+          : indent && (
+              <span className="nav-icon">
+                <span className="nav-icon-bullet"></span>
+              </span>
+            )}
+        {name && name}
+        {badge && (
+          <CBadge color={badge.color} className="ms-auto">
+            {badge.text}
+          </CBadge>
+        )}
+      </>
+    )
+  }
+
+  const navItem = (item, index, indent = false) => {
+    const { component, name, badge, icon, ...rest } = item
+    const Component = component
+    return (
+      <Component as="div" key={index}>
+        {rest.to || rest.href ? (
+          <CNavLink {...(rest.to && { as: NavLink })} {...rest}>
+            {navLink(name, icon, badge, indent)}
+          </CNavLink>
+        ) : (
+          navLink(name, icon, badge, indent)
+        )}
+      </Component>
+    )
+  }
+
+  const navGroup = (item, index) => {
+    const { component, name, icon, items, to, ...rest } = item
+    const Component = component
+    return (
+      <Component compact as="div" key={index} toggler={navLink(name, icon)} {...rest}>
+        {item.items?.map((item, index) =>
+          item.items ? navGroup(item, index) : navItem(item, index, true),
+        )}
+      </Component>
+    )
+  }
+
+  return (
+    <CSidebarNav as={SimpleBar}>
+      {items &&
+        items.map((item, index) => (item.items ? navGroup(item, index) : navItem(item, index)))}
+    </CSidebarNav>
+  )
+}
+
+AppSidebarNav.propTypes = {
+  items: PropTypes.arrayOf(PropTypes.any).isRequired,
+}
Index: PlanningMamagement/frontend/src/components/AppSidebar.js
===================================================================
diff --git a/PlanningMamagement/frontend/src/components/AppSidebar.js b/PlanningMamagement/frontend/src/components/AppSidebar.js
new file mode 100644
--- /dev/null	(date 1728391641592)
+++ b/PlanningMamagement/frontend/src/components/AppSidebar.js	(date 1728391641592)
@@ -0,0 +1,59 @@
+import React from 'react'
+import { useSelector, useDispatch } from 'react-redux'
+
+import {
+  CCloseButton,
+  CSidebar,
+  CSidebarBrand,
+  CSidebarFooter,
+  CSidebarHeader,
+  CSidebarToggler,
+} from '@coreui/react'
+import CIcon from '@coreui/icons-react'
+
+import { AppSidebarNav } from './AppSidebarNav'
+
+import { logo } from 'src/assets/brand/logo'
+import { sygnet } from 'src/assets/brand/sygnet'
+
+// sidebar nav config
+import navigation from '../_nav'
+
+const AppSidebar = () => {
+  const dispatch = useDispatch()
+  const unfoldable = useSelector((state) => state.sidebarUnfoldable)
+  const sidebarShow = useSelector((state) => state.sidebarShow)
+
+  return (
+    <CSidebar
+      className="border-end"
+      colorScheme="dark"
+      position="fixed"
+      unfoldable={unfoldable}
+      visible={sidebarShow}
+      onVisibleChange={(visible) => {
+        dispatch({ type: 'set', sidebarShow: visible })
+      }}
+    >
+      <CSidebarHeader className="border-bottom">
+        <CSidebarBrand to="/">
+          <CIcon customClassName="sidebar-brand-full" icon={logo} height={32} />
+          <CIcon customClassName="sidebar-brand-narrow" icon={sygnet} height={32} />
+        </CSidebarBrand>
+        <CCloseButton
+          className="d-lg-none"
+          dark
+          onClick={() => dispatch({ type: 'set', sidebarShow: false })}
+        />
+      </CSidebarHeader>
+      <AppSidebarNav items={navigation} />
+      <CSidebarFooter className="border-top d-none d-lg-flex">
+        <CSidebarToggler
+          onClick={() => dispatch({ type: 'set', sidebarUnfoldable: !unfoldable })}
+        />
+      </CSidebarFooter>
+    </CSidebar>
+  )
+}
+
+export default React.memo(AppSidebar)
Index: PlanningMamagement/frontend/src/components/DocsExample.js
===================================================================
diff --git a/PlanningMamagement/frontend/src/components/DocsExample.js b/PlanningMamagement/frontend/src/components/DocsExample.js
new file mode 100644
--- /dev/null	(date 1728391641620)
+++ b/PlanningMamagement/frontend/src/components/DocsExample.js	(date 1728391641620)
@@ -0,0 +1,43 @@
+import PropTypes from 'prop-types'
+import React from 'react'
+import { CNav, CNavItem, CNavLink, CTabContent, CTabPane } from '@coreui/react'
+import CIcon from '@coreui/icons-react'
+import { cilCode, cilMediaPlay } from '@coreui/icons'
+
+const DocsExample = (props) => {
+  const { children, href, tabContentClassName } = props
+
+  const _href = `https://coreui.io/react/docs/${href}`
+
+  return (
+    <div className="example">
+      <CNav variant="underline-border">
+        <CNavItem>
+          <CNavLink href="#" active>
+            <CIcon icon={cilMediaPlay} className="me-2" />
+            Preview
+          </CNavLink>
+        </CNavItem>
+        <CNavItem>
+          <CNavLink href={_href} target="_blank">
+            <CIcon icon={cilCode} className="me-2" />
+            Code
+          </CNavLink>
+        </CNavItem>
+      </CNav>
+      <CTabContent className={`rounded-bottom ${tabContentClassName ? tabContentClassName : ''}`}>
+        <CTabPane className="p-3 preview" visible>
+          {children}
+        </CTabPane>
+      </CTabContent>
+    </div>
+  )
+}
+
+DocsExample.propTypes = {
+  children: PropTypes.node,
+  href: PropTypes.string,
+  tabContentClassName: PropTypes.string,
+}
+
+export default React.memo(DocsExample)
Index: PlanningMamagement/frontend/src/components/DocsCallout.js
===================================================================
diff --git a/PlanningMamagement/frontend/src/components/DocsCallout.js b/PlanningMamagement/frontend/src/components/DocsCallout.js
new file mode 100644
--- /dev/null	(date 1728391641610)
+++ b/PlanningMamagement/frontend/src/components/DocsCallout.js	(date 1728391641610)
@@ -0,0 +1,38 @@
+import PropTypes from 'prop-types'
+import React from 'react'
+import { CCallout, CLink } from '@coreui/react'
+
+const DocsCallout = (props) => {
+  const { content, href, name } = props
+
+  const plural = name.slice(-1) === 's' ? true : false
+
+  const _href = `https://coreui.io/react/docs/${href}`
+
+  return (
+    <CCallout color="info" className="bg-white">
+      {content
+        ? content
+        : `A React ${name} component ${
+            plural ? 'have' : 'has'
+          } been created as a native React.js version
+      of Bootstrap ${name}. ${name} ${plural ? 'are' : 'is'} delivered with some new features,
+      variants, and unique design that matches CoreUI Design System requirements.`}
+      <br />
+      <br />
+      For more information please visit our official{' '}
+      <CLink href={_href} target="_blank">
+        documentation of CoreUI Components Library for React.js
+      </CLink>
+      .
+    </CCallout>
+  )
+}
+
+DocsCallout.propTypes = {
+  content: PropTypes.string,
+  href: PropTypes.string,
+  name: PropTypes.string,
+}
+
+export default React.memo(DocsCallout)
Index: PlanningMamagement/frontend/src/components/DocsLink.js
===================================================================
diff --git a/PlanningMamagement/frontend/src/components/DocsLink.js b/PlanningMamagement/frontend/src/components/DocsLink.js
new file mode 100644
--- /dev/null	(date 1728391641630)
+++ b/PlanningMamagement/frontend/src/components/DocsLink.js	(date 1728391641630)
@@ -0,0 +1,31 @@
+import PropTypes from 'prop-types'
+import React from 'react'
+import { CLink } from '@coreui/react'
+
+const DocsLink = (props) => {
+  const { href, name, text, ...rest } = props
+
+  const _href = name ? `https://coreui.io/react/docs/components/${name}` : href
+
+  return (
+    <div className="float-end">
+      <CLink
+        {...rest}
+        href={_href}
+        rel="noreferrer noopener"
+        target="_blank"
+        className="card-header-action"
+      >
+        <small className="text-body-secondary">{text || 'docs'}</small>
+      </CLink>
+    </div>
+  )
+}
+
+DocsLink.propTypes = {
+  href: PropTypes.string,
+  name: PropTypes.string,
+  text: PropTypes.string,
+}
+
+export default React.memo(DocsLink)
Index: PlanningMamagement/frontend/src/components/header/AppHeaderDropdown.js
===================================================================
diff --git a/PlanningMamagement/frontend/src/components/header/AppHeaderDropdown.js b/PlanningMamagement/frontend/src/components/header/AppHeaderDropdown.js
new file mode 100644
--- /dev/null	(date 1728391641653)
+++ b/PlanningMamagement/frontend/src/components/header/AppHeaderDropdown.js	(date 1728391641653)
@@ -0,0 +1,96 @@
+import React from 'react'
+import {
+  CAvatar,
+  CBadge,
+  CDropdown,
+  CDropdownDivider,
+  CDropdownHeader,
+  CDropdownItem,
+  CDropdownMenu,
+  CDropdownToggle,
+} from '@coreui/react'
+import {
+  cilBell,
+  cilCreditCard,
+  cilCommentSquare,
+  cilEnvelopeOpen,
+  cilFile,
+  cilLockLocked,
+  cilSettings,
+  cilTask,
+  cilUser,
+} from '@coreui/icons'
+import CIcon from '@coreui/icons-react'
+
+import avatar8 from './../../assets/images/avatars/8.jpg'
+
+const AppHeaderDropdown = () => {
+  return (
+    <CDropdown variant="nav-item">
+      <CDropdownToggle placement="bottom-end" className="py-0 pe-0" caret={false}>
+        <CAvatar src={avatar8} size="md" />
+      </CDropdownToggle>
+      <CDropdownMenu className="pt-0" placement="bottom-end">
+        <CDropdownHeader className="bg-body-secondary fw-semibold mb-2">Account</CDropdownHeader>
+        <CDropdownItem href="#">
+          <CIcon icon={cilBell} className="me-2" />
+          Updates
+          <CBadge color="info" className="ms-2">
+            42
+          </CBadge>
+        </CDropdownItem>
+        <CDropdownItem href="#">
+          <CIcon icon={cilEnvelopeOpen} className="me-2" />
+          Messages
+          <CBadge color="success" className="ms-2">
+            42
+          </CBadge>
+        </CDropdownItem>
+        <CDropdownItem href="#">
+          <CIcon icon={cilTask} className="me-2" />
+          Tasks
+          <CBadge color="danger" className="ms-2">
+            42
+          </CBadge>
+        </CDropdownItem>
+        <CDropdownItem href="#">
+          <CIcon icon={cilCommentSquare} className="me-2" />
+          Comments
+          <CBadge color="warning" className="ms-2">
+            42
+          </CBadge>
+        </CDropdownItem>
+        <CDropdownHeader className="bg-body-secondary fw-semibold my-2">Settings</CDropdownHeader>
+        <CDropdownItem href="#">
+          <CIcon icon={cilUser} className="me-2" />
+          Profile
+        </CDropdownItem>
+        <CDropdownItem href="#">
+          <CIcon icon={cilSettings} className="me-2" />
+          Settings
+        </CDropdownItem>
+        <CDropdownItem href="#">
+          <CIcon icon={cilCreditCard} className="me-2" />
+          Payments
+          <CBadge color="secondary" className="ms-2">
+            42
+          </CBadge>
+        </CDropdownItem>
+        <CDropdownItem href="#">
+          <CIcon icon={cilFile} className="me-2" />
+          Projects
+          <CBadge color="primary" className="ms-2">
+            42
+          </CBadge>
+        </CDropdownItem>
+        <CDropdownDivider />
+        <CDropdownItem href="#">
+          <CIcon icon={cilLockLocked} className="me-2" />
+          Lock Account
+        </CDropdownItem>
+      </CDropdownMenu>
+    </CDropdown>
+  )
+}
+
+export default AppHeaderDropdown
Index: PlanningMamagement/frontend/src/components/index.js
===================================================================
diff --git a/PlanningMamagement/frontend/src/components/index.js b/PlanningMamagement/frontend/src/components/index.js
new file mode 100644
--- /dev/null	(date 1728391641639)
+++ b/PlanningMamagement/frontend/src/components/index.js	(date 1728391641639)
@@ -0,0 +1,21 @@
+import AppBreadcrumb from './AppBreadcrumb'
+import AppContent from './AppContent'
+import AppFooter from './AppFooter'
+import AppHeader from './AppHeader'
+import AppHeaderDropdown from './header/AppHeaderDropdown'
+import AppSidebar from './AppSidebar'
+import DocsCallout from './DocsCallout'
+import DocsLink from './DocsLink'
+import DocsExample from './DocsExample'
+
+export {
+  AppBreadcrumb,
+  AppContent,
+  AppFooter,
+  AppHeader,
+  AppHeaderDropdown,
+  AppSidebar,
+  DocsCallout,
+  DocsLink,
+  DocsExample,
+}
Index: PlanningMamagement/frontend/src/scss/examples.scss
===================================================================
diff --git a/PlanningMamagement/frontend/src/scss/examples.scss b/PlanningMamagement/frontend/src/scss/examples.scss
new file mode 100644
--- /dev/null	(date 1728391641721)
+++ b/PlanningMamagement/frontend/src/scss/examples.scss	(date 1728391641721)
@@ -0,0 +1,116 @@
+/* stylelint-disable declaration-no-important, scss/selector-no-redundant-nesting-selector */
+$enable-deprecation-messages: false; /* stylelint-disable-line scss/dollar-variable-default */
+
+@import "@coreui/coreui/scss/functions";
+@import "@coreui/coreui/scss/variables";
+@import "@coreui/coreui/scss/mixins";
+
+.example {
+  &:not(:first-child) {
+    margin-top: 1.5rem;
+  }
+
+  .tab-content {
+    background-color: var(--#{$prefix}tertiary-bg);
+  }
+
+  & + p {
+    margin-top: 1.5rem;
+  }
+
+  // Components examples
+  .preview {
+    + p {
+      margin-top: 2rem;
+    }
+
+    > .form-control {
+      + .form-control {
+        margin-top: .5rem;
+      }
+    }
+
+    > .nav + .nav,
+    > .alert + .alert,
+    > .navbar + .navbar,
+    > .progress + .progress {
+      margin-top: 1rem;
+    }
+
+    > .dropdown-menu {
+      position: static;
+      display: block;
+    }
+
+    > :last-child {
+      margin-bottom: 0;
+    }
+
+    // Images
+    > svg + svg,
+    > img + img {
+      margin-left: .5rem;
+    }
+
+    // Buttons
+    > .btn,
+    > .btn-group {
+      margin: .25rem .125rem;
+    }
+    > .btn-toolbar + .btn-toolbar {
+      margin-top: .5rem;
+    }
+
+    // List groups
+    > .list-group {
+      max-width: 400px;
+    }
+
+    > [class*="list-group-horizontal"] {
+      max-width: 100%;
+    }
+
+    // Navbars
+    .fixed-top,
+    .sticky-top {
+      position: static;
+      margin: -1rem -1rem 1rem;
+    }
+
+    .fixed-bottom {
+      position: static;
+      margin: 1rem -1rem -1rem;
+    }
+
+    @include media-breakpoint-up(sm) {
+      .fixed-top,
+      .sticky-top {
+        margin: -1.5rem -1.5rem 1rem;
+      }
+      .fixed-bottom {
+        margin: 1rem -1.5rem -1.5rem;
+      }
+    }
+
+    // Pagination
+    .pagination {
+      margin-top: .5rem;
+      margin-bottom: .5rem;
+    }
+
+    .docs-example-modal {
+      .modal {
+        position: static;
+        display: block;
+      }
+    }
+  }
+}
+
+@if $enable-dark-mode {
+  @include color-mode(dark) {
+    .example .tab-content {
+      background-color: var(--#{$prefix}secondary-bg) !important;
+    }
+  }
+}
Index: PlanningMamagement/frontend/src/components/header/index.js
===================================================================
diff --git a/PlanningMamagement/frontend/src/components/header/index.js b/PlanningMamagement/frontend/src/components/header/index.js
new file mode 100644
--- /dev/null	(date 1728391641664)
+++ b/PlanningMamagement/frontend/src/components/header/index.js	(date 1728391641664)
@@ -0,0 +1,3 @@
+import AppHeaderDropdown from './AppHeaderDropdown'
+
+export { AppHeaderDropdown }
Index: PlanningMamagement/frontend/src/scss/style.scss
===================================================================
diff --git a/PlanningMamagement/frontend/src/scss/style.scss b/PlanningMamagement/frontend/src/scss/style.scss
new file mode 100644
--- /dev/null	(date 1728391641731)
+++ b/PlanningMamagement/frontend/src/scss/style.scss	(date 1728391641731)
@@ -0,0 +1,15 @@
+// If you want to override variables do it here
+@import "variables";
+
+// Import styles
+@import "@coreui/coreui/scss/coreui";
+@import "@coreui/chartjs/scss/coreui-chartjs";
+
+// Vendors
+@import "vendors/simplebar";
+
+// Custom styles for this theme
+@import "theme";
+
+// If you want to add custom CSS you can put it here
+@import "custom";
Index: PlanningMamagement/frontend/src/scss/_theme.scss
===================================================================
diff --git a/PlanningMamagement/frontend/src/scss/_theme.scss b/PlanningMamagement/frontend/src/scss/_theme.scss
new file mode 100644
--- /dev/null	(date 1728391641701)
+++ b/PlanningMamagement/frontend/src/scss/_theme.scss	(date 1728391641701)
@@ -0,0 +1,64 @@
+body {
+  background-color: var(--cui-tertiary-bg);
+}
+
+.wrapper {
+  width: 100%;
+  @include ltr-rtl("padding-left", var(--cui-sidebar-occupy-start, 0));
+  @include ltr-rtl("padding-right", var(--cui-sidebar-occupy-end, 0));
+  will-change: auto;
+  @include transition(padding .15s);
+}
+
+.header > .container-fluid,
+.sidebar-header {
+  min-height: calc(4rem + 1px); // stylelint-disable-line function-disallowed-list
+}
+
+.sidebar-brand-full {
+  margin-left: 3px;
+}
+
+.sidebar-header {
+  .nav-underline-border {
+    --cui-nav-underline-border-link-padding-x: 1rem;
+    --cui-nav-underline-border-gap: 0;
+  }
+
+  .nav-link {
+    display: flex;
+    align-items: center;
+    min-height: calc(4rem + 1px); // stylelint-disable-line function-disallowed-list
+  }
+}
+
+.sidebar-toggler {
+  @include ltr-rtl("margin-left", auto);
+}
+
+.sidebar-narrow,
+.sidebar-narrow-unfoldable:not(:hover) {
+  .sidebar-toggler {
+    @include ltr-rtl("margin-right", auto);
+  }
+}
+
+.header > .container-fluid + .container-fluid {
+  min-height: 3rem;
+}
+
+.footer {
+  min-height: calc(3rem + 1px); // stylelint-disable-line function-disallowed-list
+}
+
+@if $enable-dark-mode {
+  @include color-mode(dark) {
+    body {
+      background-color: var(--cui-dark-bg-subtle);
+    }
+
+    .footer {
+      --cui-footer-bg: var(--cui-body-bg);
+    }
+  }
+}
Index: PlanningMamagement/frontend/src/scss/_custom.scss
===================================================================
diff --git a/PlanningMamagement/frontend/src/scss/_custom.scss b/PlanningMamagement/frontend/src/scss/_custom.scss
new file mode 100644
--- /dev/null	(date 1728391641691)
+++ b/PlanningMamagement/frontend/src/scss/_custom.scss	(date 1728391641691)
@@ -0,0 +1,1 @@
+// Here you can add other styles
Index: PlanningMamagement/frontend/src/scss/vendors/simplebar.scss
===================================================================
diff --git a/PlanningMamagement/frontend/src/scss/vendors/simplebar.scss b/PlanningMamagement/frontend/src/scss/vendors/simplebar.scss
new file mode 100644
--- /dev/null	(date 1728391641743)
+++ b/PlanningMamagement/frontend/src/scss/vendors/simplebar.scss	(date 1728391641743)
@@ -0,0 +1,5 @@
+.simplebar-content {
+  display: flex;
+  flex-direction: column;
+  min-height: 100%;
+}
Index: PlanningMamagement/frontend/src/scss/_variables.scss
===================================================================
diff --git a/PlanningMamagement/frontend/src/scss/_variables.scss b/PlanningMamagement/frontend/src/scss/_variables.scss
new file mode 100644
--- /dev/null	(date 1728391641711)
+++ b/PlanningMamagement/frontend/src/scss/_variables.scss	(date 1728391641711)
@@ -0,0 +1,5 @@
+// Variable overrides
+//
+// If you want to customize your project please add your variables below.
+
+$enable-deprecation-messages: false !default;
Index: PlanningMamagement/frontend/src/layout/DefaultLayout.js
===================================================================
diff --git a/PlanningMamagement/frontend/src/layout/DefaultLayout.js b/PlanningMamagement/frontend/src/layout/DefaultLayout.js
new file mode 100644
--- /dev/null	(date 1728391641677)
+++ b/PlanningMamagement/frontend/src/layout/DefaultLayout.js	(date 1728391641677)
@@ -0,0 +1,19 @@
+import React from 'react'
+import { AppContent, AppSidebar, AppFooter, AppHeader } from '../components/index'
+
+const DefaultLayout = () => {
+  return (
+    <div>
+      <AppSidebar />
+      <div className="wrapper d-flex flex-column min-vh-100">
+        <AppHeader />
+        <div className="body flex-grow-1">
+          <AppContent />
+        </div>
+        <AppFooter />
+      </div>
+    </div>
+  )
+}
+
+export default DefaultLayout
Index: PlanningMamagement/frontend/src/assets/brand/logo.js
===================================================================
diff --git a/PlanningMamagement/frontend/src/assets/brand/logo.js b/PlanningMamagement/frontend/src/assets/brand/logo.js
new file mode 100644
--- /dev/null	(date 1728391641382)
+++ b/PlanningMamagement/frontend/src/assets/brand/logo.js	(date 1728391641382)
@@ -0,0 +1,18 @@
+export const logo = [
+  '599 116',
+  `<g>
+    <g fill="none" fill-rule="nonzero">
+      <g style="fill:#80d0ff;">
+        <path d="m358.773 79.151-8.768-20.736a.25.25 0 0 0-.255-.191h-9.985a.226.226 0 0 0-.256.255v20.543a.566.566 0 0 1-.64.641h-1.216a.565.565 0 0 1-.64-.64v-43.52a.566.566 0 0 1 .64-.64h12.544a9.979 9.979 0 0 1 7.744 3.23 12.204 12.204 0 0 1 2.944 8.546 12.439 12.439 0 0 1-2.24 7.584 9.37 9.37 0 0 1-6.08 3.744c-.17.086-.214.191-.127.32l8.704 20.608.064.255c0 .342-.192.512-.576.512h-1.152a.703.703 0 0 1-.705-.51Zm-19.264-41.793v18.496a.226.226 0 0 0 .256.257h10.304a7.669 7.669 0 0 0 6.017-2.592 9.878 9.878 0 0 0 2.303-6.816 10.286 10.286 0 0 0-2.272-6.976 7.601 7.601 0 0 0-6.048-2.624h-10.304a.226.226 0 0 0-.256.255ZM398.082 37.102H378.05a.226.226 0 0 0-.256.256v18.496a.226.226 0 0 0 .256.257h13.824a.566.566 0 0 1 .64.64v.96a.566.566 0 0 1-.64.64H378.05a.226.226 0 0 0-.256.256v18.56a.226.226 0 0 0 .256.256h20.032a.567.567 0 0 1 .64.64v.96a.566.566 0 0 1-.64.64h-22.144a.566.566 0 0 1-.64-.64v-43.52a.566.566 0 0 1 .64-.64h22.144a.566.566 0 0 1 .64.64v.96a.566.566 0 0 1-.64.64ZM435.802 79.151l-2.431-8.832a.296.296 0 0 0-.32-.192h-16.768a.295.295 0 0 0-.32.192l-2.368 8.768a.658.658 0 0 1-.704.576h-1.216a.588.588 0 0 1-.48-.191.582.582 0 0 1-.096-.513l12.031-43.584a.644.644 0 0 1 .704-.512h1.6a.644.644 0 0 1 .704.512l12.16 43.584.065.192c0 .342-.214.512-.64.512h-1.217a.643.643 0 0 1-.704-.512ZM416.7 67.92a.303.303 0 0 0 .223.096h15.489a.304.304 0 0 0 .223-.096c.065-.065.075-.117.033-.16l-7.873-28.928c-.043-.085-.085-.128-.127-.128-.042 0-.086.043-.128.128l-7.872 28.928c-.043.043-.033.095.032.16ZM453.357 76.911a11.637 11.637 0 0 1-3.328-8.704V46.19a11.414 11.414 0 0 1 3.36-8.575 12.09 12.09 0 0 1 8.8-3.265 12.253 12.253 0 0 1 8.865 3.233 11.39 11.39 0 0 1 3.36 8.607v.64a.566.566 0 0 1-.641.641l-1.28.064c-.427 0-.64-.192-.64-.576v-.833a9.287 9.287 0 0 0-2.656-6.912 10.67 10.67 0 0 0-14.016 0 9.284 9.284 0 0 0-2.656 6.913v22.272a9.282 9.282 0 0 0 2.656 6.912 10.673 10.673 0 0 0 14.016 0 9.286 9.286 0 0 0 2.656-6.912v-.768c0-.384.213-.576.64-.575l1.28.063a.566.566 0 0 1 .64.64v.511a11.498 11.498 0 0 1-3.36 8.64 13.626 13.626 0 0 1-17.696 0v.001ZM511.193 35.503v.96a.565.565 0 0 1-.64.64H499.8a.226.226 0 0 0-.256.256v41.663a.566.566 0 0 1-.64.641h-1.216a.565.565 0 0 1-.64-.64V37.357a.227.227 0 0 0-.256-.255h-10.176a.565.565 0 0 1-.64-.64v-.96a.566.566 0 0 1 .64-.64h23.936a.566.566 0 0 1 .64.64ZM518.822 78.51a2.835 2.835 0 0 1-.8-2.047 2.923 2.923 0 0 1 .8-2.112c.544-.56 1.3-.862 2.08-.832a2.847 2.847 0 0 1 2.944 2.944c.03.78-.273 1.536-.832 2.08a2.921 2.921 0 0 1-2.112.8 2.754 2.754 0 0 1-2.08-.832ZM539.16 77.007a11.31 11.31 0 0 1-3.2-8.416v-5.44a.566.566 0 0 1 .64-.64h1.217a.567.567 0 0 1 .64.64v5.504a9.144 9.144 0 0 0 2.528 6.72 8.974 8.974 0 0 0 6.687 2.56 8.79 8.79 0 0 0 9.28-9.28V35.504a.565.565 0 0 1 .64-.64h1.217a.566.566 0 0 1 .64.64V68.59a11.252 11.252 0 0 1-3.233 8.416 13.062 13.062 0 0 1-17.055 0ZM577.106 77.102a10.482 10.482 0 0 1-3.36-8.127v-1.792a.565.565 0 0 1 .64-.64h1.088a.566.566 0 0 1 .64.64v1.6a8.544 8.544 0 0 0 2.752 6.655 10.536 10.536 0 0 0 7.36 2.496 9.876 9.876 0 0 0 6.976-2.367 8.215 8.215 0 0 0 2.56-6.336 8.397 8.397 0 0 0-1.12-4.416 11.383 11.383 0 0 0-3.328-3.392 71.626 71.626 0 0 0-6.176-3.712 71.302 71.302 0 0 1-6.24-3.84 12.174 12.174 0 0 1-3.424-3.68 10.257 10.257 0 0 1-1.28-5.345 9.86 9.86 0 0 1 3.072-7.744 12.012 12.012 0 0 1 8.32-2.752c3.796 0 6.783 1.035 8.96 3.105a10.823 10.823 0 0 1 3.264 8.224v1.6a.566.566 0 0 1-.64.64h-1.152a.565.565 0 0 1-.64-.64v-1.471a8.865 8.865 0 0 0-2.624-6.689 9.994 9.994 0 0 0-7.232-2.528 9.365 9.365 0 0 0-6.528 2.144 7.822 7.822 0 0 0-2.368 6.112 7.8 7.8 0 0 0 1.024 4.16 10.376 10.376 0 0 0 3.008 3.04 62.829 62.829 0 0 0 5.952 3.488 71.058 71.058 0 0 1 6.72 4.256 13.454 13.454 0 0 1 3.648 3.936 10.049 10.049 0 0 1 1.28 5.184 10.714 10.714 0 0 1-3.264 8.191c-2.175 2.05-5.12 3.073-8.832 3.073-3.798 0-6.817-1.024-9.057-3.073Z"/>
+      </g>
+      <g style="fill:currentColor;">
+        <path d="m96.59 25.058-39-22.517a12 12 0 0 0-12 0l-39 22.517a12.034 12.034 0 0 0-6 10.392v45.033a12.033 12.033 0 0 0 6 10.393l39 22.516a12 12 0 0 0 12 0l39-22.516a12.033 12.033 0 0 0 6-10.393V35.45a12.034 12.034 0 0 0-6-10.392Zm-2 55.425a4 4 0 0 1-2 3.464l-39 22.517a4 4 0 0 1-4 0l-39-22.517a4 4 0 0 1-2-3.464V35.45a4 4 0 0 1 2-3.464l39-22.517a4 4 0 0 1 4 0l39 22.517a4 4 0 0 1 2 3.464v45.033Z"/>
+        <path d="M74.612 71.005h-2.866c-.673 0-1.335.17-1.925.493l-17.28 9.485L32.59 69.465V46.487L52.54 34.97l17.29 9.455a4 4 0 0 0 1.919.49h2.863a2 2 0 0 0 2-2v-2.712a2 2 0 0 0-1.04-1.754L56.383 27.952a8.039 8.039 0 0 0-7.842.09L28.59 39.56a8.025 8.025 0 0 0-4 6.929v22.976a8 8 0 0 0 4 6.928l19.95 11.519a8.043 8.043 0 0 0 7.843.087l19.19-10.53a2 2 0 0 0 1.038-1.754v-2.71a2 2 0 0 0-1.999-2Z"/>
+        <g transform="translate(118 34)">
+          <path d="M51.335.362c-8.28.009-14.99 6.719-15 15v17.277c0 8.284 6.716 15 15 15 8.284 0 15-6.716 15-15V15.36c-.01-8.28-6.72-14.99-15-15Zm7 32.277a7 7 0 0 1-14 0V15.36a7 7 0 0 1 14 0V32.64ZM14.67 8.421a7.01 7.01 0 0 1 7.867 6.075.99.99 0 0 0 .985.865h6.03a1.01 1.01 0 0 0 .998-1.097C29.945 6.14 22.971-.02 14.834.381 6.751.932.504 7.696.59 15.796v16.407C.503 40.305 6.752 47.068 14.835 47.62c8.137.401 15.11-5.76 15.716-13.884a1.01 1.01 0 0 0-.999-1.097h-6.03a.99.99 0 0 0-.984.865 7.01 7.01 0 0 1-7.868 6.075 7.164 7.164 0 0 1-6.08-7.184v-16.79a7.164 7.164 0 0 1 6.08-7.184ZM97.513 27.928a12.158 12.158 0 0 0 7.184-11.077v-3.702C104.697 6.44 99.257 1 92.547 1H75.59a1 1 0 0 0-1 1v44a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V29h6.621l7.916 17.414a1 1 0 0 0 .91.586h6.591a1 1 0 0 0 .91-1.414l-8.025-17.658Zm-.816-11.077A4.154 4.154 0 0 1 92.547 21h-9.85V9h9.85a4.154 4.154 0 0 1 4.15 4.15v3.7ZM139.59 1h-26a1 1 0 0 0-1 1v44a1 1 0 0 0 1 1h26a1 1 0 0 0 1-1v-6a1 1 0 0 0-1-1h-19V27h13a1 1 0 0 0 1-1v-6a1 1 0 0 0-1-1h-13V9h19a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1ZM177.59 1h-6a1 1 0 0 0-1 1v22.648a7.007 7.007 0 1 1-14 0V2a1 1 0 0 0-1-1h-6a1 1 0 0 0-1 1v22.648a15.003 15.003 0 1 0 30 0V2a1 1 0 0 0-1-1Z"/>
+          <rect width="8" height="38" x="186.59" y="1" rx="1"/>
+        </g>
+      </g>
+    </g>
+  </g>`,
+]
Index: PlanningMamagement/frontend/src/assets/brand/sygnet.js
===================================================================
diff --git a/PlanningMamagement/frontend/src/assets/brand/sygnet.js b/PlanningMamagement/frontend/src/assets/brand/sygnet.js
new file mode 100644
--- /dev/null	(date 1728391641392)
+++ b/PlanningMamagement/frontend/src/assets/brand/sygnet.js	(date 1728391641392)
@@ -0,0 +1,7 @@
+export const sygnet = [
+  '102 115',
+  `<g style="fill: currentColor">
+    <path d="M96 24.124 57 1.608a12 12 0 0 0-12 0L6 24.124a12.034 12.034 0 0 0-6 10.393V79.55a12.033 12.033 0 0 0 6 10.392l39 22.517a12 12 0 0 0 12 0l39-22.517a12.033 12.033 0 0 0 6-10.392V34.517a12.034 12.034 0 0 0-6-10.393ZM94 79.55a4 4 0 0 1-2 3.464l-39 22.517a4 4 0 0 1-4 0L10 83.014a4 4 0 0 1-2-3.464V34.517a4 4 0 0 1 2-3.464L49 8.536a4 4 0 0 1 4 0l39 22.517a4 4 0 0 1 2 3.464V79.55Z"/>
+    <path d="M74.022 70.071h-2.866a4 4 0 0 0-1.925.494L51.95 80.05 32 68.531V45.554l19.95-11.519 17.29 9.455a4 4 0 0 0 1.919.49h2.863a2 2 0 0 0 2-2v-2.71a2 2 0 0 0-1.04-1.756L55.793 27.02a8.04 8.04 0 0 0-7.843.09L28 38.626a8.025 8.025 0 0 0-4 6.929V68.53a8 8 0 0 0 4 6.928l19.95 11.519a8.043 8.043 0 0 0 7.843.088l19.19-10.532a2 2 0 0 0 1.038-1.753v-2.71a2 2 0 0 0-2-2Z"/>
+  </g>`,
+]
Index: PlanningMamagement/frontend/src/views/base/index.js
===================================================================
diff --git a/PlanningMamagement/frontend/src/views/base/index.js b/PlanningMamagement/frontend/src/views/base/index.js
new file mode 100644
--- /dev/null	(date 1728391641760)
+++ b/PlanningMamagement/frontend/src/views/base/index.js	(date 1728391641760)
@@ -0,0 +1,31 @@
+import Breadcrumbs from './Breadcrumbs'
+import Cards from './Cards'
+import Carousels from './Carousels'
+import Collapses from './Collapses'
+import Dropdowns from './Dropdowns'
+import Jumbotrons from './Jumbotrons'
+import ListGroups from './ListGroups'
+import Navbars from './Navbars'
+import Navs from './Navs'
+import Paginations from './Paginations'
+import Popovers from './Popovers'
+import ProgressBar from './ProgressBar'
+import Tabs from './Tabs'
+import Tooltips from './Tooltips'
+
+export {
+  Breadcrumbs,
+  Cards,
+  Carousels,
+  Collapses,
+  Dropdowns,
+  Jumbotrons,
+  ListGroups,
+  Navbars,
+  Navs,
+  Popovers,
+  ProgressBar,
+  Tabs,
+  Tooltips,
+  Paginations,
+}
