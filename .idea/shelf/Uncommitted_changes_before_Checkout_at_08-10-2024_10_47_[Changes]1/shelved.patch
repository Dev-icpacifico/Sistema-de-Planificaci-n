Index: PlanningMamagement/frontend/src/views/icons/index.js
===================================================================
diff --git a/PlanningMamagement/frontend/src/views/icons/index.js b/PlanningMamagement/frontend/src/views/icons/index.js
new file mode 100644
--- /dev/null	(date 1728391642261)
+++ b/PlanningMamagement/frontend/src/views/icons/index.js	(date 1728391642261)
@@ -0,0 +1,5 @@
+import CoreUIIcons from './coreui-icons'
+import Flags from './flags'
+import Brands from './brands'
+
+export { CoreUIIcons, Flags, Brands }
Index: PlanningMamagement/frontend/src/views/charts/Charts.js
===================================================================
diff --git a/PlanningMamagement/frontend/src/views/charts/Charts.js b/PlanningMamagement/frontend/src/views/charts/Charts.js
new file mode 100644
--- /dev/null	(date 1728391642091)
+++ b/PlanningMamagement/frontend/src/views/charts/Charts.js	(date 1728391642091)
@@ -0,0 +1,176 @@
+import React from 'react'
+import { CCard, CCardBody, CCol, CCardHeader, CRow } from '@coreui/react'
+import {
+  CChartBar,
+  CChartDoughnut,
+  CChartLine,
+  CChartPie,
+  CChartPolarArea,
+  CChartRadar,
+} from '@coreui/react-chartjs'
+import { DocsCallout } from 'src/components'
+
+const Charts = () => {
+  const random = () => Math.round(Math.random() * 100)
+
+  return (
+    <CRow>
+      <CCol xs={12}>
+        <DocsCallout
+          name="Chart"
+          href="components/chart"
+          content="React wrapper component for Chart.js 3.0, the most popular charting library."
+        />
+      </CCol>
+      <CCol xs={6}>
+        <CCard className="mb-4">
+          <CCardHeader>Bar Chart</CCardHeader>
+          <CCardBody>
+            <CChartBar
+              data={{
+                labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],
+                datasets: [
+                  {
+                    label: 'GitHub Commits',
+                    backgroundColor: '#f87979',
+                    data: [40, 20, 12, 39, 10, 40, 39, 80, 40],
+                  },
+                ],
+              }}
+              labels="months"
+            />
+          </CCardBody>
+        </CCard>
+      </CCol>
+      <CCol xs={6}>
+        <CCard className="mb-4">
+          <CCardHeader>Line Chart</CCardHeader>
+          <CCardBody>
+            <CChartLine
+              data={{
+                labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],
+                datasets: [
+                  {
+                    label: 'My First dataset',
+                    backgroundColor: 'rgba(220, 220, 220, 0.2)',
+                    borderColor: 'rgba(220, 220, 220, 1)',
+                    pointBackgroundColor: 'rgba(220, 220, 220, 1)',
+                    pointBorderColor: '#fff',
+                    data: [random(), random(), random(), random(), random(), random(), random()],
+                  },
+                  {
+                    label: 'My Second dataset',
+                    backgroundColor: 'rgba(151, 187, 205, 0.2)',
+                    borderColor: 'rgba(151, 187, 205, 1)',
+                    pointBackgroundColor: 'rgba(151, 187, 205, 1)',
+                    pointBorderColor: '#fff',
+                    data: [random(), random(), random(), random(), random(), random(), random()],
+                  },
+                ],
+              }}
+            />
+          </CCardBody>
+        </CCard>
+      </CCol>
+      <CCol xs={6}>
+        <CCard className="mb-4">
+          <CCardHeader>Doughnut Chart</CCardHeader>
+          <CCardBody>
+            <CChartDoughnut
+              data={{
+                labels: ['VueJs', 'EmberJs', 'ReactJs', 'AngularJs'],
+                datasets: [
+                  {
+                    backgroundColor: ['#41B883', '#E46651', '#00D8FF', '#DD1B16'],
+                    data: [40, 20, 80, 10],
+                  },
+                ],
+              }}
+            />
+          </CCardBody>
+        </CCard>
+      </CCol>
+      <CCol xs={6}>
+        <CCard className="mb-4">
+          <CCardHeader>Pie Chart</CCardHeader>
+          <CCardBody>
+            <CChartPie
+              data={{
+                labels: ['Red', 'Green', 'Yellow'],
+                datasets: [
+                  {
+                    data: [300, 50, 100],
+                    backgroundColor: ['#FF6384', '#36A2EB', '#FFCE56'],
+                    hoverBackgroundColor: ['#FF6384', '#36A2EB', '#FFCE56'],
+                  },
+                ],
+              }}
+            />
+          </CCardBody>
+        </CCard>
+      </CCol>
+      <CCol xs={6}>
+        <CCard className="mb-4">
+          <CCardHeader>Polar Area Chart</CCardHeader>
+          <CCardBody>
+            <CChartPolarArea
+              data={{
+                labels: ['Red', 'Green', 'Yellow', 'Grey', 'Blue'],
+                datasets: [
+                  {
+                    data: [11, 16, 7, 3, 14],
+                    backgroundColor: ['#FF6384', '#4BC0C0', '#FFCE56', '#E7E9ED', '#36A2EB'],
+                  },
+                ],
+              }}
+            />
+          </CCardBody>
+        </CCard>
+      </CCol>
+      <CCol xs={6}>
+        <CCard className="mb-4">
+          <CCardHeader>Radar Chart</CCardHeader>
+          <CCardBody>
+            <CChartRadar
+              data={{
+                labels: [
+                  'Eating',
+                  'Drinking',
+                  'Sleeping',
+                  'Designing',
+                  'Coding',
+                  'Cycling',
+                  'Running',
+                ],
+                datasets: [
+                  {
+                    label: 'My First dataset',
+                    backgroundColor: 'rgba(220, 220, 220, 0.2)',
+                    borderColor: 'rgba(220, 220, 220, 1)',
+                    pointBackgroundColor: 'rgba(220, 220, 220, 1)',
+                    pointBorderColor: '#fff',
+                    pointHighlightFill: '#fff',
+                    pointHighlightStroke: 'rgba(220, 220, 220, 1)',
+                    data: [65, 59, 90, 81, 56, 55, 40],
+                  },
+                  {
+                    label: 'My Second dataset',
+                    backgroundColor: 'rgba(151, 187, 205, 0.2)',
+                    borderColor: 'rgba(151, 187, 205, 1)',
+                    pointBackgroundColor: 'rgba(151, 187, 205, 1)',
+                    pointBorderColor: '#fff',
+                    pointHighlightFill: '#fff',
+                    pointHighlightStroke: 'rgba(151, 187, 205, 1)',
+                    data: [28, 48, 40, 19, 96, 27, 100],
+                  },
+                ],
+              }}
+            />
+          </CCardBody>
+        </CCard>
+      </CCol>
+    </CRow>
+  )
+}
+
+export default Charts
Index: PlanningMamagement/frontend/package.json
===================================================================
diff --git a/PlanningMamagement/frontend/package.json b/PlanningMamagement/frontend/package.json
new file mode 100644
--- /dev/null	(date 1728391641165)
+++ b/PlanningMamagement/frontend/package.json	(date 1728391641165)
@@ -0,0 +1,54 @@
+{
+  "name": "@coreui/coreui-free-react-admin-template",
+  "version": "5.2.0",
+  "description": "CoreUI Free React Admin Template",
+  "homepage": ".",
+  "bugs": {
+    "url": "https://github.com/coreui/coreui-free-react-admin-template/issues"
+  },
+  "repository": {
+    "type": "git",
+    "url": "git@github.com:coreui/coreui-free-react-admin-template.git"
+  },
+  "license": "MIT",
+  "author": "The CoreUI Team (https://github.com/orgs/coreui/people)",
+  "scripts": {
+    "build": "vite build",
+    "lint": "eslint \"src/**/*.js\"",
+    "serve": "vite preview",
+    "start": "vite"
+  },
+  "dependencies": {
+    "@coreui/chartjs": "^4.0.0",
+    "@coreui/coreui": "^5.1.2",
+    "@coreui/icons": "^3.0.1",
+    "@coreui/icons-react": "^2.3.0",
+    "@coreui/react": "^5.4.0",
+    "@coreui/react-chartjs": "^3.0.0",
+    "@coreui/utils": "^2.0.2",
+    "@popperjs/core": "^2.11.8",
+    "chart.js": "^4.4.4",
+    "classnames": "^2.5.1",
+    "core-js": "^3.38.1",
+    "prop-types": "^15.8.1",
+    "react": "^18.3.1",
+    "react-dom": "^18.3.1",
+    "react-redux": "^9.1.2",
+    "react-router-dom": "^6.26.2",
+    "redux": "5.0.1",
+    "simplebar-react": "^3.2.6"
+  },
+  "devDependencies": {
+    "@vitejs/plugin-react": "^4.3.1",
+    "autoprefixer": "^10.4.20",
+    "eslint": "^8.57.0",
+    "eslint-config-prettier": "^9.1.0",
+    "eslint-plugin-prettier": "^5.2.1",
+    "eslint-plugin-react": "^7.36.1",
+    "eslint-plugin-react-hooks": "^4.6.2",
+    "postcss": "^8.4.47",
+    "prettier": "3.3.3",
+    "sass": "^1.79.3",
+    "vite": "^5.4.8"
+  }
+}
Index: PlanningMamagement/frontend/src/views/widgets/Widgets.js
===================================================================
diff --git a/PlanningMamagement/frontend/src/views/widgets/Widgets.js b/PlanningMamagement/frontend/src/views/widgets/Widgets.js
new file mode 100644
--- /dev/null	(date 1728391642496)
+++ b/PlanningMamagement/frontend/src/views/widgets/Widgets.js	(date 1728391642496)
@@ -0,0 +1,898 @@
+import React from 'react'
+import {
+  CCard,
+  CCardBody,
+  CCardGroup,
+  CCardHeader,
+  CCol,
+  CLink,
+  CRow,
+  CWidgetStatsB,
+  CWidgetStatsC,
+  CWidgetStatsE,
+  CWidgetStatsF,
+} from '@coreui/react'
+import { getStyle } from '@coreui/utils'
+import CIcon from '@coreui/icons-react'
+import {
+  cilArrowRight,
+  cilBasket,
+  cilBell,
+  cilChartPie,
+  cilMoon,
+  cilLaptop,
+  cilPeople,
+  cilSettings,
+  cilSpeech,
+  cilSpeedometer,
+  cilUser,
+  cilUserFollow,
+} from '@coreui/icons'
+import { CChartBar, CChartLine } from '@coreui/react-chartjs'
+import { DocsExample } from 'src/components'
+
+import WidgetsBrand from './WidgetsBrand'
+import WidgetsDropdown from './WidgetsDropdown'
+
+const Widgets = () => {
+  const random = (min, max) => Math.floor(Math.random() * (max - min + 1) + min)
+
+  return (
+    <CCard className="mb-4">
+      <CCardHeader>Widgets</CCardHeader>
+      <CCardBody>
+        <DocsExample href="components/widgets/#cwidgetstatsa">
+          <WidgetsDropdown />
+        </DocsExample>
+        <DocsExample href="components/widgets/#cwidgetstatsb">
+          <CRow xs={{ gutter: 4 }}>
+            <CCol xs={12} sm={6} xl={4} xxl={3}>
+              <CWidgetStatsB
+                progress={{ color: 'success', value: 89.9 }}
+                text="Lorem ipsum dolor sit amet enim."
+                title="Widget title"
+                value="89.9%"
+              />
+            </CCol>
+            <CCol xs={12} sm={6} xl={4} xxl={3}>
+              <CWidgetStatsB
+                value="12.124"
+                title="Widget title"
+                progress={{ color: 'info', value: 89.9 }}
+                text="Lorem ipsum dolor sit amet enim."
+              />
+            </CCol>
+            <CCol xs={12} sm={6} xl={4} xxl={3}>
+              <CWidgetStatsB
+                value="$98.111,00"
+                title="Widget title"
+                progress={{ color: 'warning', value: 89.9 }}
+                text="Lorem ipsum dolor sit amet enim."
+              />
+            </CCol>
+            <CCol xs={12} sm={6} xl={4} xxl={3}>
+              <CWidgetStatsB
+                value="2 TB"
+                title="Widget title"
+                progress={{ color: 'primary', value: 89.9 }}
+                text="Lorem ipsum dolor sit amet enim."
+              />
+            </CCol>
+          </CRow>
+        </DocsExample>
+        <DocsExample href="components/widgets/#cwidgetstatsb">
+          <CRow xs={{ gutter: 4 }}>
+            <CCol xs={12} sm={6} xl={4} xxl={3}>
+              <CWidgetStatsB
+                color="success"
+                inverse
+                value="89.9%"
+                title="Widget title"
+                progress={{ value: 89.9 }}
+                text="Lorem ipsum dolor sit amet enim."
+              />
+            </CCol>
+            <CCol xs={12} sm={6} xl={4} xxl={3}>
+              <CWidgetStatsB
+                color="info"
+                inverse
+                value="12.124"
+                title="Widget title"
+                progress={{ value: 89.9 }}
+                text="Lorem ipsum dolor sit amet enim."
+              />
+            </CCol>
+            <CCol xs={12} sm={6} xl={4} xxl={3}>
+              <CWidgetStatsB
+                color="warning"
+                inverse
+                value="$98.111,00"
+                title="Widget title"
+                progress={{ value: 89.9 }}
+                text="Lorem ipsum dolor sit amet enim."
+              />
+            </CCol>
+            <CCol xs={12} sm={6} xl={4} xxl={3}>
+              <CWidgetStatsB
+                color="primary"
+                inverse
+                value="2 TB"
+                title="Widget title"
+                progress={{ value: 89.9 }}
+                text="Lorem ipsum dolor sit amet enim."
+              />
+            </CCol>
+          </CRow>
+        </DocsExample>
+        <DocsExample href="components/widgets/#cwidgetstatse">
+          <CRow xs={{ gutter: 4 }}>
+            <CCol sm={4} md={3} xl={2}>
+              <CWidgetStatsE
+                chart={
+                  <CChartBar
+                    className="mx-auto"
+                    style={{ height: '40px', width: '80px' }}
+                    data={{
+                      labels: [
+                        'M',
+                        'T',
+                        'W',
+                        'T',
+                        'F',
+                        'S',
+                        'S',
+                        'M',
+                        'T',
+                        'W',
+                        'T',
+                        'F',
+                        'S',
+                        'S',
+                        'M',
+                      ],
+                      datasets: [
+                        {
+                          backgroundColor: getStyle('--cui-danger'),
+                          borderColor: 'transparent',
+                          borderWidth: 1,
+                          data: [
+                            random(40, 100),
+                            random(40, 100),
+                            random(40, 100),
+                            random(40, 100),
+                            random(40, 100),
+                            random(40, 100),
+                            random(40, 100),
+                            random(40, 100),
+                            random(40, 100),
+                            random(40, 100),
+                            random(40, 100),
+                            random(40, 100),
+                            random(40, 100),
+                            random(40, 100),
+                            random(40, 100),
+                          ],
+                        },
+                      ],
+                    }}
+                    options={{
+                      maintainAspectRatio: false,
+                      plugins: {
+                        legend: {
+                          display: false,
+                        },
+                      },
+                      scales: {
+                        x: {
+                          display: false,
+                        },
+                        y: {
+                          display: false,
+                        },
+                      },
+                    }}
+                  />
+                }
+                title="title"
+                value="1,123"
+              />
+            </CCol>
+            <CCol sm={4} md={3} xl={2}>
+              <CWidgetStatsE
+                chart={
+                  <CChartBar
+                    className="mx-auto"
+                    style={{ height: '40px', width: '80px' }}
+                    data={{
+                      labels: [
+                        'M',
+                        'T',
+                        'W',
+                        'T',
+                        'F',
+                        'S',
+                        'S',
+                        'M',
+                        'T',
+                        'W',
+                        'T',
+                        'F',
+                        'S',
+                        'S',
+                        'M',
+                      ],
+                      datasets: [
+                        {
+                          backgroundColor: getStyle('--cui-primary'),
+                          borderColor: 'transparent',
+                          borderWidth: 1,
+                          data: [
+                            random(40, 100),
+                            random(40, 100),
+                            random(40, 100),
+                            random(40, 100),
+                            random(40, 100),
+                            random(40, 100),
+                            random(40, 100),
+                            random(40, 100),
+                            random(40, 100),
+                            random(40, 100),
+                            random(40, 100),
+                            random(40, 100),
+                            random(40, 100),
+                            random(40, 100),
+                            random(40, 100),
+                          ],
+                        },
+                      ],
+                    }}
+                    options={{
+                      maintainAspectRatio: false,
+                      plugins: {
+                        legend: {
+                          display: false,
+                        },
+                      },
+                      scales: {
+                        x: {
+                          display: false,
+                        },
+                        y: {
+                          display: false,
+                        },
+                      },
+                    }}
+                  />
+                }
+                title="title"
+                value="1,123"
+              />
+            </CCol>
+            <CCol sm={4} md={3} xl={2}>
+              <CWidgetStatsE
+                chart={
+                  <CChartBar
+                    className="mx-auto"
+                    style={{ height: '40px', width: '80px' }}
+                    data={{
+                      labels: [
+                        'M',
+                        'T',
+                        'W',
+                        'T',
+                        'F',
+                        'S',
+                        'S',
+                        'M',
+                        'T',
+                        'W',
+                        'T',
+                        'F',
+                        'S',
+                        'S',
+                        'M',
+                      ],
+                      datasets: [
+                        {
+                          backgroundColor: getStyle('--cui-success'),
+                          borderColor: 'transparent',
+                          borderWidth: 1,
+                          data: [
+                            random(40, 100),
+                            random(40, 100),
+                            random(40, 100),
+                            random(40, 100),
+                            random(40, 100),
+                            random(40, 100),
+                            random(40, 100),
+                            random(40, 100),
+                            random(40, 100),
+                            random(40, 100),
+                            random(40, 100),
+                            random(40, 100),
+                            random(40, 100),
+                            random(40, 100),
+                            random(40, 100),
+                          ],
+                        },
+                      ],
+                    }}
+                    options={{
+                      maintainAspectRatio: false,
+                      plugins: {
+                        legend: {
+                          display: false,
+                        },
+                      },
+                      scales: {
+                        x: {
+                          display: false,
+                        },
+                        y: {
+                          display: false,
+                        },
+                      },
+                    }}
+                  />
+                }
+                title="title"
+                value="1,123"
+              />
+            </CCol>
+            <CCol sm={4} md={3} xl={2}>
+              <CWidgetStatsE
+                chart={
+                  <CChartLine
+                    className="mx-auto"
+                    style={{ height: '40px', width: '80px' }}
+                    data={{
+                      labels: [
+                        'M',
+                        'T',
+                        'W',
+                        'T',
+                        'F',
+                        'S',
+                        'S',
+                        'M',
+                        'T',
+                        'W',
+                        'T',
+                        'F',
+                        'S',
+                        'S',
+                        'M',
+                      ],
+                      datasets: [
+                        {
+                          backgroundColor: 'transparent',
+                          borderColor: getStyle('--cui-danger'),
+                          borderWidth: 2,
+                          data: [
+                            random(40, 100),
+                            random(40, 100),
+                            random(40, 100),
+                            random(40, 100),
+                            random(40, 100),
+                            random(40, 100),
+                            random(40, 100),
+                            random(40, 100),
+                            random(40, 100),
+                            random(40, 100),
+                            random(40, 100),
+                            random(40, 100),
+                            random(40, 100),
+                            random(40, 100),
+                            random(40, 100),
+                          ],
+                        },
+                      ],
+                    }}
+                    options={{
+                      maintainAspectRatio: false,
+                      elements: {
+                        line: {
+                          tension: 0.4,
+                        },
+                        point: {
+                          radius: 0,
+                        },
+                      },
+                      plugins: {
+                        legend: {
+                          display: false,
+                        },
+                      },
+                      scales: {
+                        x: {
+                          display: false,
+                        },
+                        y: {
+                          display: false,
+                        },
+                      },
+                    }}
+                  />
+                }
+                title="title"
+                value="1,123"
+              />
+            </CCol>
+            <CCol sm={4} md={3} xl={2}>
+              <CWidgetStatsE
+                chart={
+                  <CChartLine
+                    className="mx-auto"
+                    style={{ height: '40px', width: '80px' }}
+                    data={{
+                      labels: [
+                        'M',
+                        'T',
+                        'W',
+                        'T',
+                        'F',
+                        'S',
+                        'S',
+                        'M',
+                        'T',
+                        'W',
+                        'T',
+                        'F',
+                        'S',
+                        'S',
+                        'M',
+                      ],
+                      datasets: [
+                        {
+                          backgroundColor: 'transparent',
+                          borderColor: getStyle('--cui-success'),
+                          borderWidth: 2,
+                          data: [
+                            random(40, 100),
+                            random(40, 100),
+                            random(40, 100),
+                            random(40, 100),
+                            random(40, 100),
+                            random(40, 100),
+                            random(40, 100),
+                            random(40, 100),
+                            random(40, 100),
+                            random(40, 100),
+                            random(40, 100),
+                            random(40, 100),
+                            random(40, 100),
+                            random(40, 100),
+                            random(40, 100),
+                          ],
+                        },
+                      ],
+                    }}
+                    options={{
+                      maintainAspectRatio: false,
+                      elements: {
+                        line: {
+                          tension: 0.4,
+                        },
+                        point: {
+                          radius: 0,
+                        },
+                      },
+                      plugins: {
+                        legend: {
+                          display: false,
+                        },
+                      },
+                      scales: {
+                        x: {
+                          display: false,
+                        },
+                        y: {
+                          display: false,
+                        },
+                      },
+                    }}
+                  />
+                }
+                title="title"
+                value="1,123"
+              />
+            </CCol>
+            <CCol sm={4} md={3} xl={2}>
+              <CWidgetStatsE
+                chart={
+                  <CChartLine
+                    className="mx-auto"
+                    style={{ height: '40px', width: '80px' }}
+                    data={{
+                      labels: [
+                        'M',
+                        'T',
+                        'W',
+                        'T',
+                        'F',
+                        'S',
+                        'S',
+                        'M',
+                        'T',
+                        'W',
+                        'T',
+                        'F',
+                        'S',
+                        'S',
+                        'M',
+                      ],
+                      datasets: [
+                        {
+                          backgroundColor: 'transparent',
+                          borderColor: getStyle('--cui-info'),
+                          borderWidth: 2,
+                          data: [
+                            random(40, 100),
+                            random(40, 100),
+                            random(40, 100),
+                            random(40, 100),
+                            random(40, 100),
+                            random(40, 100),
+                            random(40, 100),
+                            random(40, 100),
+                            random(40, 100),
+                            random(40, 100),
+                            random(40, 100),
+                            random(40, 100),
+                            random(40, 100),
+                            random(40, 100),
+                            random(40, 100),
+                          ],
+                        },
+                      ],
+                    }}
+                    options={{
+                      maintainAspectRatio: false,
+                      elements: {
+                        line: {
+                          tension: 0.4,
+                        },
+                        point: {
+                          radius: 0,
+                        },
+                      },
+                      plugins: {
+                        legend: {
+                          display: false,
+                        },
+                      },
+                      scales: {
+                        x: {
+                          display: false,
+                        },
+                        y: {
+                          display: false,
+                        },
+                      },
+                    }}
+                  />
+                }
+                title="title"
+                value="1,123"
+              />
+            </CCol>
+          </CRow>
+        </DocsExample>
+        <DocsExample href="components/widgets/#cwidgetstatsf">
+          <CRow xs={{ gutter: 4 }}>
+            <CCol xs={12} sm={6} xl={4} xxl={3}>
+              <CWidgetStatsF
+                icon={<CIcon width={24} icon={cilSettings} size="xl" />}
+                title="income"
+                value="$1.999,50"
+                color="primary"
+              />
+            </CCol>
+            <CCol xs={12} sm={6} xl={4} xxl={3}>
+              <CWidgetStatsF
+                icon={<CIcon width={24} icon={cilUser} size="xl" />}
+                title="income"
+                value="$1.999,50"
+                color="info"
+              />
+            </CCol>
+            <CCol xs={12} sm={6} xl={4} xxl={3}>
+              <CWidgetStatsF
+                icon={<CIcon width={24} icon={cilMoon} size="xl" />}
+                title="income"
+                value="$1.999,50"
+                color="warning"
+              />
+            </CCol>
+            <CCol xs={12} sm={6} xl={4} xxl={3}>
+              <CWidgetStatsF
+                icon={<CIcon width={24} icon={cilBell} size="xl" />}
+                title="income"
+                value="$1.999,50"
+                color="danger"
+              />
+            </CCol>
+          </CRow>
+        </DocsExample>
+        <DocsExample href="components/widgets/#cwidgetstatsf">
+          <CRow xs={{ gutter: 4 }}>
+            <CCol xs={12} sm={6} xl={4} xxl={3}>
+              <CWidgetStatsF
+                icon={<CIcon width={24} icon={cilSettings} size="xl" />}
+                title="income"
+                value="$1.999,50"
+                color="primary"
+                footer={
+                  <CLink
+                    className="font-weight-bold font-xs text-body-secondary"
+                    href="https://coreui.io/"
+                    rel="noopener norefferer"
+                    target="_blank"
+                  >
+                    View more
+                    <CIcon icon={cilArrowRight} className="float-end" width={16} />
+                  </CLink>
+                }
+              />
+            </CCol>
+            <CCol xs={12} sm={6} xl={4} xxl={3}>
+              <CWidgetStatsF
+                icon={<CIcon width={24} icon={cilLaptop} size="xl" />}
+                title="income"
+                value="$1.999,50"
+                color="info"
+                footer={
+                  <CLink
+                    className="font-weight-bold font-xs text-body-secondary"
+                    href="https://coreui.io/"
+                    rel="noopener norefferer"
+                    target="_blank"
+                  >
+                    View more
+                    <CIcon icon={cilArrowRight} className="float-end" width={16} />
+                  </CLink>
+                }
+              />
+            </CCol>
+            <CCol xs={12} sm={6} xl={4} xxl={3}>
+              <CWidgetStatsF
+                icon={<CIcon width={24} icon={cilMoon} size="xl" />}
+                title="income"
+                value="$1.999,50"
+                color="warning"
+                footer={
+                  <CLink
+                    className="font-weight-bold font-xs text-body-secondary"
+                    href="https://coreui.io/"
+                    rel="noopener norefferer"
+                    target="_blank"
+                  >
+                    View more
+                    <CIcon icon={cilArrowRight} className="float-end" width={16} />
+                  </CLink>
+                }
+              />
+            </CCol>
+            <CCol xs={12} sm={6} xl={4} xxl={3}>
+              <CWidgetStatsF
+                icon={<CIcon width={24} icon={cilBell} size="xl" />}
+                title="income"
+                value="$1.999,50"
+                color="danger"
+                footer={
+                  <CLink
+                    className="font-weight-bold font-xs text-body-secondary"
+                    href="https://coreui.io/"
+                    rel="noopener norefferer"
+                    target="_blank"
+                  >
+                    View more
+                    <CIcon icon={cilArrowRight} className="float-end" width={16} />
+                  </CLink>
+                }
+              />
+            </CCol>
+          </CRow>
+        </DocsExample>
+        <DocsExample href="components/widgets/#cwidgetstatsf">
+          <CRow xs={{ gutter: 4 }}>
+            <CCol xs={12} sm={6} xl={4} xxl={3}>
+              <CWidgetStatsF
+                icon={<CIcon width={24} icon={cilSettings} size="xl" />}
+                padding={false}
+                title="income"
+                value="$1.999,50"
+                color="primary"
+              />
+            </CCol>
+            <CCol xs={12} sm={6} xl={4} xxl={3}>
+              <CWidgetStatsF
+                icon={<CIcon width={24} icon={cilUser} size="xl" />}
+                padding={false}
+                title="income"
+                value="$1.999,50"
+                color="info"
+              />
+            </CCol>
+            <CCol xs={12} sm={6} xl={4} xxl={3}>
+              <CWidgetStatsF
+                icon={<CIcon width={24} icon={cilMoon} size="xl" />}
+                padding={false}
+                title="income"
+                value="$1.999,50"
+                color="warning"
+              />
+            </CCol>
+            <CCol xs={12} sm={6} xl={4} xxl={3}>
+              <CWidgetStatsF
+                icon={<CIcon width={24} icon={cilBell} size="xl" />}
+                padding={false}
+                title="income"
+                value="$1.999,50"
+                color="danger"
+              />
+            </CCol>
+          </CRow>
+        </DocsExample>
+        <DocsExample href="components/widgets/#cwidgetstatsd">
+          <WidgetsBrand />
+        </DocsExample>
+        <DocsExample href="components/widgets/#cwidgetstatsd">
+          <WidgetsBrand withCharts />
+        </DocsExample>
+        <DocsExample href="components/widgets/#cwidgetstatsc">
+          <CCardGroup className="mb-4">
+            <CWidgetStatsC
+              icon={<CIcon icon={cilPeople} height={36} />}
+              value="87.500"
+              title="Visitors"
+              progress={{ color: 'info', value: 75 }}
+            />
+            <CWidgetStatsC
+              icon={<CIcon icon={cilUserFollow} height={36} />}
+              value="385"
+              title="New Clients"
+              progress={{ color: 'success', value: 75 }}
+            />
+            <CWidgetStatsC
+              icon={<CIcon icon={cilBasket} height={36} />}
+              value="1238"
+              title="Products sold"
+              progress={{ color: 'warning', value: 75 }}
+            />
+            <CWidgetStatsC
+              icon={<CIcon icon={cilChartPie} height={36} />}
+              value="28%"
+              title="Returning Visitors"
+              progress={{ color: 'primary', value: 75 }}
+            />
+            <CWidgetStatsC
+              icon={<CIcon icon={cilSpeedometer} height={36} />}
+              value="5:34:11"
+              title="Avg. Time"
+              progress={{ color: 'danger', value: 75 }}
+            />
+          </CCardGroup>
+        </DocsExample>
+        <DocsExample href="components/widgets/#cwidgetstatsc">
+          <CRow xs={{ gutter: 4 }}>
+            <CCol xs={6} lg={4} xxl={2}>
+              <CWidgetStatsC
+                icon={<CIcon icon={cilPeople} height={36} />}
+                value="87.500"
+                title="Visitors"
+                progress={{ color: 'info', value: 75 }}
+              />
+            </CCol>
+            <CCol xs={6} lg={4} xxl={2}>
+              <CWidgetStatsC
+                icon={<CIcon icon={cilUserFollow} height={36} />}
+                value="385"
+                title="New Clients"
+                progress={{ color: 'success', value: 75 }}
+              />
+            </CCol>
+            <CCol xs={6} lg={4} xxl={2}>
+              <CWidgetStatsC
+                icon={<CIcon icon={cilBasket} height={36} />}
+                value="1238"
+                title="Products sold"
+                progress={{ color: 'warning', value: 75 }}
+              />
+            </CCol>
+            <CCol xs={6} lg={4} xxl={2}>
+              <CWidgetStatsC
+                icon={<CIcon icon={cilChartPie} height={36} />}
+                value="28%"
+                title="Returning Visitors"
+                progress={{ color: 'primary', value: 75 }}
+              />
+            </CCol>
+            <CCol xs={6} lg={4} xxl={2}>
+              <CWidgetStatsC
+                icon={<CIcon icon={cilSpeedometer} height={36} />}
+                value="5:34:11"
+                title="Avg. Time"
+                progress={{ color: 'danger', value: 75 }}
+              />
+            </CCol>
+            <CCol xs={6} lg={4} xxl={2}>
+              <CWidgetStatsC
+                icon={<CIcon icon={cilSpeech} height={36} />}
+                value="972"
+                title="Comments"
+                progress={{ color: 'info', value: 75 }}
+              />
+            </CCol>
+          </CRow>
+        </DocsExample>
+        <DocsExample href="components/widgets/#cwidgetstatsc">
+          <CRow xs={{ gutter: 4 }}>
+            <CCol xs={6} lg={4} xxl={2}>
+              <CWidgetStatsC
+                color="info"
+                icon={<CIcon icon={cilPeople} height={36} />}
+                value="87.500"
+                title="Visitors"
+                inverse
+                progress={{ value: 75 }}
+              />
+            </CCol>
+            <CCol xs={6} lg={4} xxl={2}>
+              <CWidgetStatsC
+                color="success"
+                icon={<CIcon icon={cilUserFollow} height={36} />}
+                value="385"
+                title="New Clients"
+                inverse
+                progress={{ value: 75 }}
+              />
+            </CCol>
+            <CCol xs={6} lg={4} xxl={2}>
+              <CWidgetStatsC
+                color="warning"
+                icon={<CIcon icon={cilBasket} height={36} />}
+                value="1238"
+                title="Products sold"
+                inverse
+                progress={{ value: 75 }}
+              />
+            </CCol>
+            <CCol xs={6} lg={4} xxl={2}>
+              <CWidgetStatsC
+                color="primary"
+                icon={<CIcon icon={cilChartPie} height={36} />}
+                value="28%"
+                title="Returning Visitors"
+                inverse
+                progress={{ value: 75 }}
+              />
+            </CCol>
+            <CCol xs={6} lg={4} xxl={2}>
+              <CWidgetStatsC
+                color="danger"
+                icon={<CIcon icon={cilSpeedometer} height={36} />}
+                value="5:34:11"
+                title="Avg. Time"
+                inverse
+                progress={{ value: 75 }}
+              />
+            </CCol>
+            <CCol xs={6} lg={4} xxl={2}>
+              <CWidgetStatsC
+                color="info"
+                icon={<CIcon icon={cilSpeech} height={36} />}
+                value="972"
+                title="Comments"
+                inverse
+                progress={{ value: 75 }}
+              />
+            </CCol>
+          </CRow>
+        </DocsExample>
+      </CCardBody>
+    </CCard>
+  )
+}
+
+export default Widgets
Index: PlanningMamagement/frontend/src/views/buttons/index.js
===================================================================
diff --git a/PlanningMamagement/frontend/src/views/buttons/index.js b/PlanningMamagement/frontend/src/views/buttons/index.js
new file mode 100644
--- /dev/null	(date 1728391642029)
+++ b/PlanningMamagement/frontend/src/views/buttons/index.js	(date 1728391642029)
@@ -0,0 +1,5 @@
+import ButtonDropdowns from './ButtonDropdowns'
+import ButtonGroups from './ButtonGroups'
+import Buttons from './Buttons'
+
+export { ButtonDropdowns, ButtonGroups, Buttons }
Index: PlanningMamagement/frontend/src/views/widgets/WidgetsDropdown.js
===================================================================
diff --git a/PlanningMamagement/frontend/src/views/widgets/WidgetsDropdown.js b/PlanningMamagement/frontend/src/views/widgets/WidgetsDropdown.js
new file mode 100644
--- /dev/null	(date 1728391642519)
+++ b/PlanningMamagement/frontend/src/views/widgets/WidgetsDropdown.js	(date 1728391642519)
@@ -0,0 +1,396 @@
+import React, { useEffect, useRef } from 'react'
+import PropTypes from 'prop-types'
+
+import {
+  CRow,
+  CCol,
+  CDropdown,
+  CDropdownMenu,
+  CDropdownItem,
+  CDropdownToggle,
+  CWidgetStatsA,
+} from '@coreui/react'
+import { getStyle } from '@coreui/utils'
+import { CChartBar, CChartLine } from '@coreui/react-chartjs'
+import CIcon from '@coreui/icons-react'
+import { cilArrowBottom, cilArrowTop, cilOptions } from '@coreui/icons'
+
+const WidgetsDropdown = (props) => {
+  const widgetChartRef1 = useRef(null)
+  const widgetChartRef2 = useRef(null)
+
+  useEffect(() => {
+    document.documentElement.addEventListener('ColorSchemeChange', () => {
+      if (widgetChartRef1.current) {
+        setTimeout(() => {
+          widgetChartRef1.current.data.datasets[0].pointBackgroundColor = getStyle('--cui-primary')
+          widgetChartRef1.current.update()
+        })
+      }
+
+      if (widgetChartRef2.current) {
+        setTimeout(() => {
+          widgetChartRef2.current.data.datasets[0].pointBackgroundColor = getStyle('--cui-info')
+          widgetChartRef2.current.update()
+        })
+      }
+    })
+  }, [widgetChartRef1, widgetChartRef2])
+
+  return (
+    <CRow className={props.className} xs={{ gutter: 4 }}>
+      <CCol sm={6} xl={4} xxl={3}>
+        <CWidgetStatsA
+          color="primary"
+          value={
+            <>
+              26K{' '}
+              <span className="fs-6 fw-normal">
+                (-12.4% <CIcon icon={cilArrowBottom} />)
+              </span>
+            </>
+          }
+          title="Users"
+          action={
+            <CDropdown alignment="end">
+              <CDropdownToggle color="transparent" caret={false} className="text-white p-0">
+                <CIcon icon={cilOptions} />
+              </CDropdownToggle>
+              <CDropdownMenu>
+                <CDropdownItem>Action</CDropdownItem>
+                <CDropdownItem>Another action</CDropdownItem>
+                <CDropdownItem>Something else here...</CDropdownItem>
+                <CDropdownItem disabled>Disabled action</CDropdownItem>
+              </CDropdownMenu>
+            </CDropdown>
+          }
+          chart={
+            <CChartLine
+              ref={widgetChartRef1}
+              className="mt-3 mx-3"
+              style={{ height: '70px' }}
+              data={{
+                labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],
+                datasets: [
+                  {
+                    label: 'My First dataset',
+                    backgroundColor: 'transparent',
+                    borderColor: 'rgba(255,255,255,.55)',
+                    pointBackgroundColor: getStyle('--cui-primary'),
+                    data: [65, 59, 84, 84, 51, 55, 40],
+                  },
+                ],
+              }}
+              options={{
+                plugins: {
+                  legend: {
+                    display: false,
+                  },
+                },
+                maintainAspectRatio: false,
+                scales: {
+                  x: {
+                    border: {
+                      display: false,
+                    },
+                    grid: {
+                      display: false,
+                      drawBorder: false,
+                    },
+                    ticks: {
+                      display: false,
+                    },
+                  },
+                  y: {
+                    min: 30,
+                    max: 89,
+                    display: false,
+                    grid: {
+                      display: false,
+                    },
+                    ticks: {
+                      display: false,
+                    },
+                  },
+                },
+                elements: {
+                  line: {
+                    borderWidth: 1,
+                    tension: 0.4,
+                  },
+                  point: {
+                    radius: 4,
+                    hitRadius: 10,
+                    hoverRadius: 4,
+                  },
+                },
+              }}
+            />
+          }
+        />
+      </CCol>
+      <CCol sm={6} xl={4} xxl={3}>
+        <CWidgetStatsA
+          color="info"
+          value={
+            <>
+              $6.200{' '}
+              <span className="fs-6 fw-normal">
+                (40.9% <CIcon icon={cilArrowTop} />)
+              </span>
+            </>
+          }
+          title="Income"
+          action={
+            <CDropdown alignment="end">
+              <CDropdownToggle color="transparent" caret={false} className="text-white p-0">
+                <CIcon icon={cilOptions} />
+              </CDropdownToggle>
+              <CDropdownMenu>
+                <CDropdownItem>Action</CDropdownItem>
+                <CDropdownItem>Another action</CDropdownItem>
+                <CDropdownItem>Something else here...</CDropdownItem>
+                <CDropdownItem disabled>Disabled action</CDropdownItem>
+              </CDropdownMenu>
+            </CDropdown>
+          }
+          chart={
+            <CChartLine
+              ref={widgetChartRef2}
+              className="mt-3 mx-3"
+              style={{ height: '70px' }}
+              data={{
+                labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],
+                datasets: [
+                  {
+                    label: 'My First dataset',
+                    backgroundColor: 'transparent',
+                    borderColor: 'rgba(255,255,255,.55)',
+                    pointBackgroundColor: getStyle('--cui-info'),
+                    data: [1, 18, 9, 17, 34, 22, 11],
+                  },
+                ],
+              }}
+              options={{
+                plugins: {
+                  legend: {
+                    display: false,
+                  },
+                },
+                maintainAspectRatio: false,
+                scales: {
+                  x: {
+                    border: {
+                      display: false,
+                    },
+                    grid: {
+                      display: false,
+                      drawBorder: false,
+                    },
+                    ticks: {
+                      display: false,
+                    },
+                  },
+                  y: {
+                    min: -9,
+                    max: 39,
+                    display: false,
+                    grid: {
+                      display: false,
+                    },
+                    ticks: {
+                      display: false,
+                    },
+                  },
+                },
+                elements: {
+                  line: {
+                    borderWidth: 1,
+                  },
+                  point: {
+                    radius: 4,
+                    hitRadius: 10,
+                    hoverRadius: 4,
+                  },
+                },
+              }}
+            />
+          }
+        />
+      </CCol>
+      <CCol sm={6} xl={4} xxl={3}>
+        <CWidgetStatsA
+          color="warning"
+          value={
+            <>
+              2.49%{' '}
+              <span className="fs-6 fw-normal">
+                (84.7% <CIcon icon={cilArrowTop} />)
+              </span>
+            </>
+          }
+          title="Conversion Rate"
+          action={
+            <CDropdown alignment="end">
+              <CDropdownToggle color="transparent" caret={false} className="text-white p-0">
+                <CIcon icon={cilOptions} />
+              </CDropdownToggle>
+              <CDropdownMenu>
+                <CDropdownItem>Action</CDropdownItem>
+                <CDropdownItem>Another action</CDropdownItem>
+                <CDropdownItem>Something else here...</CDropdownItem>
+                <CDropdownItem disabled>Disabled action</CDropdownItem>
+              </CDropdownMenu>
+            </CDropdown>
+          }
+          chart={
+            <CChartLine
+              className="mt-3"
+              style={{ height: '70px' }}
+              data={{
+                labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],
+                datasets: [
+                  {
+                    label: 'My First dataset',
+                    backgroundColor: 'rgba(255,255,255,.2)',
+                    borderColor: 'rgba(255,255,255,.55)',
+                    data: [78, 81, 80, 45, 34, 12, 40],
+                    fill: true,
+                  },
+                ],
+              }}
+              options={{
+                plugins: {
+                  legend: {
+                    display: false,
+                  },
+                },
+                maintainAspectRatio: false,
+                scales: {
+                  x: {
+                    display: false,
+                  },
+                  y: {
+                    display: false,
+                  },
+                },
+                elements: {
+                  line: {
+                    borderWidth: 2,
+                    tension: 0.4,
+                  },
+                  point: {
+                    radius: 0,
+                    hitRadius: 10,
+                    hoverRadius: 4,
+                  },
+                },
+              }}
+            />
+          }
+        />
+      </CCol>
+      <CCol sm={6} xl={4} xxl={3}>
+        <CWidgetStatsA
+          color="danger"
+          value={
+            <>
+              44K{' '}
+              <span className="fs-6 fw-normal">
+                (-23.6% <CIcon icon={cilArrowBottom} />)
+              </span>
+            </>
+          }
+          title="Sessions"
+          action={
+            <CDropdown alignment="end">
+              <CDropdownToggle color="transparent" caret={false} className="text-white p-0">
+                <CIcon icon={cilOptions} />
+              </CDropdownToggle>
+              <CDropdownMenu>
+                <CDropdownItem>Action</CDropdownItem>
+                <CDropdownItem>Another action</CDropdownItem>
+                <CDropdownItem>Something else here...</CDropdownItem>
+                <CDropdownItem disabled>Disabled action</CDropdownItem>
+              </CDropdownMenu>
+            </CDropdown>
+          }
+          chart={
+            <CChartBar
+              className="mt-3 mx-3"
+              style={{ height: '70px' }}
+              data={{
+                labels: [
+                  'January',
+                  'February',
+                  'March',
+                  'April',
+                  'May',
+                  'June',
+                  'July',
+                  'August',
+                  'September',
+                  'October',
+                  'November',
+                  'December',
+                  'January',
+                  'February',
+                  'March',
+                  'April',
+                ],
+                datasets: [
+                  {
+                    label: 'My First dataset',
+                    backgroundColor: 'rgba(255,255,255,.2)',
+                    borderColor: 'rgba(255,255,255,.55)',
+                    data: [78, 81, 80, 45, 34, 12, 40, 85, 65, 23, 12, 98, 34, 84, 67, 82],
+                    barPercentage: 0.6,
+                  },
+                ],
+              }}
+              options={{
+                maintainAspectRatio: false,
+                plugins: {
+                  legend: {
+                    display: false,
+                  },
+                },
+                scales: {
+                  x: {
+                    grid: {
+                      display: false,
+                      drawTicks: false,
+                    },
+                    ticks: {
+                      display: false,
+                    },
+                  },
+                  y: {
+                    border: {
+                      display: false,
+                    },
+                    grid: {
+                      display: false,
+                      drawBorder: false,
+                      drawTicks: false,
+                    },
+                    ticks: {
+                      display: false,
+                    },
+                  },
+                },
+              }}
+            />
+          }
+        />
+      </CCol>
+    </CRow>
+  )
+}
+
+WidgetsDropdown.propTypes = {
+  className: PropTypes.string,
+  withCharts: PropTypes.bool,
+}
+
+export default WidgetsDropdown
Index: PlanningMamagement/frontend/src/views/widgets/WidgetsBrand.js
===================================================================
diff --git a/PlanningMamagement/frontend/src/views/widgets/WidgetsBrand.js b/PlanningMamagement/frontend/src/views/widgets/WidgetsBrand.js
new file mode 100644
--- /dev/null	(date 1728391642507)
+++ b/PlanningMamagement/frontend/src/views/widgets/WidgetsBrand.js	(date 1728391642507)
@@ -0,0 +1,182 @@
+import React from 'react'
+import PropTypes from 'prop-types'
+import { CWidgetStatsD, CRow, CCol } from '@coreui/react'
+import CIcon from '@coreui/icons-react'
+import { cibFacebook, cibLinkedin, cibTwitter, cilCalendar } from '@coreui/icons'
+import { CChart } from '@coreui/react-chartjs'
+
+const WidgetsBrand = (props) => {
+  const chartOptions = {
+    elements: {
+      line: {
+        tension: 0.4,
+      },
+      point: {
+        radius: 0,
+        hitRadius: 10,
+        hoverRadius: 4,
+        hoverBorderWidth: 3,
+      },
+    },
+    maintainAspectRatio: false,
+    plugins: {
+      legend: {
+        display: false,
+      },
+    },
+    scales: {
+      x: {
+        display: false,
+      },
+      y: {
+        display: false,
+      },
+    },
+  }
+
+  return (
+    <CRow className={props.className} xs={{ gutter: 4 }}>
+      <CCol sm={6} xl={4} xxl={3}>
+        <CWidgetStatsD
+          {...(props.withCharts && {
+            chart: (
+              <CChart
+                className="position-absolute w-100 h-100"
+                type="line"
+                data={{
+                  labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],
+                  datasets: [
+                    {
+                      backgroundColor: 'rgba(255,255,255,.1)',
+                      borderColor: 'rgba(255,255,255,.55)',
+                      pointHoverBackgroundColor: '#fff',
+                      borderWidth: 2,
+                      data: [65, 59, 84, 84, 51, 55, 40],
+                      fill: true,
+                    },
+                  ],
+                }}
+                options={chartOptions}
+              />
+            ),
+          })}
+          icon={<CIcon icon={cibFacebook} height={52} className="my-4 text-white" />}
+          values={[
+            { title: 'friends', value: '89K' },
+            { title: 'feeds', value: '459' },
+          ]}
+          style={{
+            '--cui-card-cap-bg': '#3b5998',
+          }}
+        />
+      </CCol>
+      <CCol sm={6} xl={4} xxl={3}>
+        <CWidgetStatsD
+          {...(props.withCharts && {
+            chart: (
+              <CChart
+                className="position-absolute w-100 h-100"
+                type="line"
+                data={{
+                  labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],
+                  datasets: [
+                    {
+                      backgroundColor: 'rgba(255,255,255,.1)',
+                      borderColor: 'rgba(255,255,255,.55)',
+                      pointHoverBackgroundColor: '#fff',
+                      borderWidth: 2,
+                      data: [1, 13, 9, 17, 34, 41, 38],
+                      fill: true,
+                    },
+                  ],
+                }}
+                options={chartOptions}
+              />
+            ),
+          })}
+          icon={<CIcon icon={cibTwitter} height={52} className="my-4 text-white" />}
+          values={[
+            { title: 'followers', value: '973k' },
+            { title: 'tweets', value: '1.792' },
+          ]}
+          style={{
+            '--cui-card-cap-bg': '#00aced',
+          }}
+        />
+      </CCol>
+      <CCol sm={6} xl={4} xxl={3}>
+        <CWidgetStatsD
+          {...(props.withCharts && {
+            chart: (
+              <CChart
+                className="position-absolute w-100 h-100"
+                type="line"
+                data={{
+                  labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],
+                  datasets: [
+                    {
+                      backgroundColor: 'rgba(255,255,255,.1)',
+                      borderColor: 'rgba(255,255,255,.55)',
+                      pointHoverBackgroundColor: '#fff',
+                      borderWidth: 2,
+                      data: [78, 81, 80, 45, 34, 12, 40],
+                      fill: true,
+                    },
+                  ],
+                }}
+                options={chartOptions}
+              />
+            ),
+          })}
+          icon={<CIcon icon={cibLinkedin} height={52} className="my-4 text-white" />}
+          values={[
+            { title: 'contacts', value: '500' },
+            { title: 'feeds', value: '1.292' },
+          ]}
+          style={{
+            '--cui-card-cap-bg': '#4875b4',
+          }}
+        />
+      </CCol>
+      <CCol sm={6} xl={4} xxl={3}>
+        <CWidgetStatsD
+          color="warning"
+          {...(props.withCharts && {
+            chart: (
+              <CChart
+                className="position-absolute w-100 h-100"
+                type="line"
+                data={{
+                  labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],
+                  datasets: [
+                    {
+                      backgroundColor: 'rgba(255,255,255,.1)',
+                      borderColor: 'rgba(255,255,255,.55)',
+                      pointHoverBackgroundColor: '#fff',
+                      borderWidth: 2,
+                      data: [35, 23, 56, 22, 97, 23, 64],
+                      fill: true,
+                    },
+                  ],
+                }}
+                options={chartOptions}
+              />
+            ),
+          })}
+          icon={<CIcon icon={cilCalendar} height={52} className="my-4 text-white" />}
+          values={[
+            { title: 'events', value: '12+' },
+            { title: 'meetings', value: '4' },
+          ]}
+        />
+      </CCol>
+    </CRow>
+  )
+}
+
+WidgetsBrand.propTypes = {
+  className: PropTypes.string,
+  withCharts: PropTypes.bool,
+}
+
+export default WidgetsBrand
Index: PlanningMamagement/frontend/src/views/dashboard/MainChart.js
===================================================================
diff --git a/PlanningMamagement/frontend/src/views/dashboard/MainChart.js b/PlanningMamagement/frontend/src/views/dashboard/MainChart.js
new file mode 100644
--- /dev/null	(date 1728391642118)
+++ b/PlanningMamagement/frontend/src/views/dashboard/MainChart.js	(date 1728391642118)
@@ -0,0 +1,133 @@
+import React, { useEffect, useRef } from 'react'
+
+import { CChartLine } from '@coreui/react-chartjs'
+import { getStyle } from '@coreui/utils'
+
+const MainChart = () => {
+  const chartRef = useRef(null)
+
+  useEffect(() => {
+    document.documentElement.addEventListener('ColorSchemeChange', () => {
+      if (chartRef.current) {
+        setTimeout(() => {
+          chartRef.current.options.scales.x.grid.borderColor = getStyle(
+            '--cui-border-color-translucent',
+          )
+          chartRef.current.options.scales.x.grid.color = getStyle('--cui-border-color-translucent')
+          chartRef.current.options.scales.x.ticks.color = getStyle('--cui-body-color')
+          chartRef.current.options.scales.y.grid.borderColor = getStyle(
+            '--cui-border-color-translucent',
+          )
+          chartRef.current.options.scales.y.grid.color = getStyle('--cui-border-color-translucent')
+          chartRef.current.options.scales.y.ticks.color = getStyle('--cui-body-color')
+          chartRef.current.update()
+        })
+      }
+    })
+  }, [chartRef])
+
+  const random = () => Math.round(Math.random() * 100)
+
+  return (
+    <>
+      <CChartLine
+        ref={chartRef}
+        style={{ height: '300px', marginTop: '40px' }}
+        data={{
+          labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July'],
+          datasets: [
+            {
+              label: 'My First dataset',
+              backgroundColor: `rgba(${getStyle('--cui-info-rgb')}, .1)`,
+              borderColor: getStyle('--cui-info'),
+              pointHoverBackgroundColor: getStyle('--cui-info'),
+              borderWidth: 2,
+              data: [
+                random(50, 200),
+                random(50, 200),
+                random(50, 200),
+                random(50, 200),
+                random(50, 200),
+                random(50, 200),
+                random(50, 200),
+              ],
+              fill: true,
+            },
+            {
+              label: 'My Second dataset',
+              backgroundColor: 'transparent',
+              borderColor: getStyle('--cui-success'),
+              pointHoverBackgroundColor: getStyle('--cui-success'),
+              borderWidth: 2,
+              data: [
+                random(50, 200),
+                random(50, 200),
+                random(50, 200),
+                random(50, 200),
+                random(50, 200),
+                random(50, 200),
+                random(50, 200),
+              ],
+            },
+            {
+              label: 'My Third dataset',
+              backgroundColor: 'transparent',
+              borderColor: getStyle('--cui-danger'),
+              pointHoverBackgroundColor: getStyle('--cui-danger'),
+              borderWidth: 1,
+              borderDash: [8, 5],
+              data: [65, 65, 65, 65, 65, 65, 65],
+            },
+          ],
+        }}
+        options={{
+          maintainAspectRatio: false,
+          plugins: {
+            legend: {
+              display: false,
+            },
+          },
+          scales: {
+            x: {
+              grid: {
+                color: getStyle('--cui-border-color-translucent'),
+                drawOnChartArea: false,
+              },
+              ticks: {
+                color: getStyle('--cui-body-color'),
+              },
+            },
+            y: {
+              beginAtZero: true,
+              border: {
+                color: getStyle('--cui-border-color-translucent'),
+              },
+              grid: {
+                color: getStyle('--cui-border-color-translucent'),
+              },
+              max: 250,
+              ticks: {
+                color: getStyle('--cui-body-color'),
+                maxTicksLimit: 5,
+                stepSize: Math.ceil(250 / 5),
+              },
+            },
+          },
+          elements: {
+            line: {
+              tension: 0.4,
+            },
+            point: {
+              radius: 0,
+              hitRadius: 10,
+              hoverRadius: 4,
+              hoverBorderWidth: 3,
+            },
+          },
+        }}
+      />
+    </>
+  )
+}
+
+export default MainChart
Index: PlanningMamagement/frontend/src/views/dashboard/Dashboard.js
===================================================================
diff --git a/PlanningMamagement/frontend/src/views/dashboard/Dashboard.js b/PlanningMamagement/frontend/src/views/dashboard/Dashboard.js
new file mode 100644
--- /dev/null	(date 1728391642108)
+++ b/PlanningMamagement/frontend/src/views/dashboard/Dashboard.js	(date 1728391642108)
@@ -0,0 +1,387 @@
+import React from 'react'
+import classNames from 'classnames'
+
+import {
+  CAvatar,
+  CButton,
+  CButtonGroup,
+  CCard,
+  CCardBody,
+  CCardFooter,
+  CCardHeader,
+  CCol,
+  CProgress,
+  CRow,
+  CTable,
+  CTableBody,
+  CTableDataCell,
+  CTableHead,
+  CTableHeaderCell,
+  CTableRow,
+} from '@coreui/react'
+import CIcon from '@coreui/icons-react'
+import {
+  cibCcAmex,
+  cibCcApplePay,
+  cibCcMastercard,
+  cibCcPaypal,
+  cibCcStripe,
+  cibCcVisa,
+  cibGoogle,
+  cibFacebook,
+  cibLinkedin,
+  cifBr,
+  cifEs,
+  cifFr,
+  cifIn,
+  cifPl,
+  cifUs,
+  cibTwitter,
+  cilCloudDownload,
+  cilPeople,
+  cilUser,
+  cilUserFemale,
+} from '@coreui/icons'
+
+import avatar1 from 'src/assets/images/avatars/1.jpg'
+import avatar2 from 'src/assets/images/avatars/2.jpg'
+import avatar3 from 'src/assets/images/avatars/3.jpg'
+import avatar4 from 'src/assets/images/avatars/4.jpg'
+import avatar5 from 'src/assets/images/avatars/5.jpg'
+import avatar6 from 'src/assets/images/avatars/6.jpg'
+
+import WidgetsBrand from '../widgets/WidgetsBrand'
+import WidgetsDropdown from '../widgets/WidgetsDropdown'
+import MainChart from './MainChart'
+
+const Dashboard = () => {
+  const progressExample = [
+    { title: 'Visits', value: '29.703 Users', percent: 40, color: 'success' },
+    { title: 'Unique', value: '24.093 Users', percent: 20, color: 'info' },
+    { title: 'Pageviews', value: '78.706 Views', percent: 60, color: 'warning' },
+    { title: 'New Users', value: '22.123 Users', percent: 80, color: 'danger' },
+    { title: 'Bounce Rate', value: 'Average Rate', percent: 40.15, color: 'primary' },
+  ]
+
+  const progressGroupExample1 = [
+    { title: 'Monday', value1: 34, value2: 78 },
+    { title: 'Tuesday', value1: 56, value2: 94 },
+    { title: 'Wednesday', value1: 12, value2: 67 },
+    { title: 'Thursday', value1: 43, value2: 91 },
+    { title: 'Friday', value1: 22, value2: 73 },
+    { title: 'Saturday', value1: 53, value2: 82 },
+    { title: 'Sunday', value1: 9, value2: 69 },
+  ]
+
+  const progressGroupExample2 = [
+    { title: 'Male', icon: cilUser, value: 53 },
+    { title: 'Female', icon: cilUserFemale, value: 43 },
+  ]
+
+  const progressGroupExample3 = [
+    { title: 'Organic Search', icon: cibGoogle, percent: 56, value: '191,235' },
+    { title: 'Facebook', icon: cibFacebook, percent: 15, value: '51,223' },
+    { title: 'Twitter', icon: cibTwitter, percent: 11, value: '37,564' },
+    { title: 'LinkedIn', icon: cibLinkedin, percent: 8, value: '27,319' },
+  ]
+
+  const tableExample = [
+    {
+      avatar: { src: avatar1, status: 'success' },
+      user: {
+        name: 'Yiorgos Avraamu',
+        new: true,
+        registered: 'Jan 1, 2023',
+      },
+      country: { name: 'USA', flag: cifUs },
+      usage: {
+        value: 50,
+        period: 'Jun 11, 2023 - Jul 10, 2023',
+        color: 'success',
+      },
+      payment: { name: 'Mastercard', icon: cibCcMastercard },
+      activity: '10 sec ago',
+    },
+    {
+      avatar: { src: avatar2, status: 'danger' },
+      user: {
+        name: 'Avram Tarasios',
+        new: false,
+        registered: 'Jan 1, 2023',
+      },
+      country: { name: 'Brazil', flag: cifBr },
+      usage: {
+        value: 22,
+        period: 'Jun 11, 2023 - Jul 10, 2023',
+        color: 'info',
+      },
+      payment: { name: 'Visa', icon: cibCcVisa },
+      activity: '5 minutes ago',
+    },
+    {
+      avatar: { src: avatar3, status: 'warning' },
+      user: { name: 'Quintin Ed', new: true, registered: 'Jan 1, 2023' },
+      country: { name: 'India', flag: cifIn },
+      usage: {
+        value: 74,
+        period: 'Jun 11, 2023 - Jul 10, 2023',
+        color: 'warning',
+      },
+      payment: { name: 'Stripe', icon: cibCcStripe },
+      activity: '1 hour ago',
+    },
+    {
+      avatar: { src: avatar4, status: 'secondary' },
+      user: { name: 'Enéas Kwadwo', new: true, registered: 'Jan 1, 2023' },
+      country: { name: 'France', flag: cifFr },
+      usage: {
+        value: 98,
+        period: 'Jun 11, 2023 - Jul 10, 2023',
+        color: 'danger',
+      },
+      payment: { name: 'PayPal', icon: cibCcPaypal },
+      activity: 'Last month',
+    },
+    {
+      avatar: { src: avatar5, status: 'success' },
+      user: {
+        name: 'Agapetus Tadeáš',
+        new: true,
+        registered: 'Jan 1, 2023',
+      },
+      country: { name: 'Spain', flag: cifEs },
+      usage: {
+        value: 22,
+        period: 'Jun 11, 2023 - Jul 10, 2023',
+        color: 'primary',
+      },
+      payment: { name: 'Google Wallet', icon: cibCcApplePay },
+      activity: 'Last week',
+    },
+    {
+      avatar: { src: avatar6, status: 'danger' },
+      user: {
+        name: 'Friderik Dávid',
+        new: true,
+        registered: 'Jan 1, 2023',
+      },
+      country: { name: 'Poland', flag: cifPl },
+      usage: {
+        value: 43,
+        period: 'Jun 11, 2023 - Jul 10, 2023',
+        color: 'success',
+      },
+      payment: { name: 'Amex', icon: cibCcAmex },
+      activity: 'Last week',
+    },
+  ]
+
+  return (
+    <>
+      <WidgetsDropdown className="mb-4" />
+      <CCard className="mb-4">
+        <CCardBody>
+          <CRow>
+            <CCol sm={5}>
+              <h4 id="traffic" className="card-title mb-0">
+                Traffic
+              </h4>
+              <div className="small text-body-secondary">January - July 2023</div>
+            </CCol>
+            <CCol sm={7} className="d-none d-md-block">
+              <CButton color="primary" className="float-end">
+                <CIcon icon={cilCloudDownload} />
+              </CButton>
+              <CButtonGroup className="float-end me-3">
+                {['Day', 'Month', 'Year'].map((value) => (
+                  <CButton
+                    color="outline-secondary"
+                    key={value}
+                    className="mx-0"
+                    active={value === 'Month'}
+                  >
+                    {value}
+                  </CButton>
+                ))}
+              </CButtonGroup>
+            </CCol>
+          </CRow>
+          <MainChart />
+        </CCardBody>
+        <CCardFooter>
+          <CRow
+            xs={{ cols: 1, gutter: 4 }}
+            sm={{ cols: 2 }}
+            lg={{ cols: 4 }}
+            xl={{ cols: 5 }}
+            className="mb-2 text-center"
+          >
+            {progressExample.map((item, index, items) => (
+              <CCol
+                className={classNames({
+                  'd-none d-xl-block': index + 1 === items.length,
+                })}
+                key={index}
+              >
+                <div className="text-body-secondary">{item.title}</div>
+                <div className="fw-semibold text-truncate">
+                  {item.value} ({item.percent}%)
+                </div>
+                <CProgress thin className="mt-2" color={item.color} value={item.percent} />
+              </CCol>
+            ))}
+          </CRow>
+        </CCardFooter>
+      </CCard>
+      <WidgetsBrand className="mb-4" withCharts />
+      <CRow>
+        <CCol xs>
+          <CCard className="mb-4">
+            <CCardHeader>Traffic {' & '} Sales</CCardHeader>
+            <CCardBody>
+              <CRow>
+                <CCol xs={12} md={6} xl={6}>
+                  <CRow>
+                    <CCol xs={6}>
+                      <div className="border-start border-start-4 border-start-info py-1 px-3">
+                        <div className="text-body-secondary text-truncate small">New Clients</div>
+                        <div className="fs-5 fw-semibold">9,123</div>
+                      </div>
+                    </CCol>
+                    <CCol xs={6}>
+                      <div className="border-start border-start-4 border-start-danger py-1 px-3 mb-3">
+                        <div className="text-body-secondary text-truncate small">
+                          Recurring Clients
+                        </div>
+                        <div className="fs-5 fw-semibold">22,643</div>
+                      </div>
+                    </CCol>
+                  </CRow>
+                  <hr className="mt-0" />
+                  {progressGroupExample1.map((item, index) => (
+                    <div className="progress-group mb-4" key={index}>
+                      <div className="progress-group-prepend">
+                        <span className="text-body-secondary small">{item.title}</span>
+                      </div>
+                      <div className="progress-group-bars">
+                        <CProgress thin color="info" value={item.value1} />
+                        <CProgress thin color="danger" value={item.value2} />
+                      </div>
+                    </div>
+                  ))}
+                </CCol>
+                <CCol xs={12} md={6} xl={6}>
+                  <CRow>
+                    <CCol xs={6}>
+                      <div className="border-start border-start-4 border-start-warning py-1 px-3 mb-3">
+                        <div className="text-body-secondary text-truncate small">Pageviews</div>
+                        <div className="fs-5 fw-semibold">78,623</div>
+                      </div>
+                    </CCol>
+                    <CCol xs={6}>
+                      <div className="border-start border-start-4 border-start-success py-1 px-3 mb-3">
+                        <div className="text-body-secondary text-truncate small">Organic</div>
+                        <div className="fs-5 fw-semibold">49,123</div>
+                      </div>
+                    </CCol>
+                  </CRow>
+
+                  <hr className="mt-0" />
+
+                  {progressGroupExample2.map((item, index) => (
+                    <div className="progress-group mb-4" key={index}>
+                      <div className="progress-group-header">
+                        <CIcon className="me-2" icon={item.icon} size="lg" />
+                        <span>{item.title}</span>
+                        <span className="ms-auto fw-semibold">{item.value}%</span>
+                      </div>
+                      <div className="progress-group-bars">
+                        <CProgress thin color="warning" value={item.value} />
+                      </div>
+                    </div>
+                  ))}
+
+                  <div className="mb-5"></div>
+
+                  {progressGroupExample3.map((item, index) => (
+                    <div className="progress-group" key={index}>
+                      <div className="progress-group-header">
+                        <CIcon className="me-2" icon={item.icon} size="lg" />
+                        <span>{item.title}</span>
+                        <span className="ms-auto fw-semibold">
+                          {item.value}{' '}
+                          <span className="text-body-secondary small">({item.percent}%)</span>
+                        </span>
+                      </div>
+                      <div className="progress-group-bars">
+                        <CProgress thin color="success" value={item.percent} />
+                      </div>
+                    </div>
+                  ))}
+                </CCol>
+              </CRow>
+
+              <br />
+
+              <CTable align="middle" className="mb-0 border" hover responsive>
+                <CTableHead className="text-nowrap">
+                  <CTableRow>
+                    <CTableHeaderCell className="bg-body-tertiary text-center">
+                      <CIcon icon={cilPeople} />
+                    </CTableHeaderCell>
+                    <CTableHeaderCell className="bg-body-tertiary">User</CTableHeaderCell>
+                    <CTableHeaderCell className="bg-body-tertiary text-center">
+                      Country
+                    </CTableHeaderCell>
+                    <CTableHeaderCell className="bg-body-tertiary">Usage</CTableHeaderCell>
+                    <CTableHeaderCell className="bg-body-tertiary text-center">
+                      Payment Method
+                    </CTableHeaderCell>
+                    <CTableHeaderCell className="bg-body-tertiary">Activity</CTableHeaderCell>
+                  </CTableRow>
+                </CTableHead>
+                <CTableBody>
+                  {tableExample.map((item, index) => (
+                    <CTableRow v-for="item in tableItems" key={index}>
+                      <CTableDataCell className="text-center">
+                        <CAvatar size="md" src={item.avatar.src} status={item.avatar.status} />
+                      </CTableDataCell>
+                      <CTableDataCell>
+                        <div>{item.user.name}</div>
+                        <div className="small text-body-secondary text-nowrap">
+                          <span>{item.user.new ? 'New' : 'Recurring'}</span> | Registered:{' '}
+                          {item.user.registered}
+                        </div>
+                      </CTableDataCell>
+                      <CTableDataCell className="text-center">
+                        <CIcon size="xl" icon={item.country.flag} title={item.country.name} />
+                      </CTableDataCell>
+                      <CTableDataCell>
+                        <div className="d-flex justify-content-between text-nowrap">
+                          <div className="fw-semibold">{item.usage.value}%</div>
+                          <div className="ms-3">
+                            <small className="text-body-secondary">{item.usage.period}</small>
+                          </div>
+                        </div>
+                        <CProgress thin color={item.usage.color} value={item.usage.value} />
+                      </CTableDataCell>
+                      <CTableDataCell className="text-center">
+                        <CIcon size="xl" icon={item.payment.icon} />
+                      </CTableDataCell>
+                      <CTableDataCell>
+                        <div className="small text-body-secondary text-nowrap">Last login</div>
+                        <div className="fw-semibold text-nowrap">{item.activity}</div>
+                      </CTableDataCell>
+                    </CTableRow>
+                  ))}
+                </CTableBody>
+              </CTable>
+            </CCardBody>
+          </CCard>
+        </CCol>
+      </CRow>
+    </>
+  )
+}
+
+export default Dashboard
Index: PlanningMamagement/frontend/src/views/notifications/index.js
===================================================================
diff --git a/PlanningMamagement/frontend/src/views/notifications/index.js b/PlanningMamagement/frontend/src/views/notifications/index.js
new file mode 100644
--- /dev/null	(date 1728391642320)
+++ b/PlanningMamagement/frontend/src/views/notifications/index.js	(date 1728391642320)
@@ -0,0 +1,6 @@
+import Alerts from './Alerts'
+import Badges from './Badges'
+import Modals from './Modals'
+import Toaster from './toasts'
+
+export { Alerts, Badges, Modals, Toaster }
Index: PlanningMamagement/frontend/src/views/base/navs/Navs.js
===================================================================
diff --git a/PlanningMamagement/frontend/src/views/base/navs/Navs.js b/PlanningMamagement/frontend/src/views/base/navs/Navs.js
new file mode 100644
--- /dev/null	(date 1728391641887)
+++ b/PlanningMamagement/frontend/src/views/base/navs/Navs.js	(date 1728391641887)
@@ -0,0 +1,397 @@
+import React from 'react'
+import {
+  CRow,
+  CCol,
+  CCard,
+  CCardBody,
+  CCardHeader,
+  CDropdown,
+  CDropdownItem,
+  CDropdownMenu,
+  CDropdownToggle,
+  CNav,
+  CNavItem,
+  CNavLink,
+} from '@coreui/react'
+import { DocsExample } from 'src/components'
+
+const Navs = () => {
+  return (
+    <CRow>
+      <CCol xs={12}>
+        <CCard className="mb-4">
+          <CCardHeader>
+            <strong>React Navs</strong> <small>Base navs</small>
+          </CCardHeader>
+          <CCardBody>
+            <p className="text-body-secondary small">
+              The base <code>.nav</code> component is built with flexbox and provide a strong
+              foundation for building all types of navigation components. It includes some style
+              overrides (for working with lists), some link padding for larger hit areas, and basic
+              disabled styling.
+            </p>
+            <DocsExample href="components/nav#base-nav">
+              <CNav>
+                <CNavItem>
+                  <CNavLink href="#" active>
+                    Active
+                  </CNavLink>
+                </CNavItem>
+                <CNavItem>
+                  <CNavLink href="#">Link</CNavLink>
+                </CNavItem>
+                <CNavItem>
+                  <CNavLink href="#">Link</CNavLink>
+                </CNavItem>
+                <CNavItem>
+                  <CNavLink href="#" disabled>
+                    Disabled
+                  </CNavLink>
+                </CNavItem>
+              </CNav>
+            </DocsExample>
+            <p className="text-body-secondary small">
+              Classes are used throughout, so your markup can be super flexible. Use{' '}
+              <code>&lt;ul&gt;</code>s like above, <code>&lt;ol&gt;</code> if the order of your
+              items is important, or roll your own with a <code>&lt;nav&gt;</code> element. Because
+              the .nav uses display: flex, the nav links behave the same as nav items would, but
+              without the extra markup.
+            </p>
+            <DocsExample href="components/nav#base-nav">
+              <CNav as="nav">
+                <CNavLink href="#" active>
+                  Active
+                </CNavLink>
+                <CNavLink href="#">Link</CNavLink>
+                <CNavLink href="#">Link</CNavLink>
+                <CNavLink href="#" disabled>
+                  Disabled
+                </CNavLink>
+              </CNav>
+            </DocsExample>
+          </CCardBody>
+        </CCard>
+      </CCol>
+      <CCol xs={12}>
+        <CCard className="mb-4">
+          <CCardHeader>
+            <strong>React Navs</strong> <small>Horizontal alignment</small>
+          </CCardHeader>
+          <CCardBody>
+            <p className="text-body-secondary small">
+              Change the horizontal alignment of your nav with{' '}
+              <a href="https://coreui.io/docs/layout/grid/#horizontal-alignment">
+                flexbox utilities
+              </a>
+              . By default, navs are left-aligned, but you can easily change them to center or right
+              aligned.
+            </p>
+            <p className="text-body-secondary small">
+              Centered with <code>.justify-content-center</code>:
+            </p>
+            <DocsExample href="components/nav#horizontal-alignment">
+              <CNav className="justify-content-center">
+                <CNavItem>
+                  <CNavLink href="#" active>
+                    Active
+                  </CNavLink>
+                </CNavItem>
+                <CNavItem>
+                  <CNavLink href="#">Link</CNavLink>
+                </CNavItem>
+                <CNavItem>
+                  <CNavLink href="#">Link</CNavLink>
+                </CNavItem>
+                <CNavItem>
+                  <CNavLink href="#" disabled>
+                    Disabled
+                  </CNavLink>
+                </CNavItem>
+              </CNav>
+            </DocsExample>
+            <p className="text-body-secondary small">
+              Right-aligned with <code>.justify-content-end</code>:
+            </p>
+            <DocsExample href="components/nav#base-nav">
+              <CNav className="justify-content-end">
+                <CNavItem>
+                  <CNavLink href="#" active>
+                    Active
+                  </CNavLink>
+                </CNavItem>
+                <CNavItem>
+                  <CNavLink href="#">Link</CNavLink>
+                </CNavItem>
+                <CNavItem>
+                  <CNavLink href="#">Link</CNavLink>
+                </CNavItem>
+                <CNavItem>
+                  <CNavLink href="#" disabled>
+                    Disabled
+                  </CNavLink>
+                </CNavItem>
+              </CNav>
+            </DocsExample>
+          </CCardBody>
+        </CCard>
+      </CCol>
+      <CCol xs={12}>
+        <CCard className="mb-4">
+          <CCardHeader>
+            <strong>React Navs</strong> <small>Vertical</small>
+          </CCardHeader>
+          <CCardBody>
+            <p className="text-body-secondary small">
+              Stack your navigation by changing the flex item direction with the{' '}
+              <code>.flex-column</code> utility. Need to stack them on some viewports but not
+              others? Use the responsive versions (e.g., <code>.flex-sm-column</code>).
+            </p>
+            <DocsExample href="components/nav#vertical">
+              <CNav className="flex-column">
+                <CNavItem>
+                  <CNavLink href="#" active>
+                    Active
+                  </CNavLink>
+                </CNavItem>
+                <CNavItem>
+                  <CNavLink href="#">Link</CNavLink>
+                </CNavItem>
+                <CNavItem>
+                  <CNavLink href="#">Link</CNavLink>
+                </CNavItem>
+                <CNavItem>
+                  <CNavLink href="#" disabled>
+                    Disabled
+                  </CNavLink>
+                </CNavItem>
+              </CNav>
+            </DocsExample>
+          </CCardBody>
+        </CCard>
+      </CCol>
+      <CCol xs={12}>
+        <CCard className="mb-4">
+          <CCardHeader>
+            <strong>React Navs</strong> <small>Tabs</small>
+          </CCardHeader>
+          <CCardBody>
+            <p className="text-body-secondary small">
+              Takes the basic nav from above and adds the <code>variant=&#34;tabs&#34;</code> class
+              to generate a tabbed interface
+            </p>
+            <DocsExample href="components/nav#tabs">
+              <CNav variant="tabs">
+                <CNavItem>
+                  <CNavLink href="#" active>
+                    Active
+                  </CNavLink>
+                </CNavItem>
+                <CNavItem>
+                  <CNavLink href="#">Link</CNavLink>
+                </CNavItem>
+                <CNavItem>
+                  <CNavLink href="#">Link</CNavLink>
+                </CNavItem>
+                <CNavItem>
+                  <CNavLink href="#" disabled>
+                    Disabled
+                  </CNavLink>
+                </CNavItem>
+              </CNav>
+            </DocsExample>
+          </CCardBody>
+        </CCard>
+      </CCol>
+      <CCol xs={12}>
+        <CCard className="mb-4">
+          <CCardHeader>
+            <strong>React Navs</strong> <small>Pills</small>
+          </CCardHeader>
+          <CCardBody>
+            <p className="text-body-secondary small">
+              Take that same HTML, but use <code>variant=&#34;pills&#34;</code> instead:
+            </p>
+            <DocsExample href="components/nav#pills">
+              <CNav variant="pills">
+                <CNavItem>
+                  <CNavLink href="#" active>
+                    Active
+                  </CNavLink>
+                </CNavItem>
+                <CNavItem>
+                  <CNavLink href="#">Link</CNavLink>
+                </CNavItem>
+                <CNavItem>
+                  <CNavLink href="#">Link</CNavLink>
+                </CNavItem>
+                <CNavItem>
+                  <CNavLink href="#" disabled>
+                    Disabled
+                  </CNavLink>
+                </CNavItem>
+              </CNav>
+            </DocsExample>
+          </CCardBody>
+        </CCard>
+      </CCol>
+      <CCol xs={12}>
+        <CCard className="mb-4">
+          <CCardHeader>
+            <strong>React Navs</strong> <small>Fill and justify</small>
+          </CCardHeader>
+          <CCardBody>
+            <p className="text-body-secondary small">
+              Force your <code>.nav</code>&#39;s contents to extend the full available width one of
+              two modifier classes. To proportionately fill all available space with your{' '}
+              <code>.nav-item</code>s, use <code>layout=&#34;fill&#34;</code>. Notice that all
+              horizontal space is occupied, but not every nav item has the same width.
+            </p>
+            <DocsExample href="components/nav#fill-and-justify">
+              <CNav variant="pills" layout="fill">
+                <CNavItem>
+                  <CNavLink href="#" active>
+                    Active
+                  </CNavLink>
+                </CNavItem>
+                <CNavItem>
+                  <CNavLink href="#">Link</CNavLink>
+                </CNavItem>
+                <CNavItem>
+                  <CNavLink href="#">Link</CNavLink>
+                </CNavItem>
+                <CNavItem>
+                  <CNavLink href="#" disabled>
+                    Disabled
+                  </CNavLink>
+                </CNavItem>
+              </CNav>
+            </DocsExample>
+            <p className="text-body-secondary small">
+              For equal-width elements, use <code>layout=&#34;justified&#34;</code>. All horizontal
+              space will be occupied by nav links, but unlike the .nav-fill above, every nav item
+              will be the same width.
+            </p>
+            <DocsExample href="components/nav#fill-and-justify">
+              <CNav variant="pills" layout="justified">
+                <CNavItem>
+                  <CNavLink href="#" active>
+                    Active
+                  </CNavLink>
+                </CNavItem>
+                <CNavItem>
+                  <CNavLink href="#">Link</CNavLink>
+                </CNavItem>
+                <CNavItem>
+                  <CNavLink href="#">Link</CNavLink>
+                </CNavItem>
+                <CNavItem>
+                  <CNavLink href="#" disabled>
+                    Disabled
+                  </CNavLink>
+                </CNavItem>
+              </CNav>
+            </DocsExample>
+          </CCardBody>
+        </CCard>
+      </CCol>
+      <CCol xs={12}>
+        <CCard className="mb-4">
+          <CCardHeader>
+            <strong>React Navs</strong> <small>Working with flex utilities</small>
+          </CCardHeader>
+          <CCardBody>
+            <p className="text-body-secondary small">
+              If you need responsive nav variations, consider using a series of{' '}
+              <a href="https://coreui.io/docs/utilities/flex">flexbox utilities</a>. While more
+              verbose, these utilities offer greater customization across responsive breakpoints. In
+              the example below, our nav will be stacked on the lowest breakpoint, then adapt to a
+              horizontal layout that fills the available width starting from the small breakpoint.
+            </p>
+            <DocsExample href="components/nav#working-with-flex-utilities">
+              <CNav as="nav" variant="pills" className="flex-column flex-sm-row">
+                <CNavLink href="#" active>
+                  Active
+                </CNavLink>
+                <CNavLink href="#">Link</CNavLink>
+                <CNavLink href="#">Link</CNavLink>
+                <CNavLink href="#" disabled>
+                  Disabled
+                </CNavLink>
+              </CNav>
+            </DocsExample>
+          </CCardBody>
+        </CCard>
+      </CCol>
+      <CCol xs={12}>
+        <CCard className="mb-4">
+          <CCardHeader>
+            <strong>React Navs</strong> <small>Tabs with dropdowns</small>
+          </CCardHeader>
+          <CCardBody>
+            <DocsExample href="components/nav#tabs-with-dropdowns">
+              <CNav>
+                <CNavItem>
+                  <CNavLink href="#" active>
+                    Active
+                  </CNavLink>
+                </CNavItem>
+                <CDropdown variant="nav-item">
+                  <CDropdownToggle color="secondary">Dropdown button</CDropdownToggle>
+                  <CDropdownMenu>
+                    <CDropdownItem href="#">Action</CDropdownItem>
+                    <CDropdownItem href="#">Another action</CDropdownItem>
+                    <CDropdownItem href="#">Something else here</CDropdownItem>
+                  </CDropdownMenu>
+                </CDropdown>
+                <CNavItem>
+                  <CNavLink href="#">Link</CNavLink>
+                </CNavItem>
+                <CNavItem>
+                  <CNavLink href="#" disabled>
+                    Disabled
+                  </CNavLink>
+                </CNavItem>
+              </CNav>
+            </DocsExample>
+          </CCardBody>
+        </CCard>
+      </CCol>
+      <CCol xs={12}>
+        <CCard className="mb-4">
+          <CCardHeader>
+            <strong>React Navs</strong> <small>Pills with dropdowns</small>
+          </CCardHeader>
+          <CCardBody>
+            <DocsExample href="components/nav#pills-with-dropdowns">
+              <CNav variant="pills">
+                <CNavItem>
+                  <CNavLink href="#" active>
+                    Active
+                  </CNavLink>
+                </CNavItem>
+                <CDropdown variant="nav-item">
+                  <CDropdownToggle color="secondary">Dropdown button</CDropdownToggle>
+                  <CDropdownMenu>
+                    <CDropdownItem href="#">Action</CDropdownItem>
+                    <CDropdownItem href="#">Another action</CDropdownItem>
+                    <CDropdownItem href="#">Something else here</CDropdownItem>
+                  </CDropdownMenu>
+                </CDropdown>
+                <CNavItem>
+                  <CNavLink href="#">Link</CNavLink>
+                </CNavItem>
+                <CNavItem>
+                  <CNavLink href="#" disabled>
+                    Disabled
+                  </CNavLink>
+                </CNavItem>
+              </CNav>
+            </DocsExample>
+          </CCardBody>
+        </CCard>
+      </CCol>
+    </CRow>
+  )
+}
+
+export default Navs
